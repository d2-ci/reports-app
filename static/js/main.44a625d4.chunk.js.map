{"version":3,"sources":["config/sections.config.js","redux/selectors/getIsUiBlocked.js","redux/selectors/feedback/getShowLoading.js","components/feedback/Loader.js","utils/humanReadableErrorMessage.js","utils/api.js","utils/api/helpers.js","utils/api/constants.js","utils/dataSetReport/isCustomFormType.js","redux/actions/feedback.js","utils/feedbackTypes.js","redux/actions/dataSet.js","redux/actions/orgUnitGroupSets.js","redux/actions/organisationUnits.js","redux/actions/reportPeriod.js","utils/getDocsUrl.js","components/PageHelper.js","components/SectionHeadline.js","components/feedback/Snackbar.js","redux/actions/dataSetDimensions.js","redux/actions/reportData.js","redux/actions/dataSetReport.js","redux/selectors/dataSetReport/getIsActionEnabled.js","utils/dataTransformCache.js","utils/dataSetReport/isHtmlReport.js","redux/selectors/dataSetReport/getTransformedTableData.js","pages/data-set-report/connectDataSetReport.js","utils/styles/shared.js","utils/react/propTypes.js","components/TabularReport/DownloadOptions.js","components/TabularReport/ReportTable.js","components/TabularReport/ReportComment.js","components/ReportLoader.js","pages/data-set-report/DataSetReportOutput.js","components/DatasetsDropdown.js","components/DataSetDimensions.js","redux/selectors/reportPeriod/getTranslatedPeriodTypes.js","components/PeriodPickerWithPeriodType.js","components/AvailableOrganisationUnitsTree.js","components/OrganisationUnitGroupSets.js","components/OrgUnitsTreeWithExtraOptions.js","pages/data-set-report/Form.js","pages/DataSetReport.js","components/GroupSetsDropdown.js","pages/organisation-unit-distribution-report/Form.js","redux/actions/orgUnitDistReport.js","redux/selectors/orgUnitDistReport/getIsActionEnabled.js","utils/dataTransformHelpers.js","redux/selectors/orgUnitDistReport/getTransformedTableData.js","config/style.config.js","redux/selectors/orgUnitDistReport/getTransformedChartData.js","pages/organisation-unit-distribution-report/connectOrganisationUnitDistributionReport.js","components/BarChart.js","components/TabularReport.js","pages/OrganisationUnitDistributionReport.js","pages/reporting-rate-summary/Form.js","redux/actions/reportingRateSummary.js","redux/selectors/reportingRateSummary/getIsActionEnabled.js","redux/selectors/reportingRateSummary/getTransformedTableData.js","pages/reporting-rate-summary/connectReportingRateSummary.js","pages/ReportingRateSummary.js","redux/actions/pagination.js","redux/actions/resource.js","config/search.config.js","pages/resource/connectResource.js","utils/resource/constants.js","utils/form/validators.js","pages/resource/helper.js","components/form/FormDialog.js","components/form/FormSection.js","components/form/Button.js","pages/resource/add-edit-resource/ResourceForm/Actions.js","components/form/FormRow.js","components/form/RadioButton.js","components/form/RadioButtons.js","pages/resource/add-edit-resource/ResourceForm/Attachment.js","components/form/buildingBlocks/ErrorText.js","components/form/File.js","pages/resource/add-edit-resource/ResourceForm/File.js","components/form/styles.js","components/form/Input.js","pages/resource/add-edit-resource/ResourceForm/Name.js","components/form/FormSectionTitle.js","pages/resource/add-edit-resource/ResourceForm/Title.js","pages/resource/add-edit-resource/ResourceForm/TitleDetails.js","pages/resource/add-edit-resource/ResourceForm/TitleResource.js","components/form/Select.js","pages/resource/add-edit-resource/ResourceForm/Type.js","pages/resource/add-edit-resource/ResourceForm/Url.js","pages/resource/add-edit-resource/ResourceForm.js","pages/resource/AddResource.js","redux/selectors/resource/getInitialStateAddForm.js","redux/selectors/resource/getInitialStateEditForm.js","pages/resource/EditResource.js","pages/resource/ResourceActions.js","redux/selectors/pagination/getPagerCurrentlyShown.js","components/SearchablePagedList.js","pages/Resource.js","pages/standard-report/standard.report.conf.js","utils/boolean/isFalsy.js","redux/actions/standardReportTables.js","redux/actions/standardReport.js","utils/fileToText.js","utils/standardReport/extractRequiredReportParams.js","pages/standard-report/ReportParams.js","utils/standardReport/validateRequiredParams.js","redux/selectors/organisationUnit/getSelectedOrgUnit.js","redux/selectors/reportPeriod/getSelectedReportPeriod.js","pages/standard-report/helper.js","components/form/CheckBox.js","components/form/CheckBoxes.js","components/form/CheckBoxGroups.js","pages/standard-report/add-edit-report/DesignFileDownloadButton.js","utils/boolean/identity.js","redux/selectors/standardReport/getEditFormInitialValues.js","utils/periods/relativePeriods.js","config/standardReport.js","pages/standard-report/add-edit-report/validate.js","pages/standard-report/AddEditStdReport.js","pages/standard-report/StandardReportActions.js","utils/dom/loadScript.js","pages/standard-report/HtmlReport.js","pages/standard-report/StyledHtmlReport.js","pages/standard-report/connectStandardReport.js","pages/StandardReport.js","components/MenuElement.js","pages/home/Home.js","components/NoMatch.js","components/AppRouter.js","App.js","utils/history.js","redux/reducers/feedback.js","redux/reducers/standardReport.js","redux/reducers/standardReportTables.js","redux/reducers/reportPeriod.js","redux/reducers/organisationUnits.js","redux/reducers/orgUnitGroupSets.js","redux/reducers/dataSet.js","redux/reducers/dataSetDimensions.js","redux/reducers/dataSetReport.js","redux/reducers/reportData.js","redux/reducers/pagination.js","redux/reducers/orgUnitDistReport.js","redux/reducers/resource.js","redux/rootReducer.js","redux/store.js","serviceWorker.js","utils/i18n/locales/index.js","utils/i18n/isLangRTL.js","utils/i18n/configI18n.js","utils/i18n/injectTranslationsToD2.js","index.js"],"names":["sectionOrder","sections","_sections","Object","defineProperty","key","path","concat","info","label","i18n","t","icon","description","actionText","docs","atOrgUnitDistReportSection","_ref","router","location","pathname","getShowLoading","state","feedback","showLoader","organisationUnits","loading","reportPeriod","dataSet","standardReport","loadingSendReport","resource","addEditLoading","orgUnitGroupSets","getIsUiBlocked","connectedLoader","connect","show","props","react_default","a","createElement","className","d2_ui_core","jsx","fallBackDefault","humanReadableErrorMessage","errorInstance","arguments","length","undefined","fallbackMsg","messages","httpStatusCode","message","useMessage","map","join","d2","api","mapResponseToJSArray","model","toArray","report","toJSON","standardReportsFields","formatStandardReportsResponse","reports","pager","pageSize","query","page","pageCount","total","mapCollectionToDimensionQueryString","_len","collections","Array","_key","reduce","dimensionQueryString","collection","toConsumableArray","keys","getAnalyticsFileUrls","req","extensions","buildQuery","suffix","jsonUrl","getApi","baseUrl","buildUrl","fileUrls","extension","push","url","replace","sanitizeApiUrl","includes","uploadFile","file","formData","FormData","append","post","addFileResourceUrlToResource","objectSpread","id","getFileUrls","endPoint","queryString","buildQueryString","o","acc","value","isArray","isCustomFormType","formType","DATA_DIMENSION_SUFFIXES","getD2","getDataSetReport","options","data","ds","pe","period","ou","orgUnit","selectedUnitOnly","filter","dataSetDimensions","orgUnitGroupsOptions","requestOptions","headers","Accept","resourceUrl","mergedFilters","baseQueryStr","filterQueryStr","fullQueryStr","getDataSetReportFileUrls","get","then","response","getReportingRateSummaryReport","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dataSetId","orgUnitOptions","orgUnitIds","dataDimensions","_getAnalyticsFileUrls","_getAnalyticsFileUrls2","wrap","_context","prev","next","getOrgUnitAndChildrenIds","sent","analytics","request","addDataDimension","addOrgUnitDimension","addPeriodFilter","withColumns","withRows","withTableLayout","withHideEmptyRows","withDisplayProperty","withIncludeNumDen","addFilter","slice","abrupt","stop","_x","_x2","_x3","_x4","apply","this","children","size","Promise","resolve","models","fields","_ref3","getOrgUnitDistReport","_ref4","_callee2","groupSetId","shouldShowChart","relativeUrl","_context2","t0","ougs","columns","_x5","_x6","_x7","postDocument","putDocument","resourceId","update","actionTypes","clearFeedback","type","showSnackbar","payload","showSuccessSnackBar","showErrorSnackBar","showConfirmationSnackBar","selectDataSet","loadingDataSetOptionsErrorWithFeedback","error","dispatch","defaultMessage","displayMessage","LOADING_GROUP_SETS_START","LOADING_GROUP_SETS_SUCCESS","LOADING_GROUP_SETS_ERROR","SET_GROUP_SET","loadingGroupSetsErrorDefaultMessage","loadGroupSetOptions","organisationUnitGroupSet","list","paging","groupSets","catch","loadingGroupSetsError","ORGANISATION_UNITS_LOADING_START","ORGANISATION_UNITS_RECEIVED","ORGANISATION_UNITS_ERRORED","ORGANISATION_UNIT_SELECTED","ORGANISATION_UNITS_OPTION_SELECTED","TOGGLE_SHOW_OPTIONS","loadOrganisationUnitsErrorDefaultMessage","loadOrganisationUnitsErrorWithFeedback","REPORT_PERIOD_TYPES_LOADING_START","REPORT_PERIOD_TYPES_RECEIVED","REPORT_PERIOD_TYPES_ERRORED","REPORT_PERIOD_TYPE_SELECTED","REPORT_PERIOD_SELECTED","fallbackErrorMessage","loadPeriodTypesErrorWithFeedback","getDocsVersion","_getSystemVersion","system","version","major","minor","snapshot","getDocsUrl","sectionKey","lng","PageHelper","href","target","rel","SectionHeadline","showBackButton","role","tabIndex","onClick","onBackClick","components_PageHelper","defaultProps","Snackbar","action","onActionClick","onClose","conf","mapDispatchToProps","connectedSnackbar","loadingDimensionsErrorWithFeedback","loadDimensions","getState","selected","order","dimensions","loadingDimensionsSuccess","loadingReportDataStart","loadingReportDataSuccess","reportData","loadingReportDataError","loadingReportDataSuccessWithFeedback","successMsg","outputType","loadingReportDataErrorWithFeedback","sharingReportCommentStartWithFeedback","sharingReportCommentSuccessWithFeedback","sharingReportCommentErrorWithFeedback","defaultMessge","shareDataSetReportComment","comment","_getState3","orgUnitId","selectedPeriod","endpointUrl","postDataSetReportCommentUrl","Content-Type","postDataSetReportComment","getIsActionEnabled","createDataTransformCache","inputData","transformedData","hasValidCacheFor","getCachedResult","setCachedResult","input","transformed","isHtmlReport","content","cache","getTransformedTableData","isEmpty","tables","transformTableData","title","h","column","rows","cells","x","connectDataSetReport","reportContent","isReportLoading","reportComment","dataSetReport","isActionEnabled","loadReportData","_getState2","selectedOptions","e","selectDataSetOriginal","toggleSelectedUnitOnly","setDataSetReportComment","setReportComment","formLabel","styles","style_default","container","card","actionsContainer","formOption","PropTypes","oneOfType","arrayOf","node","string","array","object","shape","name","isRequired","onBlur","func","onFocus","onChange","touched","bool","prefix","DownloadOption","download","DownloadOptions","index","DownloadOptions_DownloadOption","Row","cell","ReportTable","_ref2$content","react","header","ReportTable_Row","actionButtonPlaceholder","inputFieldPlaceholder","ReportComment","placeholder","multiline","fullWidth","raised","color","disabled","trim","ReportLoader","isLoading","DataSetReportOutput","components_ReportLoader","ReportComment_ReportComment","DownloadOptions_DownloadOptions","dangerouslySetInnerHTML","__html","table","TabularReport_ReportTable","hintTextLoading","hintTextDefault","DatasetsDropdown","menuItems","hintText","_ref$dataSet","event","DimensionDropdown","dimension","displayName","values","items","includeEmpty","emptyLabel","DataDimensionsContent","CircularProgress_default","thickness","DataSetDimensions_DimensionDropdown","dimensionId","element","DataSetDimensions","hide","contentProps","objectWithoutProperties","Fragment","DataSetDimensions_DataDimensionsContent","ConnectedDataSetDimensions","evt","translations","Daily","Weekly","WeeklyWednesday","WeeklyThursday","WeeklySaturday","WeeklySunday","BiWeekly","Monthly","BiMonthly","Quarterly","SixMonthly","SixMonthlyApril","SixMonthlyNov","Yearly","FinancialApril","FinancialJuly","FinancialOct","getTranslatedPeriodTypes","periodType","periodTypeLabelText","selectPeriodType","selectPeriod","selectedPeriodType","onPickPeriod","parsePeriod","selectOrganisationUnit","_event","d2_ui_org_unit_tree","hideMemberCount","roots","initiallyExpanded","unit","onSelectClick","labelText","OrganisationUnitGroupSetDropdown","groupSet","organisationUnitGroups","OrganisationUnitGroupSets","selectGroupSet","index_es","OrganisationUnitGroupSets_OrganisationUnitGroupSetDropdown","getExtraOptionsClassName","showOptions","isLoadingOptions","toggleShowOptions","components_AvailableOrganisationUnitsTree","components_OrganisationUnitGroupSets","Form","components_OrgUnitsTreeWithExtraOptions","components_DatasetsDropdown","onDataSetChange","components_PeriodPickerWithPeriodType","onSelectedUnitOnlyChange","onGetReportClick","isGetReportDisabled","ConnectedDataSetReport","SectionHeadline_SectionHeadline","Paper_default","data_set_report_Form","data_set_report_DataSetReportOutput","GroupSetsDropdown","components_GroupSetsDropdown","onGetChartClick","loadReport","_getState","orgUnitDistReport","getTitle","orgUnitColumnDisplayName","totalColumnDisplayName","tableData","getRows","selectedOrgUnitName","toNumericWithTotal","sort","rowA","rowB","b","nameA","toUpperCase","nameB","upperOrgUnitName","localeCompare","ascByNameWithParentBelow","cellsWithTotals","cellStr","cellVal","parseInt","FONT_FAMILY","BASE_COLOR","getTransformedChartData","chartData","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","display","text","fontSize","fontFamily","legend","position","animation","duration","getChartData","loadChart","loadTable","connectOrganisationUnitDistributionReport","groupSetsReady","BarChart","react_chartjs_2_es","TabularReport","ConnectedOrganisationUnitDistributionReport","organisation_unit_distribution_report_Form_Form","components_TabularReport","components_BarChart","React","Component","showForm","nameColumnDisplayName","rowIndexesToRead","rowsWithAllFields","parseTitle","parseHeaders","row","rowIndex","parseFloat","metaData","dx","dimensionCode","ConnectedReportingRateSummary","connectReportingRateSummary","reporting_rate_summary_Form_Form","GO_TO_NEXT_PAGE","GO_TO_PREV_PAGE","SET_PAGINATION","RESET_PAGINATION","goToNextPage","goToPrevPage","setPagination","pagination","loadingResourcesErrorWithFeedback","loadResources","search","requestData","getResources","resources","documents","debouncedLoadResources","debounce","setSearchAndLoadResources","searchTerm","setSearch","confirmationMessage","successMessage","deleteResourceSuccessWithFeedback","defaultDeleteResourceErrorMessage","deleteResourceErrorWithFeedback","closeContextMenu","refreshList","loadingAddResourceError","addNewResource","_ref5","fileResource","postResource","defaultAddResourceErrorMessage","loadingAddResourceErrorWithFeedback","updateResource","_ref6","putResource","selectedResource","loadingEditResourceErrorWithFeedback","goToNextPageOrig","goToPrevPageOrig","requestDeleteResource","deleteResource","delete","addResource","viewResource","window","open","editResource","showSharingSettings","connectResource","selectedAction","loadingResources","resourceTypes","resourceTypeOptions","resourceActions","contextMenuIcons","_contextMenuIcons","isRequiredWhen","when","extractFileAndFormattedResource","omit","attachment","external","FormDialog","Dialog_default","maxWidth","DialogTitle_default","FormSection","render","Button","isPrimary","Actions","DialogActions_default","Button_Button","onSubmitLabel","onSubmit","submitDisabled","onCancelLabel","onCancel","FormRow","RadioButton","assign","htmlFor","RadioButtons","withStyles","margin","FormControl_default","classes","FormHelperText_default","showError","react_final_form_es","meta","option","component","propTypes","Attachment","FormRow_FormRow","errorTextColor","red","ErrorText","showErrorText","fileBlobAsValue","persist","files","formatBlobToString","File","format","fieldProps","ErrorText_ErrorText","Button_default","variant","File_File","validate","inputWrapper","Input","InputLabel_default","Input_default","Name","FormSectionTitle","Title","FormSectionTitle_FormSectionTitle","TitleDetails","Title_Title","TitleResource","SelectField","Select_default","native","showEmptyOption","Select","Select_SelectField","Type","Url","ResourceForm","FormDialog_FormDialog","initialValues","handleSubmit","valid","DialogContent_default","FormSection_FormSection","TitleDetails_TitleDetails","Name_Name","Type_Type","TitleResource_TitleResource","Url_Url","Attachment_Attachment","ResourceForm_File_File","isFileRequired","Actions_Actions","ConnectedAddResource","_extractFileAndFormat","ResourceForm_ResourceForm","getInitialStateEditForm","ConnectedEditResource","ResourceActions","d2_ui_sharing_dialog_default","onRequestClose","handleClose","getPagerCurrentlyShown","_state$pagination","projectedEnd","end","searchText","pagerTotal","pagerHasNextPage","pagerHasPreviousPage","pagerCurrentlyShown","hasNextPage","hasPreviousPage","currentlyShown","onNextPageClick","onPreviousPageClick","TextField_default","searchInputValue","searchInputChangeHandler","d2_ui_table_default","contextMenuActions","primaryAction","isContextActionAllowed","fab","addButtonClickHandler","createContextMenuOptions","ConnectedResource","Resource","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","contextMenuOptions","components_SearchablePagedList","document","_actions","access","read","manage","externalize","resource_ResourceActions","CONTEXT_MENU_ACTION","CONTEXT_MENU_ICONS","_CONTEXT_MENU_ICONS","TYPES","reportTypes","reportTypeOptions","cacheStrategies","isFalsy","loadingStandardReportTablesErrorWithFeedback","loadStandardReportTables","formattedReportTables","reportTables","SET_SELECTED_REPORT","LOAD_STANDARD_REPORTS","LOADING_STANDARD_REPORTS_START","LOADING_STANDARD_REPORTS_SUCCESS","LOADING_STANDARD_REPORTS_ERROR","LOADING_STANDARD_REPORTS_DETAILS_START","LOADING_STANDARD_REPORTS_DETAILS_SUCCESS","LOADING_STANDARD_REPORTS_DETAILS_ERROR","SET_SEARCH","ADD_REPORT_FORM_SHOW","ADD_REPORT_FORM_HIDE","EDIT_REPORT_FORM_SHOW","EDIT_REPORT_FORM_HIDE","CREATE_REPORT_SHOW","CREATE_REPORT_HIDE","SHARING_SETTINGS_SHOW","SHARING_SETTINGS_HIDE","REQUEST_DELETE_STANDARD_REPORT","DELETE_STANDARD_REPORT_START","DELETE_STANDARD_REPORT_SUCCESS","DELETE_STANDARD_REPORT_ERROR","HTML_REPORT_SHOW","HTML_REPORT_HIDE","CLOSE_CONTEXT_MENU","STANDARD_REPORT_SEND_START","STANDARD_REPORT_SEND_SUCCESS","STANDARD_REPORT_SEND_ERROR","DEFINE_REQUIRED_PARAMS","REQUIRED_PARAMS_ERROR","GENERATE_PDF_REPORT","CANCEL_GENERATING_PDF_REPORT","loadingStandardReportsErrorWithFeedback","debouncedLoadStandardReports","loadStandardReports","deleteStandardReportSuccessWithFeedback","deleteStandardReportErrorWithFeedback","postLoadStandartReportTables","nameFilter","on","ilike","getFilteredStandardReports","deleteStandardReport","selectedReport","loadingStandardReportsDetailsError","loadStandardReportDetails","getStandardReportDetails","sendStandardReport","isEdit","blob","formattedReport","relativePeriods","cur","reportParams","reportTable","cleanedReport","doRequest","updateStandardReport","postStandardReport","errorMessage","designContent","reject","fileReader","FileReader","readAsText","onload","readyState","result","generateHtmlReport","reportRequestBody","organisationUnit","requestBody","Date","getTime","getStandardReportHtmlReport","generatingHtmlReportErrorDefaultMessage","generatingHtmlReportErrorWithFeedback","getStandardReportTableRequiredParams","queryParams","getStandardReportTable","showReportParams","setSelectedReport","requiredParams","omitBy","paramReportingPeriod","paramOrganisationUnit","paramParentOrganisationUnit","paramGrandParentOrganisationUnit","extractRequiredReportParams","defineRequiredReportParams","generatePdfReport","reportQueryString","reportPath","labelCancel","labelSubmit","colorError","buttonStyles","primaryButtonStyle","theme","palette","primary2Color","primary1Color","ConnectedReportParams","reportParamsErrors","cancelGeneratingPdfReport","submitRequiredReportParams","errors","getSelectedOrgUnit","getSelectedReportPeriod","validateRequiredParams","requiredReportParamsError","showContextAction","checkboxStyle","CheckBox","Checkbox_default","CheckBoxes","CheckBoxGroups","displayError","groups","group","DesignFileDownloadButton","isEditing","reportType","reportId","identity","getEditFormInitialValues","cacheStrategy","standardReportTables","reportParameterOptions","validateNewReport","validateName","validateReportTable","validateDesignContent","validateCacheStrategy","validateReportUpdate","ConnectedComponent","edit","DesignFileDownloadButton_DesignFileDownloadButton","CheckBoxGroups_CheckBoxGroups","StandardReportActions","handleError","addStandardReport","onError","loadScript","src","serverUrl","systemInfo","contextPath","script","scriptPromise","head","appendChild","HtmlReport","ready","_this2","setState","html","newProps","labelClose","containerStyle","titleStyle","contentStyle","StyledReportData","onReportCloseClick","fullScreen","standard_report_HtmlReport","connectStandardReport","fetchReportTables","addReportFormShow","createReport","editReport","editReportFormShow","sharingSettings","sharingSettingsShow","requestDeleteStandardReport","showReportData","hideReportData","closeReport","ConnectedStandardReport","StandardReport","standard_report_StandardReportActions","console","handleDisplayReportData","StyledHtmlReport","MenuElement","entry","Home","menuCards","Link","to","components_MenuElement","NoMatch","AppRouter","Switch","Route","exact","DataSetReport","ReportingRateSummary","OrganisationUnitDistributionReport","MUI3Theme","createMui3Theme","mui3theme","App","loadOrganisationUnits","loadPeriodTypes","loadDataSetOptions","sidebarSections","section","containerElement","build_es","HeaderBar_default","appName","onChangeSection","currentSection","components_AppRouter","global","PureComponent","childContextTypes","substring","level","modelCollection","loadOrganisationUnitsSuccess","resp","periodTypes","loadPeriodTypesSuccess","loadingDataSetOptionsSuccess","history","createHistory","defaultState","loadingError","requestDelete","loadingDetails","ACTIONS","LOCATION_CHANGE","defaultSelected","allActionTypes","nextPage","prevPage","defaultSelectedResource","combineReducers","connectRouter","types","SHARIING_SETTINGS_HIDE","reportDataActionTypes","curSelected","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","routerMiddleware","reduxThunk","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","moment","locale","addResources","enTranslations","setDefaultNamespace","changeLanguage","langs","prefixed","c","isLangRTL","code","startsWith","configI18n","userSettings","lang","keyUiLocale","body","setAttribute","d2UiTranslations","settings","app_search_placeholder","profile","account","help","log_out","about_dhis2","manage_my_apps","no_results_found","interpretations","display_name","report_table","actions","add_users_and_user_groups","enter_names","share","metadata","created_by","who_has_access","external_access","can_edit_and_view","can_view","can_view_only","no_access","public_access","public_can_edit","public_can_view","anyone_can_find_view_and_edit","anyone_can_find_and_view","close","week","month","year","biMonth","day","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","jan-feb","mar-apr","may-jun","jul-aug","sep-oct","nov-dec","nov-apr","may-oct","quarter","Q1","Q2","Q3","Q4","sixMonth","jan-jun","jul-dec","apr-sep","oct-mar","biWeek","bi_week","injectTranslationsToD2","init","process","schemas","d2Instance","Api","getUserSettings","ReactDOM","es","esm","src_App","getElementById","URL","origin","addEventListener","fetch","contentType","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.44a625d4.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n'\n\nexport const STANDARD_REPORT_SECTION_KEY = 'standard-report'\nexport const DATA_SET_REPORT_SECTION_KEY = 'data-set-report'\nexport const REPORTING_RATE_SUMMARY_SECTION_KEY = 'reporting-rate-summary'\nexport const RESOURCE_SECTION_KEY = 'resource'\nexport const ORG_UNIT_DIST_REPORT_SECTION_KEY =\n    'organisation-unit-distribution-report'\nexport const DATA_APPROVAL_SECTION_KEY = 'data-approval'\n\nexport const sectionOrder = [\n    STANDARD_REPORT_SECTION_KEY,\n    DATA_SET_REPORT_SECTION_KEY,\n    REPORTING_RATE_SUMMARY_SECTION_KEY,\n    RESOURCE_SECTION_KEY,\n    ORG_UNIT_DIST_REPORT_SECTION_KEY,\n]\n\nexport const sections = {\n    [STANDARD_REPORT_SECTION_KEY]: {\n        key: STANDARD_REPORT_SECTION_KEY,\n        path: `/${STANDARD_REPORT_SECTION_KEY}`,\n        info: {\n            label: i18n.t('Standard Report'),\n            icon: i18n.t('bar_chart'),\n            description: i18n.t(\n                'View and add reports based on the JasperReports library. These can be based on report tables and can be designed in iReport.'\n            ),\n            actionText: i18n.t('View Reports'),\n            docs: 'using_reporting_standard_reports',\n        },\n    },\n    [DATA_SET_REPORT_SECTION_KEY]: {\n        key: DATA_SET_REPORT_SECTION_KEY,\n        path: `/${DATA_SET_REPORT_SECTION_KEY}`,\n        info: {\n            label: i18n.t('Data Set Report'),\n            icon: 'assignment',\n            description: i18n.t(\n                'View data set reports. These reports are based on data entry screens and will produce a report with aggregated data.'\n            ),\n            actionText: i18n.t('Get Report'),\n            docs: 'using_reporting_dataset_reports',\n        },\n    },\n    [REPORTING_RATE_SUMMARY_SECTION_KEY]: {\n        key: REPORTING_RATE_SUMMARY_SECTION_KEY,\n        path: `/${REPORTING_RATE_SUMMARY_SECTION_KEY}`,\n        info: {\n            label: i18n.t('Reporting Rate Summary'),\n            description: i18n.t(\n                'Browse the reporting rates of data sets by organisation unit and period based on various criteria for submission.'\n            ),\n            actionText: i18n.t('Get Report'),\n            icon: 'format_list_bulleted',\n            docs: 'using_reporting_reporting_rate_summary',\n        },\n    },\n    [RESOURCE_SECTION_KEY]: {\n        key: RESOURCE_SECTION_KEY,\n        path: `/${RESOURCE_SECTION_KEY}`,\n        info: {\n            label: i18n.t('Resource'),\n            description: i18n.t(\n                'View and add resources. These resources can be uploaded documents or URLs on the web.'\n            ),\n            actionText: i18n.t('View Resources'),\n            icon: 'cloud_upload',\n            docs: 'using_reporting_resources',\n        },\n    },\n    [ORG_UNIT_DIST_REPORT_SECTION_KEY]: {\n        key: ORG_UNIT_DIST_REPORT_SECTION_KEY,\n        path: `/${ORG_UNIT_DIST_REPORT_SECTION_KEY}`,\n        info: {\n            label: i18n.t('Organisation Unit Distribution Report'),\n            description: i18n.t(\n                'Browse the organisation unit distribution report based on the organisation unit group sets and its groups.'\n            ),\n            actionText: i18n.t('Get Report'),\n            icon: 'device_hub',\n            docs: 'using_reporting_orgunit_distribution_reports',\n        },\n    },\n}\n","import {\n    sections,\n    ORG_UNIT_DIST_REPORT_SECTION_KEY,\n} from '../../config/sections.config'\n\nexport const getIsUiBlocked = state =>\n    state.organisationUnits.loading ||\n    state.reportPeriod.loading ||\n    state.dataSet.loading ||\n    state.standardReport.loadingSendReport ||\n    state.resource.addEditLoading ||\n    (atOrgUnitDistReportSection(state) && state.orgUnitGroupSets.loading)\n\nconst atOrgUnitDistReportSection = ({ router }) =>\n    router.location.pathname === sections[ORG_UNIT_DIST_REPORT_SECTION_KEY].path\n","import { getIsUiBlocked } from '../getIsUiBlocked'\n\nexport const getShowLoading = state =>\n    state.feedback.showLoader || getIsUiBlocked(state)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { CircularProgress } from '@dhis2/d2-ui-core'\nimport { getShowLoading } from '../../redux/selectors/feedback/getShowLoading'\n\nconst Loader = props =>\n    props.show ? (\n        <div className=\"loading-container\">\n            <div className=\"progress-wrap\">\n                <CircularProgress />\n            </div>\n            <style jsx>{`\n                .loading-container {\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    height: 100%;\n                    width: 100%;\n                    background: rgba(0, 0, 0, 0.4);\n                    z-index: 3000;\n                }\n                .progress-wrap {\n                    position: absolute;\n                    top: 50%;\n                    left: 50%;\n                    transform: 'translate(-50%, -50%)';\n                }\n            `}</style>\n        </div>\n    ) : null\n\nLoader.propTypes = {\n    show: PropTypes.bool.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    show: getShowLoading(state),\n})\n\nconst connectedLoader = connect(mapStateToProps)(Loader)\n\nexport { connectedLoader as Loader, Loader as LoaderOriginal }\n","/* eslint-disable max-params */\n\nimport i18n from '@dhis2/d2-i18n'\n\n/**\n * It is preferred to show the error message from the server it is a 401-499 code\n * The final error message is determined with the following priority\n * messageFromError > fallbackMessageArgument > defaultFallBackMessage\n * @param {Object} error - The error object\n * @param {Number} error.httpStatusCode - The error status code\n * @param {Number} error.message - The error message\n * @param {String} fallbackMsg - The message to show in case the actual message is not human readable\n */\n\nexport const fallBackDefault = i18n.t(\n    'Something went wrong when processing your request.'\n)\n\nexport default function humanReadableErrorMessage(\n    errorInstance = {},\n    fallbackMsg = fallBackDefault\n) {\n    const { messages, httpStatusCode } = errorInstance\n    let { message } = errorInstance\n    const useMessage =\n        (httpStatusCode && httpStatusCode >= 400 && httpStatusCode < 500) ||\n        (!httpStatusCode && messages && messages.length > 0)\n\n    if (!message && messages && messages.length > 0) {\n        message = messages.map(({ message }) => message).join(', ')\n    }\n\n    return useMessage ? message : fallbackMsg\n}\n","/* eslint-disable max-params */\n\nimport { isDevelopment } from './env/isDevelopment'\nimport {\n    addFileResourceUrlToResource,\n    uploadFile,\n    standardReportsFields,\n    addFilterForName,\n    formatStandardReportsResponse,\n    mapCollectionToDimensionQueryString,\n    mapResponseToArrayOfIds,\n    getAnalyticsFileUrls,\n    buildQueryString,\n    getFileUrls,\n    postDataSetReportCommentUrl,\n    getDataSetReportFileUrls,\n    sanitizeApiUrl,\n} from './api/helpers'\nimport { isCustomFormType } from './dataSetReport/isCustomFormType'\n\nexport const RESOURCE_ENDPOINT = 'documents'\nconst DATA_DIMENSION_SUFFIXES = [\n    'ACTUAL_REPORTS',\n    'EXPECTED_REPORTS',\n    'REPORTING_RATE',\n    'ACTUAL_REPORTS_ON_TIME',\n    'REPORTING_RATE_ON_TIME',\n]\nconst STANDARD_REPORTS_ENDPOINT = 'reports'\n\nlet d2\nlet api\n\n/**\n * Sets d2 and the api\n */\nexport const initApi = d2Instance => {\n    d2 = d2Instance\n    api = d2.Api.getApi()\n\n    if (isDevelopment()) {\n        window.d2 = d2\n        window.d2Api = api\n    }\n}\n\n/**\n * @return {Object} d2 instance\n */\nexport const getD2 = () => d2\n\n/**\n * @return {Object} d2 api instance\n */\nexport const getApi = () => api\n\n/**\n * @returns {string} context path\n */\nexport const getContextPath = () => d2.system.systemInfo.contextPath\n\n/**\n * @typedef {Object} Version\n * @property {number} major The major version\n * @property {number} minor The minor version\n * @property {boolean} snapshot Flag to indicate if build is a snapshot\n */\n\n/**\n * @returns {Version} The dhis2-core instance version\n */\nexport const getSystemVersion = () => d2.system.version\n\n/**\n * @return {Promise} Period types\n */\nexport const getPeriodTypes = () =>\n    api.get('periodTypes').then(resp => resp.periodTypes)\n\n/**\n * @return {Promise} Organisation units\n */\nexport const getOrganisationUnits = () =>\n    d2.models.organisationUnits\n        .list({\n            paging: false,\n            level: 1,\n            fields: [\n                'id',\n                'displayName',\n                'path',\n                'children::isNotEmpty',\n                'memberCount',\n            ],\n        })\n        .then(modelCollection => modelCollection.toArray())\n\n/**\n * @param {Array} dataSetOptions\n * @param {Array} orgUnitGroupsOptions\n * @param {string} dataSetId\n * @param {string} orgUnit\n * @param {string} period\n * @param {bool} selectedUnitOnly\n * @returns {Promise}\n */\nexport const getDataSetReport = options => {\n    const endPoint = 'dataSetReport'\n    const url = isCustomFormType(options.dataSet.formType)\n        ? `${endPoint}/custom`\n        : endPoint\n    const data = {\n        ds: options.dataSet.id,\n        pe: options.period,\n        ou: options.orgUnit,\n        selectedUnitOnly: options.selectedUnitOnly,\n        filter: mapCollectionToDimensionQueryString(\n            options.dataSetDimensions,\n            options.orgUnitGroupsOptions\n        ),\n    }\n    const requestOptions = isCustomFormType(options.dataSet.formType)\n        ? { headers: { Accept: 'text/html' } }\n        : {}\n    const fileUrls = getDataSetReportFileUrls(endPoint, options)\n\n    return api\n        .get(url, data, requestOptions)\n        .then(response => ({ data: response, fileUrls }))\n}\n\n/**\n * @param {string} dataSetId\n * @returns {Promise<array>} The dimensions for a given dataset\n */\nexport const getDimensions = dataSetId =>\n    api\n        .get(`dimensions/dataSet/${dataSetId}`, {\n            fields: ['id', 'displayName', 'items[id,displayName]'].join(','),\n            order: 'name:asc',\n            paging: false,\n        })\n        .then(({ dimensions }) => dimensions)\n\n/**\n * @param {string} dataSetId\n * @param {string} orgUnitId\n * @param {string} period\n * @param {string} comment\n * @returns {Promise}\n */\nexport const postDataSetReportComment = (\n    dataSetId,\n    orgUnitId,\n    period,\n    comment\n) => {\n    const endpointUrl = postDataSetReportCommentUrl(\n        dataSetId,\n        orgUnitId,\n        period\n    )\n    const requestHeaders = { headers: { 'Content-Type': 'text/plain' } }\n    return api.post(endpointUrl, comment, requestHeaders)\n}\n\n/**\n * @param {Object} orgUnit\n * @param {string} dataSetId\n * @param {string} period\n * @param {Object} orgUnitOptions\n * @returns {Promise}\n */\nexport const getReportingRateSummaryReport = async (\n    orgUnit,\n    dataSetId,\n    period,\n    orgUnitOptions\n) => {\n    const orgUnitIds = await getOrgUnitAndChildrenIds(orgUnit)\n    const dataDimensions = DATA_DIMENSION_SUFFIXES.map(\n        suffix => `${dataSetId}.${suffix}`\n    )\n    const req = new d2.analytics.request()\n        .addDataDimension(dataDimensions)\n        .addOrgUnitDimension(orgUnitIds)\n        .addPeriodFilter(period)\n        .withColumns('dx')\n        .withRows('ou')\n        .withTableLayout()\n        .withHideEmptyRows()\n        .withDisplayProperty('SHORTNAME')\n        .withIncludeNumDen(false)\n\n    for (const key in orgUnitOptions) {\n        if (orgUnitOptions[key]) {\n            req.addFilter(key, orgUnitOptions[key])\n        }\n    }\n\n    // Instead of calling `d2.analytics.aggregate.get(req)`, which spawns two parallel requests,\n    // we're just building the .json url from the request instance and call the regular `api.get(url)`,\n    // which only spawns a single request\n    const extensions = ['json', 'xls', 'csv']\n    const [{ url }, ...fileUrls] = getAnalyticsFileUrls(req, extensions)\n    return api.get(sanitizeApiUrl(url)).then(data => ({ ...data, fileUrls }))\n}\n\n/**\n * @param {Object} orgUnit\n * @returns {Promise} - Array of IDs of the orgUnit and its direct descendants\n */\nexport const getOrgUnitAndChildrenIds = orgUnit => {\n    const children = orgUnit.children.size\n        ? Promise.resolve(orgUnit.children)\n        : d2.models.organisationUnits\n              .get(orgUnit.id, { fields: ['children[id]'] })\n              .then(({ children }) => children)\n\n    return children.then(children => [\n        orgUnit.id,\n        ...mapResponseToArrayOfIds(children),\n    ])\n}\n\n/**\n * @returns {Promise}\n */\nexport const getOrgUnitGroupSets = () =>\n    d2.models.organisationUnitGroupSet.list({\n        paging: false,\n        fields: 'id,displayName,organisationUnitGroups[id,displayName]',\n    })\n\n/**\n * @param {Object} orgUnit\n * @param {string} groupSetId\n * @returns {Promise}\n */\nexport const getOrgUnitDistReport = async (\n    orgUnit,\n    groupSetId,\n    shouldShowChart\n) => {\n    const orgUnitIds = shouldShowChart\n        ? orgUnit.id\n        : await getOrgUnitAndChildrenIds(orgUnit)\n\n    const endPoint = 'orgUnitAnalytics'\n    const queryString = buildQueryString({\n        ou: orgUnitIds,\n        ougs: groupSetId,\n        columns: groupSetId,\n    })\n    const relativeUrl = `${endPoint}?${queryString}`\n    const fileUrls = getFileUrls(endPoint, queryString, ['xls', 'pdf'])\n\n    return api.get(relativeUrl).then(response => ({ ...response, fileUrls }))\n}\n\n/**\n * @returns {Promise}\n */\nexport const getResources = (page, pageSize, search) => {\n    const requestData = {\n        page,\n        pageSize,\n        fields: 'displayName,id,url,external,access',\n    }\n\n    if (search) {\n        requestData.filter = `displayName:ilike:${search}`\n    }\n\n    return api.get(RESOURCE_ENDPOINT, requestData)\n}\n\n/**\n * @returns {Promise}\n */\nexport const deleteResource = resourceId =>\n    api.delete(`${RESOURCE_ENDPOINT}/${resourceId}`)\n\n/**\n * @returns {Promise}\n */\nexport const getStandardReportTables = () =>\n    api.get('reportTables', { paging: false, fields: 'id,name' })\n\n/**\n * returns {Promise}\n */\nexport const getStandardReportTable = (id, queryParams = {}) =>\n    api.get(`reportTables/${id}`, queryParams)\n\n/**\n * @param {Object} report\n * @returns {Promise}\n */\nexport const postStandardReport = report =>\n    api.post(STANDARD_REPORTS_ENDPOINT, report)\n\n/**\n * @param {Object} report\n * @returns {Promise}\n */\nexport const updateStandardReport = report =>\n    api.update(`${STANDARD_REPORTS_ENDPOINT}/${report.id}`, report)\n\n/**\n * @returns {Promise}\n */\nexport const getDataSetOptions = () =>\n    d2.models.dataSet\n        .list({ paging: false, fields: 'id,displayName,formType' })\n        .then(response => response.toArray())\n\n/**\n * @param {Object} api\n * @param {Object} resource\n * @returns {Promise}\n */\nexport const postDocument = (api, resource) =>\n    api.post(RESOURCE_ENDPOINT, resource)\n\n/**\n * @param {Object} api\n * @param {string} resourceId\n * @param {Object} resource\n * @returns {Promise}\n */\nexport const putDocument = (api, resourceId, resource) =>\n    api.update(`${RESOURCE_ENDPOINT}/${resourceId}`, resource)\n\n/**\n * @param {Object} resource\n * @param {File} [file] - an optional file\n * @returns {Promise}\n */\nexport const postResource = (resource, file = null) =>\n    file\n        ? uploadFile(api, file)\n              .then(({ response }) =>\n                  Promise.resolve(\n                      addFileResourceUrlToResource(\n                          resource,\n                          response.fileResource\n                      )\n                  )\n              )\n              .then(resource => postDocument(api, resource))\n        : postDocument(api, resource)\n\n/**\n * @param {Object} resource\n * @param {File} [file] - an optional file\n * @returns {Promise}\n */\nexport const putResource = (resourceId, resource, file = null) =>\n    file\n        ? uploadFile(api, file)\n              .then(({ response }) =>\n                  Promise.resolve(\n                      addFileResourceUrlToResource(\n                          resource,\n                          response.fileResource\n                      )\n                  )\n              )\n              .then(resource => putDocument(api, resourceId, resource))\n        : putDocument(api, resourceId, resource)\n\n/**\n * =================================\n * Standard report\n * =================================\n */\n\n/**\n * @param {number} page\n * @param {number} pageSize\n * @param {string} nameFilter\n * @return {Promise}\n */\nexport const getFilteredStandardReports = (page, pageSize, nameFilter) =>\n    addFilterForName(nameFilter, d2.models.report)\n        .list({ page, pageSize, fields: standardReportsFields })\n        .then(formatStandardReportsResponse)\n\n/**\n * @param {string} id\n * @returns {Promise}\n */\nexport const getStandardReportDetails = id =>\n    api.get(`${STANDARD_REPORTS_ENDPOINT}/${id}`)\n\n/**\n * @param {string} id\n * @return {Promise}\n */\nexport const deleteStandardReport = id =>\n    api.delete(`${STANDARD_REPORTS_ENDPOINT}/${id}`)\n\n/**\n * @param {string} id\n * @returns {Promise}\n */\nexport const getStandardReportHtmlReport = (id, requestBody) =>\n    api.get(`reports/${id}/data.html`, {\n        t: new Date().getTime(),\n        ...requestBody,\n    })\n","import { FILE_RESOURCES_ENDPOINT } from './constants'\nimport { getApi } from '../api'\n\n/**\n * @param {Object} d2 object retrieved by the list() method\n * @return {Array}\n */\nconst mapResponseToJSArray = model =>\n    model.toArray().map(report => report.toJSON())\n\n/**\n * @param {Object} d2 ModelCollection instance\n * @return {Array<string>}\n */\nexport const mapResponseToArrayOfIds = model =>\n    model.toArray().map(({ id }) => id)\n\n/**\n * @param {string} name\n * @param {Object} model\n * @return {Object} The model with the filter if it wasn't an empty string otherwise the model without the filter\n */\nexport const addFilterForName = (name, model) =>\n    !name\n        ? model\n        : model\n              .filter()\n              .on('displayName')\n              .ilike(name)\n\n/**\n * Required fields for displaying the standard reports\n */\nexport const standardReportsFields = [\n    'displayName',\n    'type',\n    'id',\n    'reportTable[id,displayName]',\n    'access',\n]\n\n/**\n * @param {Promise} request\n * @returns {Object}\n */\nexport const formatStandardReportsResponse = model => ({\n    reports: mapResponseToJSArray(model),\n    pager: {\n        pageSize: model.pager.query.pageSize,\n        page: model.pager.page,\n        pageCount: model.pager.pageCount,\n        total: model.pager.total,\n    },\n})\n\n/**\n * @param {...Object} collections\n * @returns {string[]}\n */\nexport const mapCollectionToDimensionQueryString = (...collections) =>\n    collections.reduce(\n        (dimensionQueryString, collection) => [\n            ...dimensionQueryString,\n            ...Object.keys(collection).map(key => `${key}:${collection[key]}`),\n        ],\n        []\n    )\n/**\n * @param {Object} req - D2 AnalyticsRequest instance\n * @param {Array<String>} extensions - File extensions needed\n * @returns {Object} - An object containing the download links for the requested file extensions\n */\nexport const getAnalyticsFileUrls = (req, extensions) => {\n    const query = req.buildQuery()\n    const suffix = Object.keys(query).reduce(\n        (suffix, key) => (suffix += `&${key}=${query[key]}`),\n        ''\n    )\n    const jsonUrl = `${getApi().baseUrl}/${req.buildUrl()}${suffix}`\n\n    return extensions.reduce((fileUrls, extension) => {\n        fileUrls.push({\n            extension,\n            url: jsonUrl.replace('analytics.json?', `analytics.${extension}?`),\n        })\n        return fileUrls\n    }, [])\n}\n\nexport const sanitizeApiUrl = url => {\n    // Because dev envs use an absolute path, but deployed instances a relative one\n    // And because `d2.get` will prepend \"/api\" for relative paths, we need to remove\n    // \"api/\" from the string for relative paths\n    return url.includes('../api') ? url.replace('../api', '..') : url\n}\n\nexport const getDataSetReportFileUrls = (resourceUrl, options) => {\n    const mergedFilters = {\n        ...options.dataSetDimensions,\n        ...options.orgUnitGroupsOptions,\n    }\n    const baseQueryStr = buildQueryString({\n        ds: options.dataSet.id,\n        pe: options.period,\n        ou: options.orgUnit,\n        selectedUnitOnly: options.selectedUnitOnly,\n    })\n    const filterQueryStr = Object.keys(mergedFilters)\n        .map(key => `filter=${key}:${mergedFilters[key]}`)\n        .join('&')\n    const fullQueryStr = filterQueryStr\n        ? `${baseQueryStr}&${filterQueryStr}`\n        : baseQueryStr\n\n    return getFileUrls(resourceUrl, fullQueryStr, ['xls', 'pdf'])\n}\n\n/**\n * @param {Object} api\n * @param {File} file\n * @returns {Promise}\n */\nexport const uploadFile = (api, file) => {\n    const formData = new FormData()\n    formData.append('file', file)\n    formData.append('domain', 'DOCUMENT')\n\n    return api.post(FILE_RESOURCES_ENDPOINT, formData)\n}\n\n/**\n * @param {Object} resource\n * @param {File} file\n * @returns {Object}\n */\nexport const addFileResourceUrlToResource = (resource, file) => ({\n    ...resource,\n    url: file.id || resource.url,\n})\n\n/**\n * @param {String} endpoint\n * @param {string} queryString\n * @param {Array<String>} extensions - file extensions to produce\n * @returns {Array} - Array of objects with extension and url properties\n */\nexport const getFileUrls = (endPoint, queryString, extensions) =>\n    extensions.map(extension => ({\n        extension,\n        url: `${getApi().baseUrl}/${endPoint}.${extension}?${queryString}`,\n    }))\n\n/**\n * Takes an object and returns a query string\n * For arrays it will create a semi-colon-delimited string\n * @param {Object} o - object to base the queryString upon\n * @example\n * buildQueryString({a: 'yeah', b: ['u', 1]})\n * // returns 'a=yeah&b=u;1'\n * @returns {String} - query string\n */\nexport const buildQueryString = o => {\n    return Object.keys(o)\n        .reduce((acc, key) => {\n            const value = Array.isArray(o[key]) ? o[key].join(';') : o[key]\n            acc.push(`${key}=${value}`)\n            return acc\n        }, [])\n        .join('&')\n}\n\n// Url creaters\nexport const postDataSetReportCommentUrl = (dataSetId, orgUnitId, period) =>\n    `interpretations/dataSetReport/${dataSetId}?pe=${period}&ou=${orgUnitId}`\n","export const DATA_SET_DIMENSIONS_ENDPOINT = 'dimensions/dataSet'\nexport const DATA_SET_REPORT_INTERPOLATION_ENDPOINT =\n    'interpretations/dataSetReport'\nexport const DATA_SET_REPORTS_ENDPOINT = 'dataSetReport'\nexport const FILE_RESOURCES_ENDPOINT = 'fileResources'\nexport const ORG_UNIT_DISTRIBUTION_REPORT_ENDPOINT = 'orgUnitAnalytics'\nexport const REPORT_TABLES_ENDPOINT = 'reportTables'\nexport const REPORTING_RATE_SUMMARY_ENDPOINT =\n    'organisationUnits/%orgUnitId%/rateSummary'\nexport const RESOURCE_ENDPOINT = 'documents'\nexport const STANDARD_REPORTS_ENDPOINT = 'reports'\n\n// Url creaters\nexport const postDataSetReportCommentUrl = (dataSetId, orgUnitId, period) =>\n    `${DATA_SET_REPORT_INTERPOLATION_ENDPOINT}/${dataSetId}?pe=${period}&ou=${orgUnitId}`\n\nexport const DATA_DIMENSION_SUFFIXES = [\n    'ACTUAL_REPORTS',\n    'EXPECTED_REPORTS',\n    'REPORTING_RATE',\n    'ACTUAL_REPORTS_ON_TIME',\n    'REPORTING_RATE_ON_TIME',\n]\n","export const isCustomFormType = formType => formType === 'CUSTOM'\n","import * as FEEDBACK_TYPES from '../../utils/feedbackTypes'\nexport const actionTypes = {\n    FEEDBACK_CLEAR: 'FEEDBACK_CLEAR',\n    FEEDBACK_SHOW_LOADER: 'FEEDBACK_SHOW_LOADER',\n    FEEDBACK_SHOW_SNACKBAR: 'FEEDBACK_SHOW_SNACKBAR',\n}\n\nexport const clearFeedback = () => ({\n    type: actionTypes.FEEDBACK_CLEAR,\n})\n\nexport const showLoader = () => ({\n    type: actionTypes.FEEDBACK_SHOW_LOADER,\n})\n\nexport const showSnackbar = (\n    message,\n    type = FEEDBACK_TYPES.ACTION_MESSAGE\n) => ({\n    type: actionTypes.FEEDBACK_SHOW_SNACKBAR,\n    payload: { message, type },\n})\n\nexport const showSuccessSnackBar = message =>\n    showSnackbar(message, FEEDBACK_TYPES.SUCCESS)\n\nexport const showErrorSnackBar = message =>\n    showSnackbar(message, FEEDBACK_TYPES.ERROR)\n\nexport const showWarningSnackBar = message =>\n    showSnackbar(message, FEEDBACK_TYPES.WARNING)\n\nexport const showConfirmationSnackBar = message =>\n    showSnackbar(message, FEEDBACK_TYPES.ACTION_MESSAGE)\n\n// TODO: remove this\nexport const updateFeedbackState = () => ({})\n","export const ACTION_MESSAGE = 'ACTION_MESSAGE'\n// TODO: remove loading\nexport const LOADING = 'LOADING'\nexport const ERROR = 'ERROR'\nexport const SUCCESS = 'SUCCESS'\nexport const WARNING = 'WARNING'\n","import humanReadableErrorMessage from '../../utils/humanReadableErrorMessage'\nimport i18n from '@dhis2/d2-i18n'\nimport { getDataSetOptions } from '../../utils/api'\nimport { showErrorSnackBar } from './feedback'\n\nexport const actionTypes = {\n    SELECT_DATA_SET: 'SELECT_DATA_SET',\n    LOADING_DATA_SET_OPTIONS_START: 'LOADING_DATA_SET_OPTIONS_START',\n    LOADING_DATA_SET_OPTIONS_SUCCESS: 'LOADING_DATA_SET_OPTIONS_SUCCESS',\n    LOADING_DATA_SET_OPTIONS_ERROR: 'LOADING_DATA_SET_OPTIONS_ERROR',\n}\n\nexport const selectDataSet = dataSetId => ({\n    type: actionTypes.SELECT_DATA_SET,\n    payload: dataSetId,\n})\n\nexport const loadingDataSetOptionsStart = () => ({\n    type: actionTypes.LOADING_DATA_SET_OPTIONS_START,\n})\n\nexport const loadingDataSetOptionsSuccess = options => ({\n    type: actionTypes.LOADING_DATA_SET_OPTIONS_SUCCESS,\n    payload: options,\n})\n\nexport const loadingDataSetOptionsError = () => ({\n    type: actionTypes.LOADING_DATA_SET_OPTIONS_ERROR,\n})\n\n/**\n * @param {Error} error\n * @returns {Function}\n */\nexport const loadingDataSetOptionsErrorWithFeedback = error => dispatch => {\n    const defaultMessage = i18n.t(\n        'An error occurred whole loading the data set options'\n    )\n    const displayMessage = humanReadableErrorMessage(error, defaultMessage)\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadingDataSetOptionsError())\n}\n\nexport const loadDataSetOptions = (filter = null) => dispatch => {\n    dispatch(loadingDataSetOptionsStart())\n    return getDataSetOptions()\n        .then(options => (filter ? options.filter(filter) : options))\n        .then(options => dispatch(loadingDataSetOptionsSuccess(options)))\n        .catch(error => dispatch(loadingDataSetOptionsErrorWithFeedback(error)))\n}\n","import i18n from '@dhis2/d2-i18n'\nimport { getOrgUnitGroupSets } from '../../utils/api'\nimport { showErrorSnackBar } from './feedback'\nimport humanReadableErrorMessage from '../../utils/humanReadableErrorMessage'\n\nexport const actionTypes = {\n    LOADING_GROUP_SETS_START: 'LOADING_GROUP_SETS_START',\n    LOADING_GROUP_SETS_SUCCESS: 'LOADING_GROUP_SETS_SUCCESS',\n    LOADING_GROUP_SETS_ERROR: 'LOADING_GROUP_SETS_ERROR',\n    SET_GROUP_SET: 'SET_GROUP_SET',\n}\n\n/**\n * @returns {Object}\n */\nexport const loadingGroupSetsStart = () => ({\n    type: actionTypes.LOADING_GROUP_SETS_START,\n})\n\n/**\n * @param {Array} groupSets\n * @returns {Object}\n */\nexport const loadingGroupSetsSuccess = groupSets => ({\n    type: actionTypes.LOADING_GROUP_SETS_SUCCESS,\n    payload: groupSets,\n})\n\n/**\n * @param {Error} error\n * @returns {Object}\n */\nexport const loadingGroupSetsErrorDefaultMessage = i18n.t(\n    'An error occurred while loading the group sets!'\n)\nexport const loadingGroupSetsError = error => dispatch => {\n    const displayMessage = humanReadableErrorMessage(\n        error,\n        loadingGroupSetsErrorDefaultMessage\n    )\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch({\n        type: actionTypes.LOADING_GROUP_SETS_ERROR,\n        payload: displayMessage,\n    })\n}\n\n/**\n * @returns {Function}\n */\nexport const loadGroupSetOptions = () => dispatch => {\n    dispatch(loadingGroupSetsStart())\n\n    return getOrgUnitGroupSets()\n        .then(response => dispatch(loadingGroupSetsSuccess(response.toArray())))\n        .catch(error => dispatch(loadingGroupSetsError(error)))\n}\n\n/**\n * @param {string} groupSetId\n * @return {Object}\n */\nexport const setGroupSet = groupSetId => ({\n    type: actionTypes.SET_GROUP_SET,\n    payload: groupSetId,\n})\n","import i18n from '@dhis2/d2-i18n'\nimport { getOrganisationUnits } from '../../utils/api'\nimport { showErrorSnackBar } from './feedback'\nimport humanReadableErrorMessage from '../../utils/humanReadableErrorMessage'\nimport { loadGroupSetOptions } from './orgUnitGroupSets'\n\nexport const actionTypes = {\n    ORGANISATION_UNITS_LOADING_START: 'ORGANISATION_UNITS_LOADING_START',\n    ORGANISATION_UNITS_RECEIVED: 'ORGANISATION_UNITS_RECEIVED',\n    ORGANISATION_UNITS_ERRORED: 'ORGANISATION_UNITS_ERRORED',\n    ORGANISATION_UNIT_SELECTED: 'ORGANISATION_UNIT_SELECTED',\n    ORGANISATION_UNITS_OPTION_SELECTED: 'ORGANISATION_UNITS_OPTION_SELECTED',\n    TOGGLE_SHOW_OPTIONS: 'TOGGLE_SHOW_OPTIONS',\n}\n\nexport const fallbackErrorMessage = i18n.t('Could not load organisation units')\n\n/**\n * @returns {Object}\n */\nexport const loadOrganisationUnitsStart = () => ({\n    type: actionTypes.ORGANISATION_UNITS_LOADING_START,\n})\n/**\n * @param {Object} periodTypes\n * @returns {Object}\n */\nexport const loadOrganisationUnitsSuccess = organisationUnits => ({\n    type: actionTypes.ORGANISATION_UNITS_RECEIVED,\n    payload: organisationUnits,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadOrganisationUnitsError = () => ({\n    type: actionTypes.ORGANISATION_UNITS_ERRORED,\n})\n\n/**\n * @param {Error} error\n * @returns {Function}\n */\nexport const loadOrganisationUnitsErrorDefaultMessage = i18n.t(\n    'An error occurred while loading the organisation units!'\n)\nexport const loadOrganisationUnitsErrorWithFeedback = error => dispatch => {\n    const displayMessage = humanReadableErrorMessage(\n        error,\n        loadOrganisationUnitsErrorDefaultMessage\n    )\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadOrganisationUnitsError())\n}\n\nexport const loadOrganisationUnits = () => dispatch => {\n    dispatch(loadOrganisationUnitsStart())\n    return getOrganisationUnits()\n        .then(organisationUnits =>\n            dispatch(loadOrganisationUnitsSuccess(organisationUnits))\n        )\n        .catch(error => {\n            console.error(error)\n            dispatch(loadOrganisationUnitsErrorWithFeedback(error))\n        })\n}\n\nexport const selectOrganisationUnit = (\n    _event,\n    { id, path, displayName, children }\n) => ({\n    type: actionTypes.ORGANISATION_UNIT_SELECTED,\n    payload: { id, path, displayName, children },\n})\n\nexport const selectOrgUnitOption = (id, value) => ({\n    type: actionTypes.ORGANISATION_UNITS_OPTION_SELECTED,\n    payload: { id, value },\n})\n\nexport const toggleShowOptions = () => (dispatch, getState) => {\n    const { orgUnitGroupSets } = getState()\n\n    dispatch({ type: actionTypes.TOGGLE_SHOW_OPTIONS })\n\n    if (orgUnitGroupSets.collection.length === 0) {\n        dispatch(loadGroupSetOptions())\n    }\n}\n","import i18n from '@dhis2/d2-i18n'\nimport humanReadableErrorMessage from '../../utils/humanReadableErrorMessage'\nimport { showErrorSnackBar } from './feedback'\nimport { getPeriodTypes } from '../../utils/api'\n\nexport const actionTypes = {\n    REPORT_PERIOD_TYPES_LOADING_START: 'REPORT_PERIOD_TYPES_LOADING_START',\n    REPORT_PERIOD_TYPES_RECEIVED: 'REPORT_PERIOD_TYPES_RECEIVED',\n    REPORT_PERIOD_TYPES_ERRORED: 'REPORT_PERIOD_TYPES_ERRORED',\n    REPORT_PERIOD_TYPE_SELECTED: 'REPORT_PERIOD_TYPE_SELECTED',\n    REPORT_PERIOD_SELECTED: 'REPORT_PERIOD_SELECTED',\n}\n\n/**\n * @param {Array} periodTypes\n * @returns {Object}\n */\nexport const loadPeriodTypesSuccess = periodTypes => ({\n    type: actionTypes.REPORT_PERIOD_TYPES_RECEIVED,\n    payload: periodTypes,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadPeriodTypesError = () => ({\n    type: actionTypes.REPORT_PERIOD_TYPES_ERRORED,\n})\n\n/**\n * @param {Error} error\n * @return {Function}\n */\n\nexport const fallbackErrorMessage = i18n.t('Could not load period types')\nexport const loadPeriodTypesErrorWithFeedback = error => dispatch => {\n    // eslint-disable-next-line\n    const displayMessage = humanReadableErrorMessage(\n        error,\n        fallbackErrorMessage\n    )\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadPeriodTypesError())\n}\n\nexport const loadPeriodTypes = () => dispatch =>\n    getPeriodTypes()\n        .then(periodTypes => dispatch(loadPeriodTypesSuccess(periodTypes)))\n        .catch(error => {\n            console.error(error)\n            dispatch(loadPeriodTypesErrorWithFeedback(error))\n        })\n\nexport const selectPeriodType = event => ({\n    type: actionTypes.REPORT_PERIOD_TYPE_SELECTED,\n    payload: event.target.value,\n})\n\nexport const selectPeriod = period => ({\n    type: actionTypes.REPORT_PERIOD_SELECTED,\n    payload: period,\n})\n","import { sections } from '../config/sections.config'\nimport { getSystemVersion } from './api'\n\nexport const DOCS_LINK = 'https://ci.dhis2.org/docs'\nexport const DEFAULT_DOC_LANGUAGE = 'en'\n\n/**\n * Returns the \"version\" of the documentation that corresponds with the current dhis2 version.\n *\n * @param {Object} version - The version definition as provided by d2.system.version.\n * @param {number} version.minor - The minor dhis2 version. e.g. The 25 in 2.25.\n * @param {boolean} version.snapshot - True when the current version is the snapshot(master/development) branch.\n *\n * @returns {string} `master` for a snapshot branch. `25` for 2.25 etc.\n */\nconst getDocsVersion = () => {\n    const { major, minor, snapshot } = getSystemVersion()\n    if (snapshot) {\n        return 'master'\n    }\n    return `${major}.${minor}`\n}\n\nexport const getDocsUrl = (sectionKey, lng = DEFAULT_DOC_LANGUAGE) => {\n    const baseUrl = `${DOCS_LINK}/${getDocsVersion()}/${lng}/user/html/`\n    return `${baseUrl}${sections[sectionKey].info.docs}.html`\n}\n\nexport default getDocsUrl\n","/* React */\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nconst PageHelper = props => (\n    <a\n        className=\"helper-icon material-icons\"\n        href={props.url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n    >\n        help\n        <style jsx>{`\n            a {\n                padding-left: 12px;\n                color: #276696;\n                text-decoration: none;\n            }\n        `}</style>\n    </a>\n)\n\nPageHelper.propTypes = {\n    url: PropTypes.string.isRequired,\n}\n\nexport default PageHelper\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { getDocsUrl } from '../utils/getDocsUrl'\nimport PageHelper from '../components/PageHelper'\n\nexport const SectionHeadline = props => (\n    <h1>\n        {props.showBackButton && (\n            <span\n                id=\"back-button\"\n                className=\"material-icons back-button\"\n                role=\"button\"\n                tabIndex=\"0\"\n                onClick={props.onBackClick}\n            >\n                arrow_back\n            </span>\n        )}\n        {props.label}\n        <PageHelper url={getDocsUrl(props.sectionKey)} />\n        <style jsx>{`\n            .back-button {\n                cursor: pointer;\n                outline: none;\n            }\n        `}</style>\n    </h1>\n)\n\nSectionHeadline.propTypes = {\n    label: PropTypes.string.isRequired,\n    showBackButton: PropTypes.bool,\n    sectionKey: PropTypes.string.isRequired,\n    onBackClick: PropTypes.func,\n}\n\nSectionHeadline.defaultProps = {\n    showBackButton: false,\n    onBackClick: () => undefined,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { FeedbackSnackbar } from '@dhis2/d2-ui-core'\nimport { clearFeedback } from '../../redux/actions/feedback'\n\nconst Snackbar = ({\n    showSnackbar,\n    message,\n    type,\n    action,\n    onActionClick,\n    onClose,\n}) => {\n    const conf = { message, type, action, onActionClick }\n    return (\n        <span id=\"feedbackSnackbarId\">\n            <FeedbackSnackbar\n                onClose={onClose}\n                show={showSnackbar}\n                conf={conf}\n            />\n        </span>\n    )\n}\n\nSnackbar.propTypes = {\n    showSnackbar: PropTypes.bool.isRequired,\n    message: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    action: PropTypes.string,\n    onActionClick: PropTypes.func,\n}\n\nSnackbar.defaultProps = {\n    action: '',\n    onActionClick: () => null,\n}\n\nconst mapStateToProps = ({ feedback }) => ({\n    showSnackbar: feedback.showSnackbar,\n    message: feedback.message,\n    type: feedback.type,\n})\n\nconst mapDispatchToProps = {\n    onClose: clearFeedback,\n}\n\nconst connectedSnackbar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Snackbar)\n\nexport { connectedSnackbar as Snackbar, Snackbar as SnackbarOriginal }\n","import humanReadableErrorMessage from '../../utils/humanReadableErrorMessage'\nimport i18n from '@dhis2/d2-i18n'\nimport { showWarningSnackBar } from './feedback'\nimport { getDimensions } from '../../utils/api'\n\nexport const actionTypes = {\n    LOADING_DIMENSIONS_START: 'LOADING_DIMENSIONS_START',\n    LOADING_DIMENSIONS_SUCCESS: 'LOADING_DIMENSIONS_SUCCESS',\n    LOADING_DIMENSIONS_ERROR: 'LOADING_DIMENSIONS_ERROR',\n    SELECT_DIMENSION_OPTION: 'SELECT_DIMENSION_OPTION',\n}\n\n/**\n * @returns {Object}\n */\nexport const loadingDimensionsStart = () => ({\n    type: actionTypes.LOADING_DIMENSIONS_START,\n})\n\n/**\n * @param {Array} dimensions\n * @returns {Object}\n */\nexport const loadingDimensionsSuccess = dimensions => ({\n    type: actionTypes.LOADING_DIMENSIONS_SUCCESS,\n    payload: dimensions,\n})\n\nexport const loadingDimensionsError = () => ({\n    type: actionTypes.LOADING_DIMENSIONS_ERROR,\n})\n\n/**\n * @param (Error) error\n * @returns {Function}\n */\nexport const loadingDimensionsErrorWithFeedback = error => dispatch => {\n    const defaultMessage = i18n.t(\n        'An error occurred while loading the data set dimensions'\n    )\n    const displayMessage = humanReadableErrorMessage(error, defaultMessage)\n    dispatch(showWarningSnackBar(displayMessage))\n    dispatch(loadingDimensionsError())\n}\n\n/**\n * @param {string} dimension\n * @param {string} value\n * @returns {Object}\n */\nexport const selectDimensionOption = (dimension, value) => ({\n    type: actionTypes.SELECT_DIMENSION_OPTION,\n    payload: { dimension, value },\n})\n\n/**\n * @returns {Function}\n */\nexport const loadDimensions = () => (dispatch, getState) => {\n    dispatch(loadingDimensionsStart())\n\n    const { dataSet } = getState()\n    return getDimensions(dataSet.selected.id)\n        .then(dimensions => dispatch(loadingDimensionsSuccess(dimensions)))\n        .catch(error => dispatch(loadingDimensionsErrorWithFeedback(error)))\n}\n","import XLSX from 'xlsx'\nimport humanReadableErrorMessage from '../../utils/humanReadableErrorMessage'\nimport { showLoader, showSuccessSnackBar, showErrorSnackBar } from './feedback'\nimport i18n from '@dhis2/d2-i18n'\n\nexport const actionTypes = {\n    LOADING_REPORT_DATA_START: 'LOADING_REPORT_DATA_START',\n    LOADING_REPORT_DATA_SUCCESS: 'LOADING_REPORT_DATA_SUCCESS',\n    LOADING_REPORT_DATA_ERROR: 'LOADING_REPORT_DATA_ERROR',\n    SET_DATA_SET_REPORT_COMMENT: 'SET_DATA_SET_REPORT_COMMENT',\n    DOWNLOAD_DATA_SET_REPORT_XLS: 'DOWNLOAD_DATA_SET_REPORT_XLS',\n    SHARING_DATA_SET_REPORT_COMMENT_SUCCESS:\n        'SHARING_DATA_SET_REPORT_COMMENT_SUCCESS',\n    SHARING_DATA_SET_REPORT_COMMENT_START:\n        'SHARING_DATA_SET_REPORT_COMMENT_START',\n    SHARING_DATA_SET_REPORT_COMMENT_ERROR:\n        'SHARING_DATA_SET_REPORT_COMMENT_ERROR',\n    UNSET_REPORT_DATA: 'UNSET_REPORT_DATA',\n}\n\n/**\n * @returns {Object}\n */\nexport const loadingReportDataStart = () => ({\n    type: actionTypes.LOADING_REPORT_DATA_START,\n})\n\n/**\n * @param {string} reportData\n * @returns {Object}\n */\nexport const loadingReportDataSuccess = reportData => ({\n    type: actionTypes.LOADING_REPORT_DATA_SUCCESS,\n    payload: reportData,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingReportDataError = () => ({\n    type: actionTypes.LOADING_REPORT_DATA_ERROR,\n})\n\n/**\n * @param {string} reportData\n * @return {Object}\n */\nexport const loadingReportDataSuccessWithFeedback = (\n    reportData,\n    shouldShowChart\n) => dispatch => {\n    const successMsg = i18n.t('Successfully loaded the {{ outputType }}', {\n        outputType: shouldShowChart ? i18n.t('chart') : i18n.t('table'),\n    })\n    dispatch(showSuccessSnackBar(i18n.t(successMsg)))\n    dispatch(loadingReportDataSuccess(reportData))\n}\n\n/**\n * @param {Error} error\n */\nexport const loadingReportDataErrorWithFeedback = error => dispatch => {\n    const defaultMessage = i18n.t('An error occurred while loading the report!')\n    const displayMessage = humanReadableErrorMessage(error, defaultMessage)\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadingReportDataError())\n}\n\n// @TODO: not sure this is needed.\n// Not required for reporting-rate-summary\nexport const unsetReportData = () => ({\n    type: actionTypes.UNSET_REPORT_DATA,\n})\n\n/**\n * @param {DOMElement[]} tableNodes\n * @return {Object}\n */\n// @TODO: not sure this is needed. I think this can be removed\nexport const exportReportToXls = tableNodes => {\n    const workbook = XLSX.utils.book_new()\n\n    tableNodes.forEach((tableNode, index) => {\n        const worksheet = XLSX.utils.table_to_sheet(tableNode)\n        XLSX.utils.book_append_sheet(workbook, worksheet, `Worksheet ${index}`)\n    })\n\n    XLSX.writeFile(workbook, 'report.xlsx')\n\n    return { type: actionTypes.DOWNLOAD_DATA_SET_REPORT_XLS }\n}\n\n/**\n * @param {string} comment\n * @returns {Object}\n */\nexport const setReportComment = comment => ({\n    type: actionTypes.SET_DATA_SET_REPORT_COMMENT,\n    payload: comment,\n})\n\n/**\n * @returns {Object}\n */\nexport const sharingReportCommentStart = () => ({\n    type: actionTypes.SHARING_DATA_SET_REPORT_COMMENT_START,\n})\n\n/**\n * @returns {Object}\n */\nexport const sharingReportCommentSuccess = () => ({\n    type: actionTypes.SHARING_DATA_SET_REPORT_COMMENT_SUCCESS,\n})\n\n/**\n * @returns {Object}\n */\nexport const sharingReportCommentError = () => ({\n    type: actionTypes.SHARING_DATA_SET_REPORT_COMMENT_ERROR,\n})\n\n/**\n * @returns {Function}\n */\nexport const sharingReportCommentStartWithFeedback = () => dispatch => {\n    dispatch(showLoader())\n    dispatch(sharingReportCommentStart())\n}\n\n/**\n * @returns {Function}\n */\nexport const sharingReportCommentSuccessWithFeedback = () => dispatch => {\n    dispatch(showSuccessSnackBar(i18n.t('Successfully added comment')))\n    dispatch(sharingReportCommentSuccess())\n}\n\n/**\n * @param {Error} error\n * @returns {Function}\n */\nexport const sharingReportCommentErrorWithFeedback = error => dispatch => {\n    const defaultMessge = i18n.t(\n        'An error occurred while submitting your comment!'\n    )\n    const displayMessage = humanReadableErrorMessage(error, defaultMessge)\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(sharingReportCommentError())\n}\n","import { selectDataSet as selectDataSetOriginal } from './dataSet'\nimport { loadDimensions } from './dataSetDimensions'\nimport { getDataSetReport, postDataSetReportComment } from '../../utils/api'\nimport {\n    loadingReportDataStart,\n    loadingReportDataSuccessWithFeedback,\n    loadingReportDataErrorWithFeedback,\n    sharingReportCommentStartWithFeedback,\n    sharingReportCommentSuccessWithFeedback,\n    sharingReportCommentErrorWithFeedback,\n} from './reportData'\n\nexport const actionTypes = {\n    SHOW_DATA_SET_REPORT_FORM: 'SHOW_DATA_SET_REPORT_FORM',\n    TOGGLE_SELECTED_UNIT_ONLY: 'TOGGLE_SELECTED_UNIT_ONLY',\n}\n\nexport const selectDataSet = dataSetId => (dispatch, getState) => {\n    dispatch(selectDataSetOriginal(dataSetId))\n\n    const { dataSet } = getState()\n    dispatch(loadDimensions(dataSet.selected.id))\n}\n\nexport const toggleSelectedUnitOnly = selectedUnitOnly => ({\n    type: actionTypes.TOGGLE_SELECTED_UNIT_ONLY,\n    payload: selectedUnitOnly,\n})\n\nexport const loadReportData = () => (dispatch, getState) => {\n    dispatch(loadingReportDataStart())\n\n    const {\n        dataSet,\n        dataSetDimensions,\n        dataSetReport,\n        organisationUnits,\n        reportPeriod,\n    } = getState()\n\n    return getDataSetReport({\n        dataSet: dataSet.selected,\n        dataSetDimensions: dataSetDimensions.selected,\n        orgUnitGroupsOptions: organisationUnits.selectedOptions,\n        orgUnit: organisationUnits.selected.id,\n        period: reportPeriod.selectedPeriod,\n        selectedUnitOnly: dataSetReport.selectedUnitOnly,\n    })\n        .then(response =>\n            dispatch(loadingReportDataSuccessWithFeedback(response))\n        )\n        .catch(error => dispatch(loadingReportDataErrorWithFeedback(error)))\n}\n\nexport const shareDataSetReportComment = comment => (dispatch, getState) => {\n    const { dataSet, organisationUnits, reportPeriod } = getState()\n    const dataSetId = dataSet.selected.id\n    const orgUnitId = organisationUnits.selected.id\n    const period = reportPeriod.selectedPeriod\n\n    dispatch(sharingReportCommentStartWithFeedback())\n    return postDataSetReportComment(dataSetId, orgUnitId, period, comment)\n        .then(() => dispatch(sharingReportCommentSuccessWithFeedback()))\n        .catch(error => dispatch(sharingReportCommentErrorWithFeedback(error)))\n}\n","export const getIsActionEnabled = state =>\n    !(\n        !state.organisationUnits.selected ||\n        !state.dataSet.selected.id ||\n        !state.reportPeriod.selectedPeriod ||\n        state.dataSet.loading ||\n        state.dataSetDimensions.loading ||\n        state.reportData.loading\n    )\n","export default function createDataTransformCache() {\n    let inputData = null\n    let transformedData = null\n    return {\n        hasValidCacheFor: data => !!inputData && data === inputData,\n        getCachedResult: () => transformedData,\n        setCachedResult: (input, transformed) => {\n            inputData = input\n            transformedData = transformed\n        },\n    }\n}\n","export const isHtmlReport = content =>\n    !!content && !!content.data && typeof content.data === 'string'\n","import isEmpty from 'lodash.isempty'\nimport createDataTransformCache from '../../../utils/dataTransformCache'\nimport { isHtmlReport } from '../../../utils/dataSetReport/isHtmlReport'\n\nexport const cache = createDataTransformCache()\n\nexport default function getTransformedTableData(state) {\n    const content = state.reportData.content\n\n    if (isEmpty(content) || isHtmlReport(content)) {\n        return content\n    }\n\n    if (cache.hasValidCacheFor(content)) {\n        return cache.getCachedResult()\n    }\n\n    const tables = content.data.map(transformTableData)\n\n    cache.setCachedResult(content, tables)\n    return tables\n}\n\nfunction transformTableData(data) {\n    return {\n        title: data.title,\n        headers: data.headers.map(h => h.column),\n        rows: data.rows.map(cells => cells.map(x => (!!x || x === 0 ? x : ''))),\n    }\n}\n","import { connect } from 'react-redux'\nimport {\n    loadReportData,\n    selectDataSet,\n    toggleSelectedUnitOnly,\n    shareDataSetReportComment,\n} from '../../redux/actions/dataSetReport'\nimport { setReportComment } from '../../redux/actions/reportData'\nimport { getIsActionEnabled } from '../../redux/selectors/dataSetReport/getIsActionEnabled'\nimport getTransformedTableData from '../../redux/selectors/dataSetReport/getTransformedTableData'\nimport { isHtmlReport } from '../../utils/dataSetReport/isHtmlReport'\n\nconst mapStateToProps = state => ({\n    isHtmlReport: isHtmlReport(state.reportData.content),\n    reportContent: getTransformedTableData(state),\n    fileUrls: state.reportData.content.fileUrls || [],\n    isReportLoading: state.reportData.loading,\n    reportComment: state.reportData.comment,\n    selectedUnitOnly: state.dataSetReport.selectedUnitOnly,\n    isActionEnabled: getIsActionEnabled(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    loadReportData: () => dispatch(loadReportData()),\n    selectDataSet: e => dispatch(selectDataSet(e.target.value)),\n    toggleSelectedUnitOnly: (e, selectedUnitOnly) =>\n        dispatch(toggleSelectedUnitOnly(selectedUnitOnly)),\n    shareDataSetReportComment: comment =>\n        dispatch(shareDataSetReportComment(comment)),\n    setDataSetReportComment: comment => dispatch(setReportComment(comment)),\n})\n\nexport const connectDataSetReport = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport { resolve } from 'styled-jsx/macro'\n\nexport const formLabel = resolve`\n    text-align: left;\n    color: #757575;\n    margin-bottom: 5px;\n    font-size: 14px;\n`\nexport const container = resolve`\n    padding: 16px;\n`\n\nexport const card = resolve`\n    box-sizing: border-box;\n    display: inline-block;\n    position: relative;\n    min-width: 200px;\n    min-height: 218px;\n    height: 100%;\n    padding-left: 30px;\n    padding-right: 30px;\n    padding-bottom: 20px;\n    background-color: #ffffff;\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 6px,\n        rgba(0, 0, 0, 0.12) 0px 1px 4px;\n    border-radius: 5px;\n    width: 100%;\n`\n\nexport const actionsContainer = resolve`\n    display: block;\n    margin-top: 48px;\n    margin-bottom: 16px;\n`\n","import PropTypes from 'prop-types'\n\nexport const children = PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n])\n\nexport const reportContent = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.object,\n])\n\n/**\n *\n * Form prop types\n *\n */\nexport const formInput = PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onFocus: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n})\n\nexport const formInputMeta = PropTypes.shape({\n    error: PropTypes.string, // is undefined when no error..\n    touched: PropTypes.bool.isRequired,\n})\n\nexport const formOption = PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n})\n\nexport const formOptions = PropTypes.arrayOf(formOption)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\n\nconst prefix = i18n.t('Download as')\n\nexport const DownloadOption = ({ file }) => (\n    <a\n        className=\"download-button\"\n        href={file.url}\n        download\n        tabIndex=\"0\"\n        target={file.extension === 'pdf' ? '_blank' : '_self'}\n    >\n        {prefix} {file.extension}\n        <style jsx>{`\n            .download-button {\n                cursor: pointer;\n                outline: none;\n                color: #757575;\n                font-size: 12px;\n                text-transform: uppercase;\n                margin-left: 8px;\n            }\n        `}</style>\n    </a>\n)\n\nDownloadOption.propTypes = {\n    file: PropTypes.shape({\n        url: PropTypes.string.isRequired,\n        extension: PropTypes.string.isRequired,\n    }),\n}\n\nexport const DownloadOptions = ({ fileUrls }) => (\n    <div id=\"download-options-container\">\n        {fileUrls.map((file, index) => (\n            <DownloadOption file={file} key={index} />\n        ))}\n        <style jsx>{`\n            div {\n                display: flex;\n                justify-content: flex-end;\n            }\n        `}</style>\n    </div>\n)\n\nDownloadOptions.propTypes = {\n    fileUrls: PropTypes.array.isRequired,\n}\n","/* React */\nimport React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const Row = ({ cells }) => (\n    <tr>\n        {cells.map((cell, index) => (\n            <td key={`c-${cell}-${index}`}>{cell}</td>\n        ))}\n    </tr>\n)\n\nRow.propTypes = {\n    cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ).isRequired,\n}\n\nconst ReportTable = ({ content: { title, headers, rows } }) => (\n    <Fragment>\n        <h1>{title}</h1>\n        <table>\n            <thead>\n                <tr>\n                    {headers.map((header, index) => (\n                        <th key={`h-${header}-${index}`}>{header}</th>\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {rows.map((cells, index) => (\n                    <Row cells={cells} key={`r-${cells[0]}-${index}`} />\n                ))}\n            </tbody>\n        </table>\n        <style jsx>{`\n            table {\n                border-collapse: collapse;\n            }\n            tr {\n                border-bottom: 2px solid #e0e0e0;\n            }\n            tbody :global(tr) {\n                border-bottom: 1px solid #e0e0e0;\n            }\n            th,\n            tbody :global(td) {\n                border: none;\n                font-size: 14px;\n                padding: 16px 16px;\n            }\n            th {\n                text-align: left;\n                font-weight: bold;\n            }\n            tbody :global(td):not(:first-child),\n            thead :global(th):not(:first-child) {\n                text-align: center;\n            }\n        `}</style>\n    </Fragment>\n)\n\nReportTable.propTypes = {\n    content: PropTypes.object.isRequired,\n}\n\nexport default ReportTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { InputField, Button } from '@dhis2/d2-ui-core'\nimport i18n from '@dhis2/d2-i18n'\n\nconst isCommentingActionEnabled = comment => comment.trim()\nconst actionButtonPlaceholder = i18n.t('Share')\nconst inputFieldPlaceholder = i18n.t(\n    'Write a comment, question or interpretation of this report'\n)\n\nexport const ReportComment = props => (\n    <div id=\"share-component\">\n        <div>\n            <InputField\n                placeholder={inputFieldPlaceholder}\n                type=\"text\"\n                multiline\n                fullWidth\n                value={props.comment}\n                onChange={props.setDataSetReportComment}\n            />\n            <Button\n                raised\n                color=\"primary\"\n                onClick={props.shareDataSetReportComment}\n                disabled={!isCommentingActionEnabled(props.comment)}\n            >\n                {actionButtonPlaceholder}\n            </Button>\n        </div>\n        <style jsx>{`\n            div > div {\n                margin: 16px 0;\n            }\n        `}</style>\n    </div>\n)\n\nReportComment.propTypes = {\n    comment: PropTypes.string.isRequired,\n    shareDataSetReportComment: PropTypes.func.isRequired,\n    setDataSetReportComment: PropTypes.func.isRequired,\n}\n","import { CircularProgress } from '@dhis2/d2-ui-core'\nimport isEmpty from 'lodash.isempty'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { reportContent } from '../utils/react/propTypes'\n\nconst ReportLoader = ({ isLoading, content, children }) => {\n    if (isLoading) {\n        return (\n            <div className=\"report-loader\">\n                <CircularProgress />\n                <style jsx>{`\n                    div {\n                        margin: 48px 0;\n                        text-align: center;\n                    }\n                `}</style>\n            </div>\n        )\n    }\n\n    if (isEmpty(content)) {\n        return null\n    }\n\n    return children\n}\n\nReportLoader.propTypes = {\n    isLoading: PropTypes.bool.isRequired,\n    content: reportContent.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default ReportLoader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DownloadOptions } from '../../components/TabularReport/DownloadOptions'\nimport ReportTable from '../../components/TabularReport/ReportTable'\nimport { ReportComment } from '../../components/TabularReport/ReportComment'\nimport ReportLoader from '../../components/ReportLoader'\nimport { reportContent } from '../../utils/react/propTypes'\n\nconst DataSetReportOutput = props => (\n    <ReportLoader content={props.content} isLoading={props.isLoading}>\n        <div className=\"tabular-report\">\n            <ReportComment\n                comment={props.reportComment}\n                shareDataSetReportComment={props.shareDataSetReportComment}\n                setDataSetReportComment={props.setDataSetReportComment}\n            />\n            <DownloadOptions fileUrls={props.fileUrls} />\n            {props.isHtmlReport ? (\n                <div\n                    className=\"dataset-html-report\"\n                    dangerouslySetInnerHTML={{ __html: props.content.data }}\n                />\n            ) : (\n                !!props.content.length &&\n                props.content.map(table => (\n                    <ReportTable key={table.title} content={table} />\n                ))\n            )}\n        </div>\n        <style jsx>{`\n            .dataset-html-report :global(table) {\n                margin-top: 16px;\n                border-collapse: collapse;\n            }\n            .dataset-html-report :global(table) :global(td),\n            .dataset-html-report :global(table) :global(th) {\n                border: 1px solid #bcbcbc;\n                padding: 4px;\n            }\n        `}</style>\n    </ReportLoader>\n)\n\nDataSetReportOutput.propTypes = {\n    isHtmlReport: PropTypes.bool.isRequired,\n    content: reportContent.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    fileUrls: PropTypes.array.isRequired,\n    reportComment: ReportComment.propTypes.comment,\n    shareDataSetReportComment:\n        ReportComment.propTypes.shareDataSetReportComment,\n    setDataSetReportComment: ReportComment.propTypes.setDataSetReportComment,\n}\n\nexport default DataSetReportOutput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { DropDown } from '@dhis2/d2-ui-core'\nimport i18n from '@dhis2/d2-i18n'\nimport { selectDataSet } from '../redux/actions/dataSet'\nimport { formLabel } from '../utils/styles/shared.js'\n\nconst hintTextLoading = i18n.t('Loading options...')\nconst hintTextDefault = i18n.t('Select Data Set')\n\nexport const DatasetsDropdown = props => (\n    <div>\n        <span className={formLabel.className}>{props.label}</span>\n        <DropDown\n            fullWidth={props.fullWidth}\n            value={props.selected.id}\n            onChange={props.onChange ? props.onChange : props.selectDataSet}\n            menuItems={props.options}\n            hintText={props.loading ? hintTextLoading : hintTextDefault}\n            disabled={props.loading}\n        />\n        {formLabel.styles}\n    </div>\n)\n\nDatasetsDropdown.propTypes = {\n    selected: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    options: PropTypes.array.isRequired,\n    selectDataSet: PropTypes.func.isRequired,\n    onChange: PropTypes.func,\n    label: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    filter: PropTypes.func,\n}\n\nDatasetsDropdown.defaultProps = {\n    onChange: null,\n    label: i18n.t('Data set'),\n    fullWidth: true,\n    filter: null,\n}\n\nconst mapStateToProps = ({ dataSet: { loading, selected, options } }) => ({\n    loading,\n    selected,\n    options,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    selectDataSet: event => dispatch(selectDataSet(event.target.value)),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DatasetsDropdown)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { DropDown } from '@dhis2/d2-ui-core'\nimport i18n from '@dhis2/d2-i18n'\nimport { selectDimensionOption } from '../redux/actions/dataSetDimensions'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { formLabel } from '../utils/styles/shared.js'\n\nconst createDimensionChangeHandler = (onChange, dimensionId) => element =>\n    onChange(dimensionId, element)\n\nconst DimensionDropdown = props => (\n    <div key={props.dimension.id} className=\"data-set-dimension\">\n        <span className={formLabel.className}>\n            {props.dimension.displayName}\n        </span>\n        <DropDown\n            fullWidth={props.fullWidth}\n            value={props.values[props.dimension.id]}\n            onChange={props.onChange}\n            menuItems={props.dimension.items}\n            includeEmpty\n            emptyLabel={i18n.t('Select Option')}\n            hintText={i18n.t('Select Option')}\n        />\n        {formLabel.styles}\n    </div>\n)\n\nDimensionDropdown.propTypes = {\n    dimension: PropTypes.object.isRequired,\n    fullWidth: PropTypes.bool.isRequired,\n    values: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n\nconst DataDimensionsContent = props => {\n    if (props.isLoading) {\n        return (\n            <div>\n                <CircularProgress size={24} thickness={3} />\n                <style jsx>{`\n                    div {\n                        margin-bottom: 16px;\n                        text-align: center;\n                    }\n                `}</style>\n            </div>\n        )\n    }\n\n    if (props.options.length === 0) {\n        return (\n            <div className=\"no-results\">\n                {i18n.t('No dimensions connected to the current data set')}\n                <style jsx>{`\n                    div {\n                        margin-bottom: 16px;\n                        font-style: italic;\n                        font-size: 13px;\n                        color: #757575;\n                    }\n                `}</style>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"box\">\n            {props.options.map(dimension => (\n                <DimensionDropdown\n                    key={dimension.id}\n                    dimension={dimension}\n                    fullWidth={props.fullWidth}\n                    values={props.selected}\n                    onChange={createDimensionChangeHandler(\n                        props.onChange,\n                        dimension.id\n                    )}\n                />\n            ))}\n            <style jsx>{`\n                div {\n                    border: 1px solid #bcbcbc;\n                    padding: 4px;\n                    margin-bottom: 16px;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nDataDimensionsContent.propTypes = {\n    isLoading: PropTypes.bool.isRequired,\n    fullWidth: PropTypes.bool.isRequired,\n    options: PropTypes.array.isRequired,\n    selected: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n\nconst DataSetDimensions = ({ hide, ...contentProps }) => {\n    if (hide) {\n        return null\n    }\n\n    return (\n        <React.Fragment>\n            <h6 className=\"header\">{i18n.t('Data set dimensions')}</h6>\n            <DataDimensionsContent {...contentProps} />\n            <style jsx>{`\n                h6 {\n                    color: #757575;\n                    font-size: 14px;\n                    margin-bottom: 5px;\n                    margin-top: 0;\n                    text-align: left;\n                    font-weight: normal;\n                }\n            `}</style>\n        </React.Fragment>\n    )\n}\n\nDataSetDimensions.propTypes = {\n    hide: PropTypes.bool.isRequired,\n}\n\nDataSetDimensions.defaultProps = {\n    fullWidth: true,\n}\n\nconst mapStateToProps = state => ({\n    hide: !state.dataSet.selected.id,\n    isLoading: state.dataSetDimensions.loading,\n    options: state.dataSetDimensions.options,\n    selected: state.dataSetDimensions.selected,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: (id, evt) =>\n        dispatch(selectDimensionOption(id, evt.target.value)),\n})\n\nconst ConnectedDataSetDimensions = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DataSetDimensions)\n\nexport {\n    DataSetDimensions as OriginalComponent,\n    ConnectedDataSetDimensions as DataSetDimensions,\n}\n","import i18n from '@dhis2/d2-i18n'\n\n/* do not change property names, those are ids from period types server */\nconst translations = {\n    Daily: i18n.t('Daily'),\n    Weekly: i18n.t('Weekly'),\n    WeeklyWednesday: i18n.t('Weekly Wednesday'),\n    WeeklyThursday: i18n.t('Weekly Thursday'),\n    WeeklySaturday: i18n.t('Weekly Saturday'),\n    WeeklySunday: i18n.t('Weekly Sunday'),\n    BiWeekly: i18n.t('Bi-Weekly'),\n    Monthly: i18n.t('Monthly'),\n    BiMonthly: i18n.t('Bi-Monthly'),\n    Quarterly: i18n.t('Quarterly'),\n    SixMonthly: i18n.t('Six-Monthly'),\n    SixMonthlyApril: i18n.t('Six-Monthly April'),\n    SixMonthlyNov: i18n.t('Six-Monthly November'),\n    Yearly: i18n.t('Yearly'),\n    FinancialApril: i18n.t('Financial-April'),\n    FinancialJuly: i18n.t('Financial-July'),\n    FinancialOct: i18n.t('Financial-Oct'),\n}\n\nexport const getTranslatedPeriodTypes = state =>\n    state.reportPeriod.collection.map(periodType => ({\n        id: periodType.name,\n        displayName: translations[periodType.name],\n    }))\n","import i18n from '@dhis2/d2-i18n'\nimport { DropDown, PeriodPicker } from '@dhis2/d2-ui-core'\nimport parsePeriod from 'd2/period/parser'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { selectPeriod, selectPeriodType } from '../redux/actions/reportPeriod'\nimport { getTranslatedPeriodTypes } from '../redux/selectors/reportPeriod/getTranslatedPeriodTypes'\nimport { formLabel } from '../utils/styles/shared.js'\n\nconst periodTypeLabelText = i18n.t('Select Period Type')\n\nexport function PeriodPickerWithPeriodType({\n    selectPeriodType,\n    selectPeriod,\n    label,\n    collection,\n    selectedPeriodType,\n    selectedPeriod,\n}) {\n    return (\n        <div>\n            <span className={formLabel.className}>{label}</span>\n            <DropDown\n                fullWidth\n                emptyLabel={periodTypeLabelText}\n                hintText={periodTypeLabelText}\n                menuItems={collection}\n                onChange={selectPeriodType}\n                value={selectedPeriodType}\n            />\n            {selectedPeriodType && (\n                <PeriodPicker\n                    periodType={selectedPeriodType}\n                    onPickPeriod={selectPeriod}\n                />\n            )}\n            {selectedPeriod && (\n                <div className=\"parsed-period\">\n                    {parsePeriod(selectedPeriod).name}\n                </div>\n            )}\n            <style jsx>{`\n                .parsed-period {\n                    margin-bottom: 16px;\n                }\n            `}</style>\n            {formLabel.styles}\n        </div>\n    )\n}\n\nPeriodPickerWithPeriodType.propTypes = {\n    selectPeriodType: PropTypes.func.isRequired,\n    selectPeriod: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n    collection: PropTypes.array.isRequired,\n    selectedPeriodType: PropTypes.string,\n    selectedPeriod: PropTypes.string,\n}\n\nconst mapStateToProps = state => ({\n    ...state.reportPeriod,\n    collection: getTranslatedPeriodTypes(state),\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectPeriodType,\n        selectPeriod,\n    }\n)(PeriodPickerWithPeriodType)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport i18n from '@dhis2/d2-i18n'\nimport { OrgUnitTreeMultipleRoots } from '@dhis2/d2-ui-org-unit-tree'\nimport { selectOrganisationUnit } from '../redux/actions/organisationUnits'\n\nexport function AvailableOrganisationUnitsTree({\n    selectOrganisationUnit,\n    loading,\n    collection,\n    selected,\n}) {\n    if (loading) {\n        return <span>{i18n.t('Updating Organisation Units Tree...')}</span>\n    }\n\n    return (\n        <div className=\"org-unit-tree-wrapper\">\n            <OrgUnitTreeMultipleRoots\n                hideMemberCount\n                roots={collection}\n                selected={selected ? [selected.path] : []}\n                initiallyExpanded={collection.map(unit => `/${unit.id}`)}\n                onSelectClick={selectOrganisationUnit}\n            />\n            <style jsx>{`\n                div {\n                    border: 1px solid #bcbcbc;\n                    overflow: auto;\n                    width: 100%;\n                    box-sizing: border-box;\n                    font-weight: 300;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nAvailableOrganisationUnitsTree.propTypes = {\n    selectOrganisationUnit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    collection: PropTypes.array.isRequired,\n    selected: PropTypes.object,\n}\n\nconst mapStateToProps = ({ organisationUnits }) => ({\n    loading: organisationUnits.loading,\n    collection: organisationUnits.collection,\n    selected: organisationUnits.selected,\n})\n\nexport default connect(\n    mapStateToProps,\n    { selectOrganisationUnit }\n)(AvailableOrganisationUnitsTree)\n","/* React */\n/* i18n */\nimport i18n from '@dhis2/d2-i18n'\n/* d2-ui components */\nimport { DropDown } from '@dhis2/d2-ui-core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n/* App context */\nimport { formLabel } from '../utils/styles/shared.js'\nimport { connect } from 'react-redux'\nimport { selectOrgUnitOption } from '../redux/actions/organisationUnits'\nimport { CircularProgress } from '@material-ui/core'\n\nconst createGroupSetOnChange = (groupSetId, onChange) => event => {\n    onChange(groupSetId, event.target.value)\n}\n\nconst labelText = i18n.t('Select Option')\n\nconst OrganisationUnitGroupSetDropdown = ({\n    groupSet,\n    fullWidth,\n    value,\n    onChange,\n}) => (\n    <div key={groupSet.id}>\n        <span className={formLabel.className}>{groupSet.displayName}</span>\n        <DropDown\n            fullWidth={fullWidth}\n            value={value}\n            onChange={onChange}\n            menuItems={groupSet.organisationUnitGroups}\n            includeEmpty\n            emptyLabel={labelText}\n            hintText={labelText}\n        />\n        {formLabel.styles}\n    </div>\n)\n\nOrganisationUnitGroupSetDropdown.propTypes = {\n    groupSet: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    fullWidth: PropTypes.bool.isRequired,\n    value: PropTypes.string,\n}\n\nOrganisationUnitGroupSetDropdown.defaultProps = {\n    value: '',\n}\n\nexport const OrganisationUnitGroupSets = ({\n    groupSets,\n    isLoading,\n    selectGroupSet,\n    values,\n    fullWidth,\n}) =>\n    isLoading ? (\n        <div>\n            <CircularProgress size={24} thickness={3} />\n            <style jsx>{`\n                div {\n                    padding-top: 16px;\n                    text-align: center;\n                }\n            `}</style>\n        </div>\n    ) : (\n        groupSets.map(groupSet => (\n            <OrganisationUnitGroupSetDropdown\n                groupSet={groupSet}\n                key={groupSet.id}\n                onChange={createGroupSetOnChange(groupSet.id, selectGroupSet)}\n                value={values[groupSet.id]}\n                fullWidth={fullWidth}\n            />\n        ))\n    )\n\nOrganisationUnitGroupSets.propTypes = {\n    groupSets: PropTypes.array.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    selectGroupSet: PropTypes.func.isRequired,\n    values: PropTypes.object.isRequired,\n    fullWidth: PropTypes.bool,\n}\n\nOrganisationUnitGroupSets.defaultProps = {\n    fullWidth: true,\n}\n\nconst mapStateToProps = state => ({\n    isLoading: state.orgUnitGroupSets.loading,\n    groupSets: state.orgUnitGroupSets.collection,\n    values: state.organisationUnits.selectedOptions,\n})\n\nexport default connect(\n    mapStateToProps,\n    { selectGroupSet: selectOrgUnitOption }\n)(OrganisationUnitGroupSets)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport i18n from '@dhis2/d2-i18n'\nimport OrganisationUnitsTree from './AvailableOrganisationUnitsTree'\nimport OrganisationUnitGroupSets from './OrganisationUnitGroupSets'\nimport { toggleShowOptions } from '../redux/actions/organisationUnits'\nimport { formLabel } from '../utils/styles/shared.js'\n\nconst getExtraOptionsLabel = showOptions =>\n    !showOptions ? i18n.t('Show more options') : i18n.t('Show fewer options')\n\nconst getExtraOptionsClassName = showOptions =>\n    showOptions ? 'show-options' : 'hide-options'\n\nexport const OrgUnitsTreeWithExtraOptions = props => (\n    <React.Fragment>\n        <div className={formLabel.className}>\n            {i18n.t('Report organisation unit')}\n        </div>\n        <OrganisationUnitsTree />\n        <div>\n            {!props.isLoadingOptions && (\n                <span\n                    id=\"extra-options-action\"\n                    className=\"show-more-options-button\"\n                    role=\"button\"\n                    tabIndex=\"0\"\n                    onClick={props.toggleShowOptions}\n                >\n                    {getExtraOptionsLabel(props.showOptions)}\n                </span>\n            )}\n            <div\n                id=\"extra-options\"\n                className={getExtraOptionsClassName(props.showOptions)}\n            >\n                <OrganisationUnitGroupSets />\n            </div>\n        </div>\n        {formLabel.styles}\n        <style jsx>{`\n            .hide-options {\n                display: none;\n            }\n            .show-options {\n                display: block;\n            }\n            .show-more-options-button {\n                display: block;\n                cursor: pointer;\n                color: #004ba0;\n                margin-top: 5;\n                margin-bottom: 5;\n                outline: none;\n            }\n        `}</style>\n    </React.Fragment>\n)\n\nOrgUnitsTreeWithExtraOptions.propTypes = {\n    showOptions: PropTypes.bool.isRequired,\n    isLoadingOptions: PropTypes.bool.isRequired,\n    toggleShowOptions: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    showOptions: state.organisationUnits.showOptions,\n    isLoadingOptions: state.orgUnitGroupSets.loading,\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        toggleShowOptions,\n    }\n)(OrgUnitsTreeWithExtraOptions)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport { CheckBox } from '@dhis2/d2-ui-core'\nimport { Button } from '@dhis2/d2-ui-core'\nimport DataSets from '../../components/DatasetsDropdown'\nimport { DataSetDimensions } from '../../components/DataSetDimensions'\nimport PeriodPickerComponent from '../../components/PeriodPickerWithPeriodType'\nimport OrgUnitsTreeWithExtraOptions from '../../components/OrgUnitsTreeWithExtraOptions'\n\nconst Form = props => (\n    <div id=\"data-set-report-form\">\n        <div className=\"row\">\n            <div className=\"col-xs-12 col-md-6\">\n                <OrgUnitsTreeWithExtraOptions />\n            </div>\n            <div className=\"col-xs-12 col-md-6\">\n                <div id=\"data-set-selection\">\n                    <DataSets onChange={props.onDataSetChange} />\n                </div>\n                <div id=\"data-set-dimensions-container\">\n                    <DataSetDimensions />\n                </div>\n                <div id=\"report-period\">\n                    <PeriodPickerComponent label={i18n.t('Report period')} />\n                </div>\n                <CheckBox\n                    id=\"selected-unit-only\"\n                    onChange={props.onSelectedUnitOnlyChange}\n                    value={props.selectedUnitOnly}\n                    label={i18n.t('Use data for selected unit only')}\n                />\n            </div>\n        </div>\n        <div id=\"main-action-button\">\n            <Button\n                id=\"main-action-button\"\n                raised\n                color=\"primary\"\n                onClick={props.onGetReportClick}\n                disabled={props.isGetReportDisabled}\n            >\n                {i18n.t('Get Report')}\n            </Button>\n            <style jsx>{`\n                div {\n                    display: block;\n                    margin-top: 48px;\n                    margin-bottom: 16px;\n                }\n            `}</style>\n        </div>\n    </div>\n)\n\nForm.propTypes = {\n    selectedUnitOnly: PropTypes.bool.isRequired,\n    onDataSetChange: PropTypes.func.isRequired,\n    onSelectedUnitOnlyChange: PropTypes.func.isRequired,\n    isGetReportDisabled: PropTypes.bool.isRequired,\n    onGetReportClick: PropTypes.func.isRequired,\n}\n\nexport default Form\n","import Paper from '@material-ui/core/Paper'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n    DATA_SET_REPORT_SECTION_KEY,\n    sections,\n} from '../config/sections.config'\nimport { SectionHeadline } from '../components/SectionHeadline'\nimport { Snackbar } from '../components/feedback/Snackbar'\nimport { connectDataSetReport } from './data-set-report/connectDataSetReport'\nimport { container } from '../utils/styles/shared.js'\nimport { reportContent } from '../utils/react/propTypes'\nimport DataSetReportOutput from './data-set-report/DataSetReportOutput'\nimport Form from './data-set-report/Form'\n\nconst DataSetReport = props => (\n    <div>\n        <SectionHeadline\n            label={sections[DATA_SET_REPORT_SECTION_KEY].info.label}\n            sectionKey={DATA_SET_REPORT_SECTION_KEY}\n        />\n        <Paper className={container.className}>\n            <div id=\"data-set-report-form\">\n                <Form\n                    selectedUnitOnly={props.selectedUnitOnly}\n                    onDataSetChange={props.selectDataSet}\n                    onSelectedUnitOnlyChange={props.toggleSelectedUnitOnly}\n                    onGetReportClick={props.loadReportData}\n                    isGetReportDisabled={!props.isActionEnabled}\n                />\n            </div>\n            <DataSetReportOutput\n                isHtmlReport={props.isHtmlReport}\n                content={props.reportContent}\n                isLoading={props.isReportLoading}\n                fileUrls={props.fileUrls}\n                reportComment={props.reportComment}\n                shareDataSetReportComment={props.shareDataSetReportComment}\n                setDataSetReportComment={props.setDataSetReportComment}\n            />\n            {container.styles}\n        </Paper>\n        <Snackbar />\n    </div>\n)\n\nDataSetReport.propTypes = {\n    fileUrls: PropTypes.array.isRequired,\n    isHtmlReport: PropTypes.bool.isRequired,\n    reportContent: reportContent.isRequired,\n    reportComment: PropTypes.string.isRequired,\n    isReportLoading: PropTypes.bool.isRequired,\n    isActionEnabled: PropTypes.bool.isRequired,\n    selectedUnitOnly: PropTypes.bool.isRequired,\n    loadReportData: PropTypes.func.isRequired,\n    selectDataSet: PropTypes.func.isRequired,\n    toggleSelectedUnitOnly: PropTypes.func.isRequired,\n    shareDataSetReportComment: PropTypes.func.isRequired,\n    setDataSetReportComment: PropTypes.func.isRequired,\n}\n\nconst ConnectedDataSetReport = connectDataSetReport(DataSetReport)\n\nexport { ConnectedDataSetReport as DataSetReport }\n","import i18n from '@dhis2/d2-i18n'\nimport { DropDown } from '@dhis2/d2-ui-core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { setGroupSet } from '../redux/actions/orgUnitGroupSets'\nimport { formLabel } from '../utils/styles/shared.js'\n\nconst label = i18n.t('Group Set')\nconst hintText = i18n.t('Select Group Set')\n\nexport const GroupSetsDropdown = props => (\n    <div>\n        <span className={formLabel.className}>{label}</span>\n        <DropDown\n            fullWidth={props.fullWidth}\n            value={props.selected}\n            onChange={props.selectGroupSet}\n            menuItems={props.collection}\n            includeEmpty\n            emptyLabel={hintText}\n            hintText={hintText}\n        />\n        {formLabel.styles}\n    </div>\n)\n\nGroupSetsDropdown.propTypes = {\n    collection: PropTypes.array.isRequired,\n    selected: PropTypes.string.isRequired,\n    selectGroupSet: PropTypes.func.isRequired,\n    fullWidth: PropTypes.bool,\n}\n\nGroupSetsDropdown.defaultProps = {\n    fullWidth: true,\n}\n\nconst mapStateToProps = state => ({\n    collection: state.orgUnitGroupSets.collection,\n    selected: state.orgUnitGroupSets.selected,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    selectGroupSet: e => dispatch(setGroupSet(e.target.value)),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(GroupSetsDropdown)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from '@dhis2/d2-ui-core'\nimport i18n from '@dhis2/d2-i18n'\nimport OrganisationUnitsTree from '../../components/AvailableOrganisationUnitsTree'\nimport GroupSets from '../../components/GroupSetsDropdown'\nimport { formLabel, actionsContainer } from '../../utils/styles/shared.js'\n\nexport const Form = props => (\n    <div id=\"org-unit-dist-report-form\">\n        <div className=\"row\">\n            <div className=\"col-xs-12 col-md-6\">\n                <div className={formLabel.className}>\n                    {i18n.t('Report organisation unit')}\n                </div>\n                <OrganisationUnitsTree />\n            </div>\n            <div className=\"col-xs-12 col-md-6\">\n                <div id=\"group-sets-selection\">\n                    <GroupSets />\n                </div>\n            </div>\n        </div>\n        <div id=\"actions\" className={actionsContainer.className}>\n            <Button\n                raised\n                color=\"primary\"\n                onClick={props.onGetReportClick}\n                disabled={!props.isActionEnabled}\n            >\n                {i18n.t('Get Report')}\n            </Button>\n            <Button\n                raised\n                color=\"accent\"\n                onClick={props.onGetChartClick}\n                disabled={!props.isActionEnabled}\n            >\n                {i18n.t('Get Chart')}\n            </Button>\n        </div>\n        {formLabel.styles}\n        {actionsContainer.styles}\n        <style jsx>{`\n            div #actions :global(.d2-ui-button):first-child {\n                margin-right: 16px;\n            }\n        `}</style>\n    </div>\n)\n\nForm.propTypes = {\n    isActionEnabled: PropTypes.bool.isRequired,\n    onGetReportClick: PropTypes.func.isRequired,\n    onGetChartClick: PropTypes.func.isRequired,\n}\n","import { getOrgUnitDistReport } from '../../utils/api'\nimport {\n    loadingReportDataStart,\n    loadingReportDataSuccessWithFeedback,\n    loadingReportDataErrorWithFeedback,\n} from './reportData'\n\nexport const actionTypes = {\n    SET_TABULAR_OUTPUT: 'SET_TABULAR_OUTPUT',\n    SET_CHART_OUTPUT: 'SET_CHART_OUTPUT',\n}\n/**\n * @returns {Object}\n */\nexport const setOutputToChart = () => ({\n    type: actionTypes.SET_CHART_OUTPUT,\n})\n\n/**\n * @returns {Object}\n */\nexport const setOutputToTabular = () => ({\n    type: actionTypes.SET_TABULAR_OUTPUT,\n})\n\n/**\n * @returns {Function}\n */\nexport const loadChart = () => dispatch => {\n    dispatch(setOutputToChart())\n    dispatch(loadReport())\n}\n\n/**\n * @returns {Function}\n */\nexport const loadTable = () => dispatch => {\n    dispatch(setOutputToTabular())\n    dispatch(loadReport())\n}\n\n/**\n * @returns {Function}\n */\nexport const loadReport = () => (dispatch, getState) => {\n    dispatch(loadingReportDataStart())\n\n    const {\n        organisationUnits,\n        orgUnitGroupSets,\n        orgUnitDistReport: { shouldShowChart },\n    } = getState()\n    const orgUnit = organisationUnits.selected\n    const groupSetId = orgUnitGroupSets.selected\n\n    return getOrgUnitDistReport(orgUnit, groupSetId, shouldShowChart)\n        .then(response =>\n            dispatch(\n                loadingReportDataSuccessWithFeedback(response, shouldShowChart)\n            )\n        )\n        .catch(error => dispatch(loadingReportDataErrorWithFeedback(error)))\n}\n","export const getIsActionEnabled = state =>\n    !!(\n        state.organisationUnits.selected &&\n        state.orgUnitGroupSets.selected &&\n        !state.reportData.loading\n    )\n","/**\n * @param {Object} state - app state\n * @returns {String} - table title\n */\nexport function getTitle(state) {\n    return [\n        state.reportData.content.headers[1].column,\n        state.organisationUnits.selected.displayName,\n    ].join(' - ')\n}\n","import i18n from '@dhis2/d2-i18n'\nimport isEmpty from 'lodash.isempty'\nimport createDataTransformCache from '../../../utils/dataTransformCache'\nimport { getTitle } from '../../../utils/dataTransformHelpers'\n\nconst orgUnitColumnDisplayName = i18n.t('Organisation Unit')\nconst totalColumnDisplayName = i18n.t('Total')\nexport const cache = createDataTransformCache()\n\n/**\n * @param {Object} state - App state\n * @returns {Object} - Transformed table data that can be consumed by TabularReport\n */\nexport default function getTransformedTableData(state) {\n    const data = state.reportData.content\n\n    if (isEmpty(data)) {\n        return data\n    }\n\n    if (cache.hasValidCacheFor(data)) {\n        return cache.getCachedResult()\n    }\n\n    const tableData = {\n        title: getTitle(state),\n        headers: getHeaders(data.headers),\n        rows: getRows(state),\n    }\n\n    cache.setCachedResult(data, tableData)\n    return tableData\n}\n\n/**\n * @param {Array} headers - The headers array from the response data structure\n * @returns {Array<String>} - table header names\n */\nfunction getHeaders(headers) {\n    return [\n        ...headers.map(header =>\n            header.name === 'ou' ? orgUnitColumnDisplayName : header.column\n        ),\n        totalColumnDisplayName,\n    ]\n}\n\n/**\n * @param {Object} state - app state\n * @returns {Array} - a nested array containing values for each column\n */\nfunction getRows(state) {\n    const { rows } = state.reportData.content\n    const selectedOrgUnitName = state.organisationUnits.selected.displayName\n    return rows\n        .map(toNumericWithTotal)\n        .sort((rowA, rowB) =>\n            ascByNameWithParentBelow(rowA, rowB, selectedOrgUnitName)\n        )\n}\n\nfunction toNumericWithTotal(cells) {\n    const cellsWithTotals = cells.reduce(\n        (acc, cellStr, index) => {\n            if (index === 0) {\n                acc.cells.push(cellStr)\n            } else {\n                const cellVal = cellStr ? parseInt(cellStr, 10) : 0\n                acc.cells.push(cellVal)\n                acc.total += cellVal\n            }\n            return acc\n        },\n        { cells: [], total: 0 }\n    )\n    return [...cellsWithTotals.cells, cellsWithTotals.total]\n}\n\n/**\n * This function is used to sort the rows, which needs to be done ASC by name\n * with the exception of the parent orgUnit, which should be the last item\n * @param {Array} a - current row, with org unit name at index 0\n * @param {Array} b - next row\n * @param {String} selectedOrgUnitName - name of the org unit parent\n * @returns {Number} - values 1 || -1 || 0 for sorting\n */\nfunction ascByNameWithParentBelow(a, b, selectedOrgUnitName) {\n    const nameA = a[0].toUpperCase()\n    const nameB = b[0].toUpperCase()\n    const upperOrgUnitName = selectedOrgUnitName.toUpperCase()\n\n    if (nameB === upperOrgUnitName) return -1\n    if (nameA === upperOrgUnitName) return 1\n\n    return nameA.localeCompare(nameB)\n}\n","export const FONT_FAMILY = \"'Roboto', sans-serif\"\nexport const BASE_COLOR = '39, 102, 150' // DHIS2 blue\n","import isEmpty from 'lodash.isempty'\nimport i18n from '@dhis2/d2-i18n'\nimport { getTitle } from '../../../utils/dataTransformHelpers'\nimport createDataTransformCache from '../../../utils/dataTransformCache'\nimport { FONT_FAMILY, BASE_COLOR } from '../../../config/style.config'\n\nexport const cache = createDataTransformCache()\n\n/**\n * @param {Object} state - App state\n * @returns {Object} - Transformed table data that can be consumed by BarChart\n */\nexport default function getTransformedChartData(state) {\n    const data = state.reportData.content\n\n    if (isEmpty(data)) {\n        return data\n    }\n\n    if (cache.hasValidCacheFor(data)) {\n        return cache.getCachedResult()\n    }\n\n    const chartData = getChartData(\n        getLabels(data.headers),\n        getDataPoints(data.rows[0]),\n        getTitle(state)\n    )\n\n    cache.setCachedResult(data, chartData)\n    return chartData\n}\n\nfunction getLabels(headers) {\n    return headers.reduce((acc, header, index) => {\n        if (index > 0) {\n            acc.push(header.column)\n        }\n        return acc\n    }, [])\n}\n\nfunction getDataPoints(cells) {\n    return cells.reduce((acc, cell, index) => {\n        if (index > 0) {\n            acc.push(parseInt(cell, 10))\n        }\n        return acc\n    }, [])\n}\n\nfunction getChartData(labels, data, title) {\n    return {\n        data: {\n            labels,\n            datasets: [\n                {\n                    label: i18n.t('Count'),\n                    backgroundColor: `rgba(${BASE_COLOR}, 0.6)`,\n                    borderColor: `rgb(${BASE_COLOR})`,\n                    borderWidth: 1,\n                    hoverBackgroundColor: `rgba(${BASE_COLOR}, 0.8)`,\n                    data,\n                },\n            ],\n        },\n        options: {\n            title: {\n                display: true,\n                text: title,\n                fontSize: '16',\n                fontFamily: FONT_FAMILY,\n            },\n            legend: {\n                position: 'bottom',\n                fontFamily: FONT_FAMILY,\n            },\n            animation: {\n                duration: 180,\n            },\n        },\n    }\n}\n","import { connect } from 'react-redux'\nimport { loadChart, loadTable } from '../../redux/actions/orgUnitDistReport'\nimport { loadGroupSetOptions } from '../../redux/actions/orgUnitGroupSets'\nimport { getIsActionEnabled } from '../../redux/selectors/orgUnitDistReport/getIsActionEnabled'\nimport getTransformedTableData from '../../redux/selectors/orgUnitDistReport/getTransformedTableData'\nimport getTransformedChartData from '../../redux/selectors/orgUnitDistReport/getTransformedChartData'\n\nconst mapStateToProps = state => ({\n    shouldShowChart: state.orgUnitDistReport.shouldShowChart,\n    loading: state.reportData.loading,\n    reportContent: state.orgUnitDistReport.shouldShowChart\n        ? getTransformedChartData(state)\n        : getTransformedTableData(state),\n    fileUrls: state.reportData.content.fileUrls || [],\n    isActionEnabled: getIsActionEnabled(state),\n    groupSetsReady: !!state.orgUnitGroupSets.collection.length,\n})\n\nconst mapDispatchToProps = {\n    loadChart,\n    loadTable,\n    loadGroupSetOptions,\n}\n\nexport const connectOrganisationUnitDistributionReport = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Bar } from 'react-chartjs-2'\nimport ReportLoader from './ReportLoader'\n\nconst BarChart = ({ content, isLoading }) => (\n    <ReportLoader content={content} isLoading={isLoading}>\n        <div className=\"chart\">\n            <Bar data={content.data} options={content.options} />\n        </div>\n    </ReportLoader>\n)\n\nBarChart.propTypes = {\n    content: PropTypes.object.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n}\n\nexport default BarChart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DownloadOptions } from './TabularReport/DownloadOptions'\nimport ReportTable from './TabularReport/ReportTable'\nimport ReportLoader from './ReportLoader'\n\nconst TabularReport = ({ content, isLoading, fileUrls }) => (\n    <ReportLoader content={content} isLoading={isLoading}>\n        <div className=\"tabular-report\">\n            <DownloadOptions fileUrls={fileUrls} />\n            <ReportTable content={content} />\n        </div>\n    </ReportLoader>\n)\n\nTabularReport.propTypes = {\n    content: PropTypes.object.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    fileUrls: PropTypes.array.isRequired,\n}\n\nexport default TabularReport\n","import Paper from '@material-ui/core/Paper'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { Form } from './organisation-unit-distribution-report/Form'\nimport {\n    ORG_UNIT_DIST_REPORT_SECTION_KEY,\n    sections,\n} from '../config/sections.config'\nimport { SectionHeadline } from '../components/SectionHeadline'\nimport { Snackbar } from '../components/feedback/Snackbar'\nimport { connectOrganisationUnitDistributionReport } from './organisation-unit-distribution-report/connectOrganisationUnitDistributionReport'\nimport { container } from '../utils/styles/shared.js'\nimport { reportContent } from '../utils/react/propTypes'\nimport BarChart from '../components/BarChart'\nimport TabularReport from '../components/TabularReport'\n\nclass OrganisationUnitDistributionReport extends React.Component {\n    componentDidMount() {\n        if (!this.props.groupSetsReady) {\n            this.props.loadGroupSetOptions()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <SectionHeadline\n                    label={\n                        sections[ORG_UNIT_DIST_REPORT_SECTION_KEY].info.label\n                    }\n                    sectionKey={ORG_UNIT_DIST_REPORT_SECTION_KEY}\n                />\n                <Paper className={container.className}>\n                    <Form\n                        isActionEnabled={this.props.isActionEnabled}\n                        onGetReportClick={this.props.loadTable}\n                        onGetChartClick={this.props.loadChart}\n                    />\n                    <div id=\"report-container\">\n                        {!this.props.shouldShowChart && (\n                            <TabularReport\n                                content={this.props.reportContent}\n                                isLoading={this.props.loading}\n                                fileUrls={this.props.fileUrls}\n                            />\n                        )}\n                        {this.props.shouldShowChart && (\n                            <BarChart\n                                content={this.props.reportContent}\n                                isLoading={this.props.loading}\n                            />\n                        )}\n                    </div>\n                </Paper>\n                <Snackbar />\n                {container.styles}\n            </div>\n        )\n    }\n}\n\nOrganisationUnitDistributionReport.propTypes = {\n    isActionEnabled: PropTypes.bool.isRequired,\n    shouldShowChart: PropTypes.bool.isRequired,\n    loading: PropTypes.bool.isRequired,\n    groupSetsReady: PropTypes.bool.isRequired,\n    fileUrls: PropTypes.array.isRequired,\n    reportContent: reportContent.isRequired,\n    loadTable: PropTypes.func.isRequired,\n    loadChart: PropTypes.func.isRequired,\n    loadGroupSetOptions: PropTypes.func.isRequired,\n}\n\nconst ConnectedOrganisationUnitDistributionReport = connectOrganisationUnitDistributionReport(\n    OrganisationUnitDistributionReport\n)\n\nexport {\n    ConnectedOrganisationUnitDistributionReport as OrganisationUnitDistributionReport,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from '@dhis2/d2-ui-core'\nimport i18n from '@dhis2/d2-i18n'\nimport DataSets from '../../components/DatasetsDropdown'\nimport OrgUnitsTreeWithExtraOptions from '../../components/OrgUnitsTreeWithExtraOptions'\nimport PeriodPickerComponent from '../../components/PeriodPickerWithPeriodType'\nimport { actionsContainer } from '../../utils/styles/shared.js'\n\nexport const Form = props => (\n    <div id=\"report-rate-summary-form\">\n        <div className=\"row\">\n            <div className=\"col-xs-12 col-md-6\">\n                <OrgUnitsTreeWithExtraOptions />\n            </div>\n            <div className=\"col-xs-12 col-md-6\">\n                <div id=\"data-set-selection\">\n                    <DataSets />\n                </div>\n                <div id=\"report-period\">\n                    <PeriodPickerComponent label={i18n.t('Report period')} />\n                </div>\n            </div>\n        </div>\n        <div id=\"main-action-button\" className={actionsContainer.className}>\n            <Button\n                raised\n                color=\"primary\"\n                onClick={props.loadReportData}\n                disabled={!props.isActionEnabled}\n            >\n                {i18n.t('Get Report')}\n            </Button>\n        </div>\n        {actionsContainer.styles}\n    </div>\n)\n\nForm.propTypes = {\n    showForm: PropTypes.bool,\n    isActionEnabled: PropTypes.bool.isRequired,\n    loadReportData: PropTypes.func.isRequired,\n}\n\nForm.defaultProps = {\n    showForm: true,\n}\n","import { getReportingRateSummaryReport } from '../../utils/api'\nimport {\n    loadingReportDataStart,\n    loadingReportDataSuccessWithFeedback,\n    loadingReportDataErrorWithFeedback,\n} from './reportData'\n\n/**\n * @returns {Function} redux thunk\n */\nexport const loadReportData = () => (dispatch, getState) => {\n    dispatch(loadingReportDataStart())\n\n    const { organisationUnits, dataSet, reportPeriod } = getState()\n\n    return getReportingRateSummaryReport(\n        organisationUnits.selected,\n        dataSet.selected.id,\n        reportPeriod.selectedPeriod,\n        organisationUnits.selectedOptions\n    )\n        .then(response =>\n            dispatch(loadingReportDataSuccessWithFeedback(response))\n        )\n        .catch(error => dispatch(loadingReportDataErrorWithFeedback(error)))\n}\n","export const getIsActionEnabled = state =>\n    !!(\n        state.organisationUnits.selected &&\n        state.reportPeriod.selectedPeriod &&\n        state.dataSet.selected.id &&\n        !state.reportData.loading\n    )\n","import i18n from '@dhis2/d2-i18n'\nimport isEmpty from 'lodash.isempty'\nimport createDataTransformCache from '../../../utils/dataTransformCache'\n\nconst cache = createDataTransformCache()\nconst nameColumnDisplayName = i18n.t('Name')\nconst rowIndexesToRead = [\n    1, // Org unit name\n    4, // column values\n    5,\n    6,\n    7,\n    8,\n]\n\nexport default function getTransformedTableData(state) {\n    const data = state.reportData.content\n\n    if (isEmpty(data)) {\n        return data\n    }\n\n    if (cache.hasValidCacheFor(data)) {\n        return cache.getCachedResult()\n    }\n\n    const tableData = {\n        title: parseTitle(state),\n        headers: parseHeaders(data),\n        rows: parseRows(data.rows),\n    }\n\n    cache.setCachedResult(data, tableData)\n    return tableData\n}\n\nexport function parseTitle(state) {\n    return [\n        state.organisationUnits.selected.displayName,\n        state.dataSet.selected.displayName,\n        state.reportData.content.title,\n    ].join(' - ')\n}\n\nexport function parseHeaders(data) {\n    return data.metaData.dimensions.dx.reduce(\n        (acc, dimensionCode) => {\n            acc.push(data.metaData.items[dimensionCode].name)\n            return acc\n        },\n        [nameColumnDisplayName]\n    )\n}\n\nexport function parseRows(rowsWithAllFields) {\n    return rowsWithAllFields\n        .map(row =>\n            rowIndexesToRead.reduce((acc, rowIndex) => {\n                acc.push(row[rowIndex])\n                return acc\n            }, [])\n        )\n        .sort(\n            (a, b) => parseFloat(b[b.length - 1]) - parseFloat(a[a.length - 1])\n        )\n}\n","import { connect } from 'react-redux'\nimport { loadReportData } from '../../redux/actions/reportingRateSummary'\nimport { getIsActionEnabled } from '../../redux/selectors/reportingRateSummary/getIsActionEnabled'\nimport getTransformedTableData from '../../redux/selectors/reportingRateSummary/getTransformedTableData.js'\n\nconst mapStateToProps = state => ({\n    reportContent: getTransformedTableData(state),\n    fileUrls: state.reportData.content.fileUrls || [],\n    isReportLoading: state.reportData.loading,\n    isActionEnabled: getIsActionEnabled(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    loadReportData: () => dispatch(loadReportData()),\n})\n\nexport const connectReportingRateSummary = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\n","import Paper from '@material-ui/core/Paper'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { Form } from './reporting-rate-summary/Form'\nimport {\n    REPORTING_RATE_SUMMARY_SECTION_KEY,\n    sections,\n} from '../config/sections.config'\nimport { SectionHeadline } from '../components/SectionHeadline'\nimport { Snackbar } from '../components/feedback/Snackbar'\nimport { connectReportingRateSummary } from './reporting-rate-summary/connectReportingRateSummary'\nimport { container } from '../utils/styles/shared.js'\nimport { reportContent } from '../utils/react/propTypes'\nimport TabularReport from '../components/TabularReport'\n\nconst ReportingRateSummary = props => (\n    <div>\n        <SectionHeadline\n            label={sections[REPORTING_RATE_SUMMARY_SECTION_KEY].info.label}\n            sectionKey={REPORTING_RATE_SUMMARY_SECTION_KEY}\n        />\n        <Paper className={container.className}>\n            <Form\n                loadReportData={props.loadReportData}\n                isActionEnabled={props.isActionEnabled}\n            />\n            <TabularReport\n                content={props.reportContent}\n                isLoading={props.isReportLoading}\n                fileUrls={props.fileUrls}\n            />\n        </Paper>\n        <Snackbar />\n        {container.styles}\n    </div>\n)\n\nReportingRateSummary.propTypes = {\n    isActionEnabled: PropTypes.bool.isRequired,\n    loadReportData: PropTypes.func.isRequired,\n    reportContent: reportContent.isRequired,\n    fileUrls: PropTypes.array.isRequired,\n    isReportLoading: PropTypes.bool.isRequired,\n}\n\nconst ConnectedReportingRateSummary = connectReportingRateSummary(\n    ReportingRateSummary\n)\n\nexport { ConnectedReportingRateSummary as ReportingRateSummary }\n","export const actionTypes = {\n    GO_TO_NEXT_PAGE: 'GO_TO_NEXT_PAGE',\n    GO_TO_PREV_PAGE: 'GO_TO_PREV_PAGE',\n    SET_PAGINATION: 'SET_PAGINATION',\n    RESET_PAGINATION: 'RESET_PAGINATION',\n}\n\n/**\n * @return {Object}\n */\nexport const goToNextPage = () => ({\n    type: actionTypes.GO_TO_NEXT_PAGE,\n})\n\n/**\n * @return {Object}\n */\nexport const goToPrevPage = () => ({\n    type: actionTypes.GO_TO_PREV_PAGE,\n})\n\n/**\n * @param {Object} pagination\n * @returns {Object}\n */\nexport const setPagination = pagination => ({\n    type: actionTypes.SET_PAGINATION,\n    payload: pagination,\n})\n\n/**\n * returns {Object}\n */\nexport const resetPagination = () => ({\n    type: actionTypes.RESET_PAGINATION,\n})\n","import debounce from 'lodash.debounce'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { DEBOUNCE_DELAY } from '../../config/search.config'\nimport { RESOURCE_ENDPOINT } from '../../utils/api'\nimport {\n    getApi,\n    getResources,\n    postResource,\n    putResource,\n    deleteResource as sendDeleteResourceRequest,\n} from '../../utils/api'\nimport {\n    goToNextPage as goToNextPageOrig,\n    goToPrevPage as goToPrevPageOrig,\n    resetPagination,\n    setPagination,\n} from './pagination'\nimport {\n    showSuccessSnackBar,\n    showErrorSnackBar,\n    showConfirmationSnackBar,\n} from './feedback'\nimport humanReadableErrorMessage from '../../utils/humanReadableErrorMessage'\n\nexport const actionTypes = {\n    LOADING_RESOURCES_START: 'LOADING_RESOURCES_START',\n    LOADING_RESOURCES_SUCCESS: 'LOADING_RESOURCES_SUCCESS',\n    LOADING_RESOURCES_ERROR: 'LOADING_RESOURCES_ERROR',\n    SET_RESOURCE_SEARCH: 'SET_RESOURCE_SEARCH',\n    VIEW_RESOURCE: 'VIEW_RESOURCE',\n    SHOW_SHARING_SETTINGS: 'SHOW_SHARING_SETTINGS',\n    EDIT_RESOURCE: 'EDIT_RESOURCE',\n    ADD_RESOURCE: 'ADD_RESOURCE',\n    REQUEST_DELETE_RESOURCE: 'REQUEST_DELETE_RESOURCE',\n    DELETE_RESOURCE_START: 'DELETE_RESOURCE_START',\n    DELETE_RESOURCE_SUCCESS: 'DELETE_RESOURCE_SUCCESS',\n    DELETE_RESOURCE_ERROR: 'DELETE_RESOURCE_ERROR',\n    RESET_CONTEXT_MENU: 'RESET_CONTEXT_MENU',\n    RESOURCE_ADD_LOADING_START: 'RESOURCE_ADD_LOADING_START',\n    RESOURCE_ADD_LOADING_SUCCESS: 'RESOURCE_ADD_LOADING_SUCCESS',\n    RESOURCE_ADD_LOADING_ERROR: 'RESOURCE_ADD_LOADING_ERROR',\n    RESOURCE_EDIT_LOADING_START: 'RESOURCE_EDIT_LOADING_START',\n    RESOURCE_EDIT_LOADING_SUCCESS: 'RESOURCE_EDIT_LOADING_SUCCESS',\n    RESOURCE_EDIT_LOADING_ERROR: 'RESOURCE_EDIT_LOADING_ERROR',\n}\n\n/**\n * @returns {Object}\n */\nexport const loadingResourcesStart = () => ({\n    type: actionTypes.LOADING_RESOURCES_START,\n})\n\n/**\n * @param {Array} resources\n * @returns {Object}\n */\nexport const loadingResourcesSuccess = resources => ({\n    type: actionTypes.LOADING_RESOURCES_SUCCESS,\n    payload: resources,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingResourcesError = () => ({\n    type: actionTypes.LOADING_RESOURCES_ERROR,\n})\n\n/**\n * @param {Error} error\n * @returns {Function}\n */\nexport const loadingResourcesErrorWithFeedback = error => dispatch => {\n    const defaultMessage = i18n.t(\n        'An error occurred while loading the resources!'\n    )\n    const displayMessage = humanReadableErrorMessage(error, defaultMessage)\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadingResourcesError())\n}\n\n/**\n * @returns {Function}\n */\nexport const loadResources = () => (dispatch, getState) => {\n    dispatch(loadingResourcesStart())\n    const { pagination, resource } = getState()\n    const { page, pageSize } = pagination\n    const { search } = resource\n\n    return getResources(page, pageSize, search)\n        .then(response => {\n            dispatch(loadingResourcesSuccess(response.documents))\n            dispatch(setPagination(response.pager))\n        })\n        .catch(error => {\n            dispatch(loadingResourcesErrorWithFeedback(error))\n        })\n}\n\n/**\n * @param {number} nextPage\n * @return {Function}\n */\nexport const goToNextPage = () => dispatch => {\n    dispatch(goToNextPageOrig())\n    dispatch(loadResources())\n}\n\n/**\n * @param {number} nextPage\n * @return {Function}\n */\nexport const goToPrevPage = () => dispatch => {\n    dispatch(goToPrevPageOrig())\n    dispatch(loadResources())\n}\n\n/**\n * @param {string} searchTerm\n * @returns {Object}\n */\nexport const setSearch = searchTerm => ({\n    type: actionTypes.SET_RESOURCE_SEARCH,\n    payload: searchTerm,\n})\n\n/**\n * @param {string} searchTerm\n * @return {Function} Redux thunk\n */\nconst debouncedLoadResources = debounce(\n    dispatch => dispatch(loadResources()),\n    DEBOUNCE_DELAY\n)\nexport const setSearchAndLoadResources = searchTerm => dispatch => {\n    dispatch(setSearch(searchTerm))\n    debouncedLoadResources(dispatch)\n}\n\n/**\n * @param {Object} resource\n * @param {string} resource.id\n * @returns {Object}\n */\nexport const viewResource = resource => {\n    const { id } = resource\n    const baseUrl = getApi().baseUrl\n    const resourceUrl = `${baseUrl}/${RESOURCE_ENDPOINT}/${id}/data`\n    window.open(resourceUrl)\n\n    return {\n        type: actionTypes.VIEW_RESOURCE,\n        payload: resource,\n    }\n}\n\n/**\n * @param {Object} resource\n * @returns {Object}\n */\nexport const showSharingSettings = resource => ({\n    type: actionTypes.SHOW_SHARING_SETTINGS,\n    payload: resource,\n})\n\n/**\n * @param {Object} resource\n * @returns {Object}\n */\nexport const editResource = resource => ({\n    type: actionTypes.EDIT_RESOURCE,\n    payload: resource,\n})\n\n/**\n * @returns {Object}\n */\nexport const addResource = resource => ({\n    type: actionTypes.ADD_RESOURCE,\n    payload: resource,\n})\n\n/**\n * Used to get a confirmation from the user\n * @return {Object}\n */\nconst confirmationMessage = i18n.t(\n    'Do you really want to delete this resource?'\n)\nexport const requestDeleteResource = resource => dispatch => {\n    dispatch({\n        type: actionTypes.REQUEST_DELETE_RESOURCE,\n        payload: resource,\n    })\n    dispatch(showConfirmationSnackBar(confirmationMessage))\n}\n\nexport const deleteResourceStart = () => ({\n    type: actionTypes.DELETE_RESOURCE_START,\n})\n\nexport const deleteResourceSuccess = () => ({\n    type: actionTypes.DELETE_RESOURCE_SUCCESS,\n})\n\nexport const deleteResourceError = () => ({\n    type: actionTypes.DELETE_RESOURCE_ERROR,\n})\n\nconst successMessage = i18n.t('The resource has been deleted successfully')\nexport const deleteResourceSuccessWithFeedback = () => dispatch => {\n    dispatch(showSuccessSnackBar(successMessage))\n    dispatch(deleteResourceSuccess())\n}\n\nconst defaultDeleteResourceErrorMessage = i18n.t(\n    'An error occurred when deleting the resource!'\n)\nexport const deleteResourceErrorWithFeedback = error => dispatch => {\n    const message = humanReadableErrorMessage(\n        error,\n        defaultDeleteResourceErrorMessage\n    )\n    dispatch(showErrorSnackBar(message))\n    dispatch(deleteResourceError())\n}\n\nexport const deleteResource = () => (dispatch, getState) => {\n    dispatch(deleteResourceStart())\n    const {\n        resource: { selectedResource },\n    } = getState()\n    return sendDeleteResourceRequest(selectedResource.id)\n        .then(() => {\n            dispatch(deleteResourceSuccessWithFeedback())\n            dispatch(loadResources())\n        })\n        .catch(error => dispatch(deleteResourceErrorWithFeedback(error)))\n}\n\nexport const resetContextMenu = () => ({\n    type: actionTypes.RESET_CONTEXT_MENU,\n})\n\nexport const closeContextMenu = refreshList => dispatch => {\n    dispatch(resetContextMenu())\n\n    if (refreshList) {\n        dispatch(resetPagination())\n        dispatch(loadResources())\n    }\n}\n\n/**\n *\n * Adding a resource\n *\n */\n\n/**\n * @returns {Object}\n */\nexport const loadingAddResourceStart = () => ({\n    type: actionTypes.RESOURCE_ADD_LOADING_START,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingAddResourceSuccess = () => ({\n    type: actionTypes.RESOURCE_ADD_LOADING_SUCCESS,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingAddResourceError = () => ({\n    type: actionTypes.RESOURCE_ADD_LOADING_ERROR,\n})\n\n/**\n * @param {Error} error\n * @returns {Function}\n */\nexport const loadingAddResourceErrorWithFeedback = error => dispatch => {\n    const defaultAddResourceErrorMessage = i18n.t(\n        'An error occurred while adding the resource!'\n    )\n    const displayMessage = humanReadableErrorMessage(\n        error,\n        defaultAddResourceErrorMessage\n    )\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadingAddResourceError())\n}\n\n/**\n * @param {Object} resource\n * @param {File} [file]\n * @returns {Function}\n */\nexport const addNewResource = (resource, file) => dispatch => {\n    dispatch(loadingAddResourceStart())\n\n    postResource(resource, file)\n        .then(() => {\n            dispatch(loadingAddResourceSuccess())\n            dispatch(loadResources())\n        })\n        .catch(error => {\n            dispatch(loadingAddResourceErrorWithFeedback(error))\n        })\n}\n\n/**\n *\n * Editing a resource\n *\n */\n\n/**\n * @returns {Object}\n */\nexport const loadingEditResourceStart = () => ({\n    type: actionTypes.RESOURCE_EDIT_LOADING_START,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingEditResourceSuccess = () => ({\n    type: actionTypes.RESOURCE_EDIT_LOADING_SUCCESS,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingEditResourceError = () => ({\n    type: actionTypes.RESOURCE_EDIT_LOADING_ERROR,\n})\n\n/**\n * @param {Error} error\n * @returns {Function}\n */\nexport const loadingEditResourceErrorWithFeedback = error => dispatch => {\n    const defaultAddResourceErrorMessage = i18n.t(\n        'An error occurred while saving the modifications!'\n    )\n    const displayMessage = humanReadableErrorMessage(\n        error,\n        defaultAddResourceErrorMessage\n    )\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadingAddResourceError())\n}\n\n/**\n * @param {Object} resource\n * @param {File} [file]\n * @returns {Function}\n */\nexport const updateResource = (resource, file) => (dispatch, getState) => {\n    dispatch(loadingEditResourceStart())\n\n    const resourceId = getState().resource.selectedResource.id\n    putResource(resourceId, resource, file)\n        .then(() => {\n            dispatch(loadingEditResourceSuccess())\n            dispatch(loadResources())\n        })\n        .catch(error => {\n            dispatch(loadingEditResourceErrorWithFeedback(error))\n        })\n}\n","export const DEBOUNCE_DELAY = 500\n","import { connect } from 'react-redux'\n\nimport {\n    addResource,\n    closeContextMenu,\n    requestDeleteResource,\n    deleteResource,\n    editResource,\n    goToNextPage,\n    goToPrevPage,\n    loadResources,\n    setSearchAndLoadResources,\n    showSharingSettings,\n    viewResource,\n} from '../../redux/actions/resource'\n\nconst mapStateToProps = state => ({\n    open: state.resource.open,\n    resources: state.resource.collection,\n    selectedAction: state.resource.selectedAction,\n    selectedResource: state.resource.selectedResource,\n    loadingResources: state.resource.loading,\n    search: state.resource.search,\n    pager: state.pagination,\n})\n\nconst mapDispatchToProps = {\n    goToNextPage,\n    goToPrevPage,\n    loadResources,\n    requestDeleteResource,\n    deleteResource,\n    setSearch: event => setSearchAndLoadResources(event.target.value),\n    addResource,\n    viewResource,\n    editResource,\n    showSharingSettings,\n    closeContextMenu,\n}\n\nexport const connectResource = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\n","import i18n from '@dhis2/d2-i18n'\n\nexport const resourceTypes = {\n    UPLOAD_FILE: 'UPLOAD_FILE',\n    EXTERNAL_URL: 'EXTERNAL_URL',\n}\n\nexport const resourceTypeOptions = [\n    { value: resourceTypes.EXTERNAL_URL, label: i18n.t('External url') },\n    { value: resourceTypes.UPLOAD_FILE, label: i18n.t('Upload file') },\n]\n\nexport const resourceActions = {\n    NEW: 'newResource',\n    VIEW: 'viewResource',\n    EDIT: 'editResource',\n    SHARING_SETTINGS: 'sharingSettings',\n    DELETE: 'delete',\n}\n\nexport const contextMenuIcons = {\n    [resourceActions.VIEW]: 'arrow_right',\n    [resourceActions.EDIT]: 'edit',\n    [resourceActions.SHARING_SETTINGS]: 'people',\n    [resourceActions.DELETE]: 'delete',\n}\n","export const isRequired = value => (value ? undefined : 'Required')\n\nexport const isRequiredWhen = when => (value, values) =>\n    when(values) ? isRequired(value) : undefined\n","import omit from 'lodash.omit'\n\nimport { isRequiredWhen } from '../../utils/form/validators'\nimport { resourceActions, resourceTypes } from '../../utils/resource/constants'\n\nexport const showContextAction = deleteResource => (document, action) => {\n    const access = document && document.access ? document.access : {}\n    const actions = {\n        [resourceActions.VIEW]: access.read,\n        [resourceActions.SHARING_SETTINGS]: access.manage || access.externalize,\n        [resourceActions.DELETE]: deleteResource,\n\n        /**\n         * This is currently not working on the backend for non-external documents\n         * See the docs (docs/sections/resources.md) in this repo for more details\n         */\n        [resourceActions.EDIT]: access.update && document.external,\n    }\n\n    return actions[action] || false\n}\n\nexport const extractFileAndFormattedResource = values => {\n    const file =\n        values.type === resourceTypes.UPLOAD_FILE && values.file\n            ? values.file.file\n            : null\n\n    const resource = omit(values, 'file')\n    const formattedResource = {\n        ...resource,\n        attachment: values.attachment === 'yes',\n        external: values.type === resourceTypes.EXTERNAL_URL,\n    }\n\n    return {\n        file,\n        resource: formattedResource,\n    }\n}\n\n/**\n *\n * Validation\n *\n */\nexport const isTypeExternalUrl = values =>\n    values.type === resourceTypes.EXTERNAL_URL\n\nexport const isTypeUploadFile = values =>\n    values.type === resourceTypes.UPLOAD_FILE\n\nexport const isRequriedWhenTypeExternalUrl = isRequiredWhen(isTypeExternalUrl)\n\nexport const isRequriedWhenTypeUploadFile = isRequiredWhen(isTypeUploadFile)\n","import Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { children } from '../../utils/react/propTypes'\n\nexport const FormDialog = props => (\n    <Dialog open={props.open} onClose={props.onClose} maxWidth=\"md\" fullWidth>\n        <div className=\"form-dialog-title\">\n            <DialogTitle>{props.title}</DialogTitle>\n        </div>\n\n        <div className=\"form-dialog-content\">{props.children}</div>\n\n        {/* \n            Make Dialog always have same width,\n            instead of depending on childrens' width\n        */}\n        <style jsx>{`\n            .form-dialog-title {\n                border-bottom: 1px solid black;\n            }\n\n            .form-dialog-content {\n                width: ${props.maxWidth}px;\n                max-width: 100%;\n                box-sizing: border-box;\n                margin-left: 0;\n                margin-right: 0;\n            }\n        `}</style>\n    </Dialog>\n)\n\nFormDialog.propTypes = {\n    open: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    children: children.isRequired,\n    maxWidth: PropTypes.number,\n}\n\nFormDialog.defaultProps = {\n    maxWidth: 600,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { children } from '../../utils/react/propTypes'\n\nexport const FormSection = ({ show, render, children }) => {\n    if (!show) return null\n\n    return (\n        <section>\n            {children || render()}\n            <style jsx>{`\n                section {\n                    margin: 0 0 10px;\n                    padding: 0 2px;\n                    overflow: hidden;\n                }\n            `}</style>\n        </section>\n    )\n}\n\nFormSection.propTypes = {\n    children,\n    render: PropTypes.func,\n    show: PropTypes.bool,\n}\n\nFormSection.defaultProps = {\n    children: null,\n    render: () => null,\n    show: true,\n}\n","import { Button as D2UIButton } from '@dhis2/d2-ui-core'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const Button = props => (\n    <span>\n        <D2UIButton\n            raised\n            type={props.type}\n            onClick={props.onClick}\n            color={props.isPrimary ? 'primary' : 'default'}\n            disabled={props.disabled}\n        >\n            {props.label}\n        </D2UIButton>\n\n        <style jsx>{`\n            span {\n                display: inline-block;\n                margin-right: 10px;\n            }\n        `}</style>\n    </span>\n)\n\nButton.propTypes = {\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    isPrimary: PropTypes.bool,\n    type: PropTypes.string,\n    disabled: PropTypes.bool,\n}\n\nButton.defaultProps = {\n    isPrimary: false,\n    type: 'submit',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport i18n from '@dhis2/d2-i18n'\nimport { Button } from '../../../../components/form/Button'\n\nexport const Actions = props => (\n    <DialogActions>\n        <Button\n            label={props.onSubmitLabel}\n            isPrimary={true}\n            onClick={props.onSubmit}\n            disabled={props.submitDisabled}\n        />\n\n        <Button label={props.onCancelLabel} onClick={props.onCancel} />\n    </DialogActions>\n)\n\nActions.propTypes = {\n    onSubmitLabel: PropTypes.string.isRequired,\n    onCancelLabel: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    submitDisabled: PropTypes.bool.isRequired,\n}\n\nActions.defaultProps = {\n    onCancelLabel: i18n.t('Cancel'),\n}\n","import React from 'react'\nimport { children } from '../../utils/react/propTypes'\n\nexport const FormRow = props => (\n    <React.Fragment>\n        <div>{props.children}</div>\n\n        <style jsx>{`\n            div {\n                margin-bottom: 20px;\n            }\n        `}</style>\n    </React.Fragment>\n)\n\nFormRow.propTypes = {\n    children: children.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { formInput } from '../../utils/react/propTypes'\n\nexport const RadioButton = props => (\n    <div className=\"form-checkbox\">\n        <div className=\"input-container\">\n            <input\n                id={props.input.name + props.input.value}\n                {...props.input}\n                type=\"radio\"\n            />\n        </div>\n\n        <label\n            className=\"label-container\"\n            htmlFor={props.input.name + props.input.value}\n        >\n            {props.label}\n        </label>\n\n        <style jsx>{`\n            .form-checkbox {\n                align-items: center;\n                display: flex;\n                height: 30px;\n                width: 100%;\n            }\n\n            .input-container {\n                width: 20px;\n            }\n\n            input {\n                display: block;\n                margin: 0;\n            }\n\n            label {\n                display: block;\n                flex-grow: 1;\n            }\n        `}</style>\n    </div>\n)\n\nRadioButton.propTypes = {\n    label: PropTypes.string.isRequired,\n    input: formInput.isRequired,\n}\n","import { Field } from 'react-final-form'\nimport { withStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { RadioButton } from './RadioButton'\n\nconst styles = {\n    container: {\n        margin: '0',\n    },\n    label: {\n        margin: '0 0 10px',\n        fontSize: '1rem',\n        color: 'black',\n    },\n}\n\nexport const RadioButtons = withStyles(styles)(props => (\n    <FormControl className={props.classes.container}>\n        {props.label && (\n            <FormHelperText className={props.classes.label}>\n                {props.label}\n            </FormHelperText>\n        )}\n        {props.showError && (\n            <Field name={props.name} type=\"checkbox\">\n                {({ meta }) => (meta.error && meta.touched ? meta.error : '')}\n            </Field>\n        )}\n        {props.options.map(option => (\n            <div key={option.label}>\n                <Field\n                    type=\"radio\"\n                    value={option.value}\n                    label={option.label}\n                    component={RadioButton}\n                    name={props.name}\n                />\n            </div>\n        ))}\n    </FormControl>\n))\n\nRadioButtons.propTypes = {\n    name: PropTypes.string.isRequired,\n    options: PropTypes.arrayOf(PropTypes.object).isRequired,\n    label: PropTypes.string,\n    showError: PropTypes.bool,\n}\n\nRadioButtons.defaultProps = {\n    label: '',\n    showError: true,\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { FormRow } from '../../../../components/form/FormRow'\nimport { RadioButtons } from '../../../../components/form/RadioButtons'\n\nexport const Attachment = () => (\n    <FormRow>\n        <p>{i18n.t('Do you want to use this file as an attachment?')}</p>\n        <RadioButtons\n            name=\"attachment\"\n            options={[\n                { value: 'yes', label: i18n.t('Yes') },\n                { value: 'no', label: i18n.t('No') },\n            ]}\n            showError={false}\n        />\n        <style jsx>{`\n            p {\n                margin-top: 0;\n            }\n        `}</style>\n    </FormRow>\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport red from '@material-ui/core/colors/red'\n\nconst errorTextColor = red[500]\n\nexport const ErrorText = props => {\n    if (!props.showErrorText) return null\n\n    return (\n        <FormHelperText>\n            <span>{props.error && props.touched ? props.error : ''}</span>\n\n            <style jsx>{`\n                span {\n                    color: ${errorTextColor};\n                }\n            `}</style>\n        </FormHelperText>\n    )\n}\n\nErrorText.propTypes = {\n    error: PropTypes.string.isRequired,\n    touched: PropTypes.bool.isRequired,\n    showErrorText: PropTypes.bool,\n}\n\nErrorText.defaultProps = {\n    showErrorText: true,\n}\n","import { Field } from 'react-final-form'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { ErrorText } from './buildingBlocks/ErrorText'\n\nconst fileBlobAsValue = input => event => {\n    event.persist()\n    input.onChange({\n        file: event.target.files[0],\n        value: event.target.value,\n    })\n}\n\nconst formatBlobToString = data => (data ? data.value : '')\n\nexport const File = props => (\n    <div>\n        <Field\n            name={props.name}\n            type=\"file\"\n            placeholder={props.placeholder}\n            format={formatBlobToString}\n            {...props.fieldProps}\n        >\n            {({ input, meta, placeholder }) => (\n                <FormControl>\n                    <ErrorText\n                        error={meta.error || ''}\n                        touched={meta.touched}\n                    />\n                    <FormHelperText>{placeholder}</FormHelperText>\n                    <FormHelperText>\n                        <label htmlFor={input.name}>\n                            <Button variant=\"contained\" component=\"span\">\n                                {i18n.t('Select file')}\n                            </Button>\n                        </label>\n                    </FormHelperText>\n                    <input\n                        name={input.name}\n                        value={input.value}\n                        onChange={fileBlobAsValue(input)}\n                        id={input.name}\n                        type=\"file\"\n                    />\n                    <FormHelperText>\n                        {input.value.replace('C:\\\\fakepath\\\\', '') ||\n                            i18n.t('No file chosen')}\n                    </FormHelperText>\n                </FormControl>\n            )}\n        </Field>\n        <style jsx>{`\n            input {\n                display: none;\n            }\n        `}</style>\n    </div>\n)\n\nFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    fieldProps: PropTypes.object,\n}\n\nFile.defaultProps = {\n    fieldProps: {},\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { File as FileInput } from '../../../../components/form/File'\nimport { FormRow } from '../../../../components/form/FormRow'\nimport { isRequired } from '../../../../utils/form/validators'\n\nexport const File = props => (\n    <FormRow>\n        <FileInput\n            name=\"file\"\n            placeholder={i18n.t('File')}\n            fieldProps={props.isRequired ? { validate: isRequired } : {}}\n        />\n    </FormRow>\n)\n\nFile.propTypes = {\n    isRequired: PropTypes.bool.isRequired,\n}\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport { resolve } from 'styled-jsx/macro'\n\nexport const section = resolve`\n    margin: 0 0 10px;\n`\n\nexport const sectionTitle = resolve`\n    color: black;\n    font-weight: bold;\n    font-size: 1.3em;\n    line-height: 2;\n    margin: 0 0 10px;\n`\n\nexport const container = resolve`\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 20px;\n`\n\nexport const inputWrapper = resolve`\n    margin: 0;\n    width: 100%;\n`\n","import MUIInput from '@material-ui/core/Input'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { ErrorText } from './buildingBlocks/ErrorText'\nimport { formInput, formInputMeta } from '../../utils/react/propTypes'\nimport { inputWrapper } from './styles'\n\nexport const Input = props => (\n    <React.Fragment>\n        <FormControl className={inputWrapper.className}>\n            <InputLabel htmlFor={props.input.name}>\n                {props.placeholder}\n            </InputLabel>\n            <MUIInput {...props.input} label={props.placeholder} />\n            <ErrorText\n                error={props.meta.error || ''}\n                touched={props.meta.touched}\n            />\n        </FormControl>\n\n        {inputWrapper.styles}\n    </React.Fragment>\n)\n\nInput.propTypes = {\n    input: formInput.isRequired,\n    meta: formInputMeta.isRequired,\n    placeholder: PropTypes.string.isRequired,\n}\n","import { Field } from 'react-final-form'\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { FormRow } from '../../../../components/form/FormRow'\nimport { Input } from '../../../../components/form/Input'\nimport { isRequired } from '../../../../utils/form/validators'\n\nexport const Name = () => (\n    <FormRow>\n        <Field\n            name=\"name\"\n            placeholder={i18n.t('Name*')}\n            component={Input}\n            validate={isRequired}\n        />\n    </FormRow>\n)\n","import React from 'react'\nimport { children } from '../../utils/react/propTypes'\n\nexport const FormSectionTitle = ({ children }) => (\n    <h2>\n        {children}\n        <style jsx>{`\n            h2 {\n                color: black;\n                font-weight: bold;\n                font-size: 1.3em;\n                line-height: 2;\n                margin: 0 0 10px;\n            }\n        `}</style>\n    </h2>\n)\n\nFormSectionTitle.propTypes = {\n    children: children.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormSectionTitle } from '../../../../components/form/FormSectionTitle'\n\nexport const Title = props => <FormSectionTitle>{props.label}</FormSectionTitle>\n\nTitle.propTypes = {\n    label: PropTypes.string.isRequired,\n}\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { Title } from './Title'\n\nexport const TitleDetails = () => <Title label={i18n.t('Details')} />\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { Title } from './Title'\n\nexport const TitleResource = () => <Title label={i18n.t('Resource')} />\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MUISelect from '@material-ui/core/Select'\nimport {\n    formInput,\n    formInputMeta,\n    formOptions,\n} from '../../utils/react/propTypes'\nimport { inputWrapper } from './styles'\nimport { ErrorText } from './buildingBlocks/ErrorText'\n\nexport const SelectField = props => (\n    <MUISelect native {...props.input} disabled={props.disabled}>\n        {props.showEmptyOption && <option value=\"\" />}\n        {props.options.map(option => (\n            <option key={option.value} value={option.value}>\n                {option.label}\n            </option>\n        ))}\n    </MUISelect>\n)\n\nSelectField.propTypes = {\n    input: formInput.isRequired,\n    showEmptyOption: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool.isRequired,\n    options: formOptions.isRequired,\n}\n\nconst { className, styles } = inputWrapper\nexport const Select = props => (\n    <FormControl className={className}>\n        <InputLabel htmlFor={props.input.name}>{props.placeholder}</InputLabel>\n        <SelectField\n            input={props.input}\n            showEmptyOption={props.showEmptyOption}\n            options={props.options}\n            disabled={props.disabled}\n        />\n        <ErrorText\n            showErrorText={props.showErrorText}\n            error={props.meta.error || ''}\n            touched={props.meta.touched}\n        />\n        {styles}\n    </FormControl>\n)\n\nSelect.propTypes = {\n    input: formInput.isRequired,\n    meta: formInputMeta.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    options: formOptions.isRequired,\n\n    showEmptyOption: PropTypes.bool,\n    showErrorText: PropTypes.bool,\n    disabled: PropTypes.bool,\n}\n\nSelect.defaultProps = {\n    showEmptyOption: false,\n    showErrorText: false,\n    disabled: false,\n}\n","import { Field } from 'react-final-form'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { FormRow } from '../../../../components/form/FormRow'\nimport { Select } from '../../../../components/form/Select'\nimport { resourceTypeOptions } from '../../../../utils/resource/constants'\n\nexport const Type = props => (\n    <FormRow>\n        <Field\n            name=\"type\"\n            placeholder={i18n.t('Resource Type')}\n            options={resourceTypeOptions}\n            showErrorText={false}\n            component={Select}\n            disabled={props.disabled}\n        />\n    </FormRow>\n)\n\nType.propTypes = {\n    disabled: PropTypes.bool,\n}\n\nType.defaultProps = {\n    disabled: false,\n}\n","import { Field } from 'react-final-form'\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { FormRow } from '../../../../components/form/FormRow'\nimport { Input } from '../../../../components/form/Input'\nimport { isRequired } from '../../../../utils/form/validators'\n\nexport const Url = () => (\n    <FormRow>\n        <Field\n            name=\"url\"\n            placeholder={i18n.t('Url*')}\n            component={Input}\n            validate={isRequired}\n        />\n    </FormRow>\n)\n","import { Form } from 'react-final-form'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport PropTypes from 'prop-types'\nimport React, { Fragment } from 'react'\n\nimport { FormDialog } from '../../../components/form/FormDialog'\nimport { FormSection } from '../../../components/form/FormSection'\nimport { resourceTypes } from '../../../utils/resource/constants'\nimport { Actions } from './ResourceForm/Actions'\nimport { Attachment } from './ResourceForm/Attachment'\nimport { File } from './ResourceForm/File'\nimport { Name } from './ResourceForm/Name'\nimport { TitleDetails } from './ResourceForm/TitleDetails'\nimport { TitleResource } from './ResourceForm/TitleResource'\nimport { Type } from './ResourceForm/Type'\nimport { Url } from './ResourceForm/Url'\n\nexport const ResourceForm = props => (\n    <FormDialog title={props.title} open={props.open} onClose={props.onCancel}>\n        <Form onSubmit={props.onSubmit} initialValues={props.initialValues}>\n            {({ handleSubmit, values, valid }) => (\n                <form onSubmit={handleSubmit}>\n                    <DialogContent>\n                        <FormSection>\n                            <TitleDetails />\n                            <Name />\n                            <Type />\n                        </FormSection>\n\n                        <FormSection\n                            show={values.type === resourceTypes.EXTERNAL_URL}\n                            render={() => (\n                                <Fragment>\n                                    <TitleResource />\n                                    <Url />\n                                </Fragment>\n                            )}\n                        />\n\n                        <FormSection\n                            show={values.type === resourceTypes.UPLOAD_FILE}\n                            render={() => (\n                                <Fragment>\n                                    <TitleResource />\n                                    <Attachment />\n                                    <File isRequired={props.isFileRequired} />\n                                </Fragment>\n                            )}\n                        />\n                    </DialogContent>\n                    <Actions\n                        onSubmitLabel={props.onSubmitLabel}\n                        onSubmit={handleSubmit}\n                        onCancel={props.onCancel}\n                        submitDisabled={!valid}\n                    />\n                </form>\n            )}\n        </Form>\n    </FormDialog>\n)\n\nResourceForm.propTypes = {\n    isFileRequired: PropTypes.bool.isRequired,\n    open: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    onSubmitLabel: PropTypes.string.isRequired,\n    initialValues: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n}\n","import { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { ResourceForm } from './add-edit-resource/ResourceForm'\nimport { addNewResource, closeContextMenu } from '../../redux/actions/resource'\nimport { extractFileAndFormattedResource } from './helper'\nimport { getInitialStateAddForm } from '../../redux/selectors/resource/getInitialStateAddForm'\n\nconst AddResource = props => (\n    <ResourceForm\n        open={props.open}\n        title={i18n.t('Add resource')}\n        isFileRequired={true}\n        onSubmitLabel={i18n.t('Add resource')}\n        initialValues={props.initialValues}\n        onSubmit={props.onSubmit}\n        onCancel={props.onCancel}\n    />\n)\n\nAddResource.propTypes = {\n    open: PropTypes.bool.isRequired,\n    initialValues: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n}\n\nexport const ConnectedAddResource = connect(\n    state => ({\n        open: state.resource.open,\n        initialValues: getInitialStateAddForm(),\n    }),\n    dispatch => ({\n        onCancel: () => dispatch(closeContextMenu()),\n        onSubmit: values => {\n            const { file, resource } = extractFileAndFormattedResource(values)\n            dispatch(addNewResource(resource, file))\n        },\n    })\n)(AddResource)\n","import { resourceTypeOptions } from '../../../utils/resource/constants'\n\nexport const getInitialStateAddForm = () => ({\n    name: '',\n    type: resourceTypeOptions[1].value,\n    attachment: 'no',\n})\n","import { resourceTypeOptions } from '../../../utils/resource/constants'\n\nexport const getInitialStateEditForm = ({ resource }) => ({\n    name: resource.selectedResource.displayName,\n    type: resourceTypeOptions[resource.selectedResource.external ? 0 : 1].value,\n    attachment: resource.selectedResource.attachment ? 'yes' : 'no',\n    url: resource.selectedResource.url,\n})\n","import { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { ResourceForm } from './add-edit-resource/ResourceForm'\nimport { closeContextMenu, updateResource } from '../../redux/actions/resource'\nimport { extractFileAndFormattedResource } from './helper'\nimport { getInitialStateEditForm } from '../../redux/selectors/resource/getInitialStateEditForm'\n\nconst EditResource = props => (\n    <ResourceForm\n        open={props.open}\n        title={i18n.t('Edit resource')}\n        isFileRequired={false}\n        onSubmitLabel={i18n.t('Save resource')}\n        initialValues={props.initialValues}\n        onSubmit={props.onSubmit}\n        onCancel={props.onCancel}\n    />\n)\n\nEditResource.propTypes = {\n    open: PropTypes.bool.isRequired,\n    initialValues: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport const ConnectedEditResource = connect(\n    state => ({\n        open: state.resource.open,\n        initialValues: getInitialStateEditForm(state),\n    }),\n    dispatch => ({\n        onCancel: () => dispatch(closeContextMenu()),\n        onSubmit: values => {\n            const { file, resource } = extractFileAndFormattedResource(values)\n            dispatch(updateResource(resource, file))\n        },\n    })\n)(EditResource)\n","import SharingDialog from '@dhis2/d2-ui-sharing-dialog'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { getD2 } from '../../utils/api'\nimport { resourceActions } from '../../utils/resource/constants'\nimport { ConnectedAddResource } from './AddResource'\nimport { ConnectedEditResource } from './EditResource'\n\nconst ResourceActions = props => {\n    const { selectedAction } = props\n    if (!props.selectedAction) return null\n\n    if (props.selectedAction === resourceActions.NEW) {\n        return <ConnectedAddResource />\n    }\n\n    if (selectedAction === resourceActions.EDIT) {\n        return <ConnectedEditResource />\n    }\n\n    if (selectedAction === resourceActions.SHARING_SETTINGS) {\n        return (\n            <SharingDialog\n                open={props.open}\n                id={props.selectedResource.id}\n                type=\"document\"\n                onRequestClose={props.handleClose}\n                d2={getD2()}\n            />\n        )\n    }\n\n    return null\n}\n\nResourceActions.propTypes = {\n    open: PropTypes.bool.isRequired,\n    selectedAction: PropTypes.string.isRequired,\n    selectedResource: PropTypes.object.isRequired,\n    handleClose: PropTypes.func.isRequired,\n}\n\nexport default ResourceActions\n","export default function getPagerCurrentlyShown(state) {\n    const { pageSize, total, page } = state.pagination\n    const projectedEnd = page * pageSize\n    const start = projectedEnd - pageSize + 1\n    const end = projectedEnd > total ? total : projectedEnd\n\n    return `${start} - ${end}`\n}\n","import i18n from '@dhis2/d2-i18n'\nimport { Button, Pagination, SvgIcon } from '@dhis2/d2-ui-core'\nimport '@dhis2/d2-ui-core/css/Pagination.css'\nimport '@dhis2/d2-ui-core/css/Table.css'\nimport Table from '@dhis2/d2-ui-table'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport TextField from '@material-ui/core/TextField'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport css from 'styled-jsx/macro'\nimport getPagerCurrentlyShown from '../redux/selectors/pagination/getPagerCurrentlyShown'\n\nconst searchText = i18n.t('Search')\n\nconst SearchablePagedList = props => {\n    const pagination = (\n        <Pagination\n            total={props.pagerTotal}\n            hasNextPage={props.pagerHasNextPage}\n            hasPreviousPage={props.pagerHasPreviousPage}\n            currentlyShown={props.pagerCurrentlyShown}\n            onNextPageClick={props.goToNextPage}\n            onPreviousPageClick={props.goToPrevPage}\n        />\n    )\n\n    return (\n        <div>\n            {pagination}\n            <TextField\n                className=\"search-input\"\n                value={props.searchInputValue}\n                type=\"search\"\n                label={searchText}\n                onChange={props.searchInputChangeHandler}\n            />\n            <Table\n                rows={props.isLoading ? [] : props.rows}\n                columns={props.columns}\n                contextMenuActions={props.contextMenuActions}\n                primaryAction={props.primaryAction}\n                contextMenuIcons={props.contextMenuIcons}\n                isContextActionAllowed={props.isContextActionAllowed}\n            />\n            {props.isLoading && (\n                <div className=\"data-table-fake-row\">\n                    <CircularProgress size={32} className=\"loader\" />\n                </div>\n            )}\n            {props.rows.length === 0 && !props.isLoading && (\n                <div className=\"data-table-fake-row\">\n                    {i18n.t('No results have been found')}\n                </div>\n            )}\n            {pagination}\n            <Button\n                id={'add-resource-btn-id'}\n                fab\n                onClick={props.addButtonClickHandler}\n            >\n                <SvgIcon icon=\"Add\" />\n            </Button>\n            <style jsx>{styles}</style>\n        </div>\n    )\n}\n\nconst styles = css.resolve`\n    div > :global(.search-input) input {\n        -webkit-appearance: textfield;\n    }\n    div > :global(.search-input) {\n        width: 400px;\n    }\n    div > :global(.data-table-pager) {\n        float: right;\n        padding-top: 8px;\n    }\n    div > :global(.d2-ui-button) {\n        position: fixed;\n        bottom: 1.5rem;\n        right: 1.5rem;\n    }\n    .data-table-fake-row {\n        position: relative;\n        height: 50px;\n        line-height: 50px;\n        background-color: #ffffff;\n        text-align: center;\n        font-style: italic;\n        color: #757575;\n        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12),\n            0 1px 2px 0 rgba(0, 0, 0, 0.24);\n    }\n    .data-table-fake-row :global(.loader) {\n        margin-top: 8px;\n    }\n`\n\nSearchablePagedList.propTypes = {\n    rows: PropTypes.array.isRequired,\n    columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    contextMenuActions: PropTypes.object.isRequired,\n    primaryAction: PropTypes.func.isRequired,\n    contextMenuIcons: PropTypes.object.isRequired,\n    isContextActionAllowed: PropTypes.func.isRequired,\n    searchInputValue: PropTypes.string.isRequired,\n    searchInputChangeHandler: PropTypes.func.isRequired,\n    addButtonClickHandler: PropTypes.func.isRequired,\n    pagerTotal: PropTypes.number.isRequired,\n    pagerHasNextPage: PropTypes.func.isRequired,\n    pagerHasPreviousPage: PropTypes.func.isRequired,\n    pagerCurrentlyShown: PropTypes.string.isRequired,\n    goToNextPage: PropTypes.func.isRequired,\n    goToPrevPage: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    pagerTotal: state.pagination.total,\n    pagerHasNextPage: () => state.pagination.page < state.pagination.pageCount,\n    pagerHasPreviousPage: () => state.pagination.page > 1,\n    pagerCurrentlyShown: getPagerCurrentlyShown(state),\n})\n\nexport default connect(mapStateToProps)(SearchablePagedList)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { RESOURCE_SECTION_KEY, sections } from '../config/sections.config'\nimport { SectionHeadline } from '../components/SectionHeadline'\nimport { Snackbar } from '../components/feedback/Snackbar'\nimport { connectResource } from './resource/connectResource'\nimport { contextMenuIcons, resourceActions } from '../utils/resource/constants'\nimport { showContextAction } from './resource/helper'\nimport ResourceActions from './resource/ResourceActions'\nimport SearchablePagedList from '../components/SearchablePagedList'\n\nconst createContextMenuOptions = props => ({\n    [resourceActions.VIEW]: props.viewResource,\n    [resourceActions.EDIT]: props.editResource,\n    [resourceActions.SHARING_SETTINGS]: props.showSharingSettings,\n    [resourceActions.DELETE]: props.requestDeleteResource,\n})\n\nclass Resource extends React.Component {\n    constructor(props) {\n        super(props)\n        this.contextMenuOptions = createContextMenuOptions(props)\n    }\n\n    componentDidMount() {\n        if (this.props.resources.length === 0) {\n            this.props.loadResources()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <SectionHeadline\n                    label={sections[RESOURCE_SECTION_KEY].info.label}\n                    sectionKey={RESOURCE_SECTION_KEY}\n                />\n                <div id=\"resource-content\">\n                    <SearchablePagedList\n                        columns={['displayName']}\n                        rows={this.props.resources}\n                        isLoading={this.props.loadingResources}\n                        contextMenuActions={this.contextMenuOptions}\n                        primaryAction={\n                            this.contextMenuOptions[resourceActions.VIEW]\n                        }\n                        contextMenuIcons={contextMenuIcons}\n                        isContextActionAllowed={showContextAction(\n                            this.props.deleteResource\n                        )}\n                        searchInputValue={this.props.search}\n                        searchInputChangeHandler={this.props.setSearch}\n                        addButtonClickHandler={this.props.addResource}\n                        goToNextPage={this.props.goToNextPage}\n                        goToPrevPage={this.props.goToPrevPage}\n                    />\n                    <ResourceActions\n                        open={this.props.open}\n                        selectedAction={this.props.selectedAction}\n                        selectedResource={this.props.selectedResource}\n                        handleClose={this.props.closeContextMenu}\n                    />\n                    <Snackbar\n                        action={i18n.t('CONFIRM')}\n                        onActionClick={this.props.deleteResource}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nResource.propTypes = {\n    open: PropTypes.bool.isRequired,\n    loadingResources: PropTypes.bool.isRequired,\n    search: PropTypes.string.isRequired,\n    selectedAction: PropTypes.string.isRequired,\n    resources: PropTypes.array.isRequired,\n    pager: PropTypes.object.isRequired,\n    selectedResource: PropTypes.object.isRequired,\n    goToNextPage: PropTypes.func.isRequired,\n    goToPrevPage: PropTypes.func.isRequired,\n    loadResources: PropTypes.func.isRequired,\n    requestDeleteResource: PropTypes.func.isRequired,\n    deleteResource: PropTypes.func.isRequired,\n    setSearch: PropTypes.func.isRequired,\n    addResource: PropTypes.func.isRequired,\n    viewResource: PropTypes.func.isRequired,\n    editResource: PropTypes.func.isRequired,\n    showSharingSettings: PropTypes.func.isRequired,\n    closeContextMenu: PropTypes.func.isRequired,\n}\n\nconst ConnectedResource = connectResource(Resource)\n\nexport { ConnectedResource as Resource }\n","import i18n from '@dhis2/d2-i18n'\n\nexport const REPORTS_ENDPOINT = 'reports'\nexport const REPORT_TABLES_ENDPOINT = 'reportTables'\nexport const REPORT_TEMPLATES_ENDPOINT = 'reportTemplate'\nexport const ADD_NEW_REPORT_ACTION = 'ADD_NEW_REPORT_ACTION'\n\nexport const CONTEXT_MENU_ACTION = {\n    CREATE: 'createReport',\n    EDIT: 'editReport',\n    DELETE: 'delete',\n    SHARING_SETTINGS: 'sharingSettings',\n}\n\nexport const CONTEXT_MENU_ICONS = {\n    [CONTEXT_MENU_ACTION.CREATE]: 'arrow_right',\n    [CONTEXT_MENU_ACTION.EDIT]: 'edit',\n    [CONTEXT_MENU_ACTION.SHARING_SETTINGS]: 'people',\n    [CONTEXT_MENU_ACTION.DELETE]: 'delete',\n}\n\nexport const NONE = {\n    id: 'none',\n    name: i18n.t('[ None ]'),\n}\n\nexport const TYPES = {\n    JASPER_REPORT_TABLE: 'JASPER_REPORT_TABLE',\n    JASPER_JDBC: 'JASPER_JDBC',\n    HTML: 'HTML',\n}\n\nexport const REPORT_MODE = {\n    REPORT: 'report',\n    REPORT_TABLE: 'table',\n}\n\nexport const GET_REPORT_AS_ENDPOINT = {\n    PDF: 'data.pdf',\n    XLS: 'data.xls',\n    HTML: 'data.html',\n}\n\nexport const reportTypes = {\n    JASPER_REPORT_TABLE: 'JASPER_REPORT_TABLE',\n    JASPER_JDBC: 'JASPER_JDBC',\n    HTML: 'HTML',\n}\n\nexport const reportTypeOptions = [\n    {\n        value: reportTypes.JASPER_REPORT_TABLE,\n        label: i18n.t('Jasper report with report table data source'),\n    },\n    {\n        value: reportTypes.JASPER_JDBC,\n        label: i18n.t('Jasper report with JDBC data source'),\n    },\n    {\n        value: reportTypes.HTML,\n        label: i18n.t('HTML report'),\n    },\n]\n\nexport const REPORT_TYPES = [\n    {\n        id: TYPES.JASPER_REPORT_TABLE,\n        name: i18n.t('Jasper report with report table data source'),\n    },\n    {\n        id: TYPES.JASPER_JDBC,\n        name: i18n.t('Jasper report with JDBC data source'),\n    },\n    {\n        id: TYPES.HTML,\n        name: i18n.t('HTML report'),\n    },\n]\n\nexport const cacheStrategies = [\n    {\n        value: 'NO_CACHE',\n        label: i18n.t('No cache'),\n    },\n    {\n        value: 'RESPECT_SYSTEM_SETTING',\n        label: i18n.t('Respect system setting'),\n    },\n    {\n        value: 'CACHE_1_HOUR',\n        label: i18n.t('Cache for one hour'),\n    },\n    {\n        value: 'CACHE_6AM_TOMORROW',\n        label: i18n.t('Cache until 6 AM tomorrow'),\n    },\n    {\n        value: 'CACHE_TWO_WEEKS',\n        label: i18n.t('Cache for two weeks'),\n    },\n]\n\nexport const CACHE_STRATEGIES = [\n    {\n        id: 'NO_CACHE',\n        name: i18n.t('No cache'),\n    },\n    {\n        id: 'RESPECT_SYSTEM_SETTING',\n        name: i18n.t('Respect system setting'),\n    },\n    {\n        id: 'CACHE_1_HOUR',\n        name: i18n.t('Cache for one hour'),\n    },\n    {\n        id: 'CACHE_6AM_TOMORROW',\n        name: i18n.t('Cache until 6 AM tomorrow'),\n    },\n    {\n        id: 'CACHE_TWO_WEEKS',\n        name: i18n.t('Cache for two weeks'),\n    },\n]\n\nexport const relativePeriods = [\n    // Days\n    {\n        label: i18n.t('Days'),\n        periods: [\n            {\n                id: 'thisDay',\n                name: i18n.t('Reporting day'),\n            },\n            {\n                id: 'yesterday',\n                name: i18n.t('Yesterday'),\n            },\n            {\n                id: 'last3Days',\n                name: i18n.t('Last 3 days'),\n            },\n            {\n                id: 'last7Days',\n                name: i18n.t('Last 7 days'),\n            },\n            {\n                id: 'last14Days',\n                name: i18n.t('Last 14 days'),\n            },\n        ],\n    },\n    // Weeks\n    {\n        label: i18n.t('Weeks'),\n        periods: [\n            {\n                id: 'thisWeek',\n                name: i18n.t('Reporting week'),\n            },\n            {\n                id: 'lastWeek',\n                name: i18n.t('Last Week'),\n            },\n            {\n                id: 'last4Weeks',\n                name: i18n.t('Last 2 weeks'),\n            },\n            {\n                id: 'last12Weeks',\n                name: i18n.t('Last 12 weeks'),\n            },\n            {\n                id: 'last52Weeks',\n                name: i18n.t('Last 52 weeks'),\n            },\n            {\n                id: 'weeksThisYear',\n                name: i18n.t('Weeks this year'),\n            },\n        ],\n    },\n    // Months\n    {\n        label: i18n.t('Months'),\n        periods: [\n            {\n                id: 'thisMonth',\n                name: i18n.t('Reporting month'),\n            },\n            {\n                id: 'lastMonth',\n                name: i18n.t('Last month'),\n            },\n            {\n                id: 'last3Months',\n                name: i18n.t('Last 3 months'),\n            },\n            {\n                id: 'last6Months',\n                name: i18n.t('Last 6 months'),\n            },\n            {\n                id: 'last12Months',\n                name: i18n.t('Last 12 months'),\n            },\n            {\n                id: 'monthsThisYear',\n                name: i18n.t('Months this year'),\n            },\n        ],\n    },\n    // Bi-months\n    {\n        label: i18n.t('Bi-months'),\n        periods: [\n            {\n                id: 'thisBimonth',\n                name: i18n.t('Reporting bi-month'),\n            },\n            {\n                id: 'lastBimonth',\n                name: i18n.t('Last bi-month'),\n            },\n            {\n                id: 'last6BiMonths',\n                name: i18n.t('Last 6 bi-month'),\n            },\n            {\n                id: 'biMonthsThisYear',\n                name: i18n.t('Bi-months this year'),\n            },\n        ],\n    },\n    // Quarters\n    {\n        label: i18n.t('Quarters'),\n        periods: [\n            {\n                id: 'thisQuarter',\n                name: i18n.t('Reporting quarter'),\n            },\n            {\n                id: 'lastQuarter',\n                name: i18n.t('Last quarter'),\n            },\n            {\n                id: 'last4Quarters',\n                name: i18n.t('Last 4 quarters'),\n            },\n            {\n                id: 'quartersThisYear',\n                name: i18n.t('Quarters of reporting year'),\n            },\n        ],\n    },\n    // Six-Months\n    {\n        label: i18n.t('Six-Months'),\n        periods: [\n            {\n                id: 'thisSixMonth',\n                name: i18n.t('Reporting six-month'),\n            },\n            {\n                id: 'lastSixMonth',\n                name: i18n.t('Last six-month'),\n            },\n            {\n                id: 'last2SixMonths',\n                name: i18n.t('Last 2 six-months'),\n            },\n        ],\n    },\n    // Financial years\n    {\n        label: i18n.t('Financial Years'),\n        periods: [\n            {\n                id: 'thisFinancialYear',\n                name: i18n.t('Reporting financial year'),\n            },\n            {\n                id: 'lastFinancialYear',\n                name: i18n.t('Last financial year'),\n            },\n            {\n                id: 'last5FinancialYears',\n                name: i18n.t('Last 5 financial years'),\n            },\n        ],\n    },\n    // years\n    {\n        label: i18n.t('Years'),\n        periods: [\n            {\n                id: 'thisYear',\n                name: i18n.t('Reporting year'),\n            },\n            {\n                id: 'lastYear',\n                name: i18n.t('Last year'),\n            },\n            {\n                id: 'last5Years',\n                name: i18n.t('Last 5 years'),\n            },\n        ],\n    },\n]\n","export const isFalsy = value => !value\n","import i18n from '@dhis2/d2-i18n'\nimport humanReadableErrorMessage from '../../utils/humanReadableErrorMessage'\nimport { getStandardReportTables } from '../../utils/api'\nimport { showErrorSnackBar } from './feedback'\n\nexport const actionTypes = {\n    STANDARD_REPORT_TABLES_LOADING_START:\n        'STANDARD_REPORT_TABLES_LOADING_START',\n    STANDARD_REPORT_TABLES_LOADING_SUCCESS:\n        'STANDARD_REPORT_TABLES_LOADING_SUCCESS',\n    STANDARD_REPORT_TABLES_LOADING_ERROR:\n        'STANDARD_REPORT_TABLES_LOADING_ERROR',\n}\n\n/**\n * @returns {Object}\n */\nexport const loadingStandardReportTablesStart = () => ({\n    type: actionTypes.STANDARD_REPORT_TABLES_LOADING_START,\n})\n\n/**\n * @param {Array} tables\n * @returns {Object}\n */\nexport const loadingStandardReportTablesSuccess = tables => ({\n    type: actionTypes.STANDARD_REPORT_TABLES_LOADING_SUCCESS,\n    payload: tables,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingStandardReportTablesError = () => ({\n    type: actionTypes.STANDARD_REPORT_TABLES_LOADING_ERROR,\n})\n\n/**\n * @param {Error} error\n * @returns {Function}\n */\nexport const loadingStandardReportTablesErrorWithFeedback = error => dispatch => {\n    const defaultMessage = i18n.t(\n        'An error occurred while loading the report table options'\n    )\n    const displayMessage = humanReadableErrorMessage(error, defaultMessage)\n\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadingStandardReportTablesError())\n}\n\n/**\n * @returns {Function}\n */\nexport const loadStandardReportTables = () => dispatch => {\n    dispatch(loadingStandardReportTablesStart())\n\n    return getStandardReportTables()\n        .then(({ reportTables }) => {\n            const formattedReportTables = reportTables.map(({ id, name }) => ({\n                value: id,\n                label: name,\n            }))\n            dispatch(loadingStandardReportTablesSuccess(formattedReportTables))\n        })\n        .catch(error => {\n            dispatch(loadingStandardReportTablesErrorWithFeedback(error))\n        })\n}\n","import debounce from 'lodash.debounce'\nimport i18n from '@dhis2/d2-i18n'\nimport omit from 'lodash.omit'\nimport size from 'lodash.size'\n\nimport { DEBOUNCE_DELAY } from '../../config/search.config'\nimport {\n    getApi,\n    deleteStandardReport as deleteStandardReportRequest,\n    getFilteredStandardReports,\n    getStandardReportDetails,\n    getStandardReportHtmlReport,\n    getStandardReportTable,\n    postStandardReport,\n    updateStandardReport,\n} from '../../utils/api'\nimport {\n    clearFeedback,\n    showSuccessSnackBar,\n    showErrorSnackBar,\n    showConfirmationSnackBar,\n} from './feedback'\nimport { extractRequiredReportParams } from '../../utils/standardReport/extractRequiredReportParams'\nimport { fileToText } from '../../utils/fileToText'\nimport {\n    goToNextPage as goToNextPageOrig,\n    goToPrevPage as goToPrevPageOrig,\n    setPagination,\n} from './pagination'\nimport { loadStandardReportTables } from './standardReportTables'\nimport {\n    loadingReportDataStart,\n    loadingReportDataSuccess,\n    loadingReportDataError,\n} from './reportData'\nimport { reportTypes } from '../../pages/standard-report/standard.report.conf'\nimport { validateRequiredParams } from '../../utils/standardReport/validateRequiredParams'\nimport humanReadableErrorMessage from '../../utils/humanReadableErrorMessage'\n\nexport const actionTypes = {\n    SET_SELECTED_REPORT: 'SET_SELECTED_REPORT',\n    LOAD_STANDARD_REPORTS: 'LOAD_STANDARD_REPORTS',\n    LOADING_STANDARD_REPORTS_START: 'LOADING_STANDARD_REPORTS_START',\n    LOADING_STANDARD_REPORTS_SUCCESS: 'LOADING_STANDARD_REPORTS_SUCCESS',\n    LOADING_STANDARD_REPORTS_ERROR: 'LOADING_STANDARD_REPORTS_ERROR',\n    LOADING_STANDARD_REPORTS_DETAILS_START:\n        'LOADING_STANDARD_REPORTS_DETAILS_START',\n    LOADING_STANDARD_REPORTS_DETAILS_SUCCESS:\n        'LOADING_STANDARD_REPORTS_DETAILS_SUCCESS',\n    LOADING_STANDARD_REPORTS_DETAILS_ERROR:\n        'LOADING_STANDARD_REPORTS_DETAILS_ERROR',\n    SET_SEARCH: 'SET_SEARCH',\n    ADD_REPORT_FORM_SHOW: 'ADD_REPORT_FORM_SHOW',\n    ADD_REPORT_FORM_HIDE: 'ADD_REPORT_FORM_HIDE',\n    EDIT_REPORT_FORM_SHOW: 'EDIT_REPORT_FORM_SHOW',\n    EDIT_REPORT_FORM_HIDE: 'EDIT_REPORT_FORM_HIDE',\n    CREATE_REPORT_SHOW: 'CREATE_REPORT_SHOW',\n    CREATE_REPORT_HIDE: 'CREATE_REPORT_HIDE',\n    SHARING_SETTINGS_SHOW: 'SHARING_SETTINGS_SHOW',\n    SHARING_SETTINGS_HIDE: 'SHARING_SETTINGS_HIDE',\n    REQUEST_DELETE_STANDARD_REPORT: 'REQUEST_DELETE_STANDARD_REPORT',\n    DELETE_STANDARD_REPORT_START: 'DELETE_STANDARD_REPORT_START',\n    DELETE_STANDARD_REPORT_SUCCESS: 'DELETE_STANDARD_REPORT_SUCCESS',\n    DELETE_STANDARD_REPORT_ERROR: 'DELETE_STANDARD_REPORT_ERROR',\n    HTML_REPORT_SHOW: 'HTML_REPORT_SHOW',\n    HTML_REPORT_HIDE: 'HTML_REPORT_HIDE',\n    CLOSE_CONTEXT_MENU: 'CLOSE_CONTEXT_MENU',\n    STANDARD_REPORT_SEND_START: 'STANDARD_REPORT_SEND_START',\n    STANDARD_REPORT_SEND_SUCCESS: 'STANDARD_REPORT_SEND_SUCCESS',\n    STANDARD_REPORT_SEND_ERROR: 'STANDARD_REPORT_SEND_ERROR',\n    DEFINE_REQUIRED_PARAMS: 'DEFINE_REQUIRED_PARAMS',\n    REQUIRED_PARAMS_ERROR: 'REQUIRED_PARAMS_ERROR',\n    GENERATE_PDF_REPORT: 'GENERATE_PDF_REPORT',\n    CANCEL_GENERATING_PDF_REPORT: 'CANCEL_GENERATING_PDF_REPORT',\n}\n\n/**\n * @returns {Object}\n */\nexport const setSelectedReport = report => ({\n    type: actionTypes.SET_SELECTED_REPORT,\n    payload: report,\n})\n\n/**\n * @returns {Object}\n */\nexport const startLoadingStandardReports = () => ({\n    type: actionTypes.LOADING_STANDARD_REPORTS_START,\n})\n\n/**\n * @param {Array} reports\n * @returns {Object}\n */\nexport const loadingStandardReportsSuccess = reports => ({\n    type: actionTypes.LOADING_STANDARD_REPORTS_SUCCESS,\n    payload: reports,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingStandardReportsError = () => ({\n    type: actionTypes.LOADING_STANDARD_REPORTS_ERROR,\n})\n\n/**\n * @param {Error} error\n * @returns {Function}\n */\nexport const loadingStandardReportsErrorWithFeedback = error => dispatch => {\n    const defaultMessage = i18n.t(\n        'An error occurred while loading the standard reports'\n    )\n    const displayMessage = humanReadableErrorMessage(error, defaultMessage)\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadingStandardReportsError())\n}\n\n/**\n * @param {string} searchTerm\n * @return {Function} Redux thunk\n */\nconst debouncedLoadStandardReports = debounce(\n    dispatch => dispatch(loadStandardReports()),\n    DEBOUNCE_DELAY\n)\nexport const setSearch = searchTerm => dispatch => {\n    dispatch({ type: actionTypes.SET_SEARCH, payload: searchTerm })\n    debouncedLoadStandardReports(dispatch)\n}\n\n/**\n * @param {number} nextPage\n * @return {Function}\n */\nexport const goToNextPage = () => dispatch => {\n    dispatch(goToNextPageOrig())\n    dispatch(loadStandardReports())\n}\n\n/**\n * @param {number} nextPage\n * @return {Function}\n */\nexport const goToPrevPage = () => dispatch => {\n    dispatch(goToPrevPageOrig())\n    dispatch(loadStandardReports())\n}\n\n/**\n * @param {Object} report A d2 report model\n * @return {Object}\n */\nexport const addReportFormShow = report => ({\n    type: actionTypes.ADD_REPORT_FORM_SHOW,\n    payload: report,\n})\n\n/**\n * @param {Object} report A d2 report model\n * @return {Object}\n */\nexport const addReportFormHide = report => ({\n    type: actionTypes.ADD_REPORT_FORM_HIDE,\n    payload: report,\n})\n\n/**\n * @param {Object} report A d2 report model\n * @return {Object}\n */\nexport const editReportFormShow = report => dispatch => {\n    dispatch({\n        type: actionTypes.EDIT_REPORT_FORM_SHOW,\n        payload: report,\n    })\n    dispatch(loadStandardReportDetails(report.id))\n}\n\n/**\n * @param {Object} report A d2 report model\n * @return {Object}\n */\nexport const editReportFormHide = report => ({\n    type: actionTypes.EDIT_REPORT_FORM_HIDE,\n    payload: report,\n})\n\n/**\n * @param {Object} report A d2 report model\n * @return {Object}\n */\nexport const createReportShow = report => ({\n    type: actionTypes.CREATE_REPORT_SHOW,\n    payload: report,\n})\n\n/**\n * @param {Object} report A d2 report model\n * @return {Object}\n */\nexport const createReportHide = report => ({\n    type: actionTypes.CREATE_REPORT_HIDE,\n    payload: report,\n})\n\n/**\n * @param {Object} report A d2 report model\n * @return {Object}\n */\nexport const sharingSettingsShow = report => ({\n    type: actionTypes.SHARING_SETTINGS_SHOW,\n    payload: report,\n})\n\n/**\n * @param {Object} report A d2 report model\n * @return {Object}\n */\nexport const sharingSettingsHide = report => ({\n    type: actionTypes.SHARIING_SETTINGS_HIDE,\n    payload: report,\n})\n\n/**\n * Used to get a confirmation from the user\n * @return {Object}\n */\nexport const requestDeleteStandardReport = report => dispatch => {\n    dispatch({\n        type: actionTypes.REQUEST_DELETE_STANDARD_REPORT,\n        payload: report,\n    })\n    dispatch(\n        showConfirmationSnackBar('Do you really want to delete this report?')\n    )\n}\n\n/**\n * @return {Object}\n */\nexport const deleteStandardReportStart = () => ({\n    type: actionTypes.DELETE_STANDARD_REPORT_START,\n})\n\n/**\n * @return {Object}\n */\nexport const deleteStandardReportSuccess = () => ({\n    type: actionTypes.DELETE_STANDARD_REPORT_SUCCESS,\n})\n\n/**\n * @returns {Object}\n */\nexport const deleteStandardReportError = () => ({\n    type: actionTypes.DELETE_STANDARD_REPORT_ERROR,\n})\n\n/**\n * @return {Object}\n */\nexport const deleteStandardReportSuccessWithFeedback = () => dispatch => {\n    dispatch(deleteStandardReportSuccess())\n    dispatch(loadStandardReports())\n    dispatch(clearFeedback())\n}\n\n/**\n * @param {Error} error\n * @return {Object}\n */\nexport const deleteStandardReportErrorWithFeedback = error => dispatch => {\n    const defaultMessage = i18n.t(\n        'An error occurred while trying to delete the standard report'\n    )\n    const displayMessage = humanReadableErrorMessage(error, defaultMessage)\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(deleteStandardReportError())\n}\n\n/**\n * @returns {Object}\n */\nexport const closeContextMenu = refreshList => dispatch => {\n    dispatch({ type: actionTypes.CLOSE_CONTEXT_MENU })\n\n    if (refreshList) {\n        dispatch(loadStandardReports())\n    }\n}\n\n/**\n * @param {string} reportData\n * @returns {Object}\n */\nexport const showReportData = reportData => dispatch => {\n    dispatch(loadingReportDataSuccess(reportData))\n    dispatch(closeContextMenu())\n}\n\n/**\n * @returns {Object}\n */\nexport const hideReportData = () => ({\n    type: actionTypes.HTML_REPORT_HIDE,\n})\n\n/**\n * @return {Function} Redux thunk\n */\nexport const loadStandardReports = (postLoadStandartReportTables = false) => (\n    dispatch,\n    getState\n) => {\n    const { standardReport, pagination } = getState()\n    const { page, pageSize } = pagination\n    const { search } = standardReport\n\n    dispatch(startLoadingStandardReports())\n    return getFilteredStandardReports(page, pageSize, search)\n        .then(response => {\n            dispatch(loadingStandardReportsSuccess(response.reports))\n            dispatch(setPagination(response.pager))\n\n            if (postLoadStandartReportTables) {\n                dispatch(loadStandardReportTables())\n            }\n        })\n        .catch(error =>\n            dispatch(loadingStandardReportsErrorWithFeedback(error))\n        )\n}\n\n/**\n * @param {Object} report\n * @return {Function} A redux thunk\n */\nexport const deleteStandardReport = () => (dispatch, getState) => {\n    const { selectedReport } = getState().standardReport\n\n    dispatch(deleteStandardReportStart())\n    return deleteStandardReportRequest(selectedReport.id)\n        .then(() => dispatch(deleteStandardReportSuccessWithFeedback()))\n        .catch(error => dispatch(deleteStandardReportErrorWithFeedback(error)))\n}\n\n/**\n * @returns {Object}\n */\nexport const loadingStandardReportsDetailsStart = () => ({\n    type: actionTypes.LOADING_STANDARD_REPORTS_DETAILS_START,\n})\n\n/**\n * @param {Array} reports\n * @returns {Object}\n */\nexport const loadingStandardReportsDetailsSuccess = reports => ({\n    type: actionTypes.LOADING_STANDARD_REPORTS_DETAILS_SUCCESS,\n    payload: reports,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingStandardReportsDetailsError = () => ({\n    type: actionTypes.LOADING_STANDARD_REPORTS_DETAILS_ERROR,\n})\n\n/**\n * @param {Error} error\n * @returns {Function}\n */\nexport const loadingStandardReportsDetailsErrorWithFeedback = error => dispatch => {\n    const defaultMessage = i18n.t(\n        'An error occurred while loading the standard report details'\n    )\n    const displayMessage = humanReadableErrorMessage(error, defaultMessage)\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadingStandardReportsDetailsError())\n}\n\n/**\n * @param {string} id\n * @returns {Function}\n */\nexport const loadStandardReportDetails = id => dispatch => {\n    dispatch(loadingStandardReportsDetailsStart())\n\n    getStandardReportDetails(id)\n        .then(report => dispatch(loadingStandardReportsDetailsSuccess(report)))\n        .catch(error => dispatch(loadingStandardReportsDetailsError(error)))\n}\n\n/**\n * @returns {Object}\n */\nexport const loadingSendStandardReportStart = () => ({\n    type: actionTypes.STANDARD_REPORT_SEND_START,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingSendStandardReportSuccess = () => ({\n    type: actionTypes.STANDARD_REPORT_SEND_SUCCESS,\n})\n\n/**\n * @returns {Object}\n */\nexport const loadingSendStandardReportError = () => ({\n    type: actionTypes.STANDARD_REPORT_SEND_ERROR,\n})\n\n/**\n * @param {Object} report\n * @param {bool} isEdit - When false, add new report\n * @returns {Promise}\n */\nexport const sendStandardReport = (report, isEdit) => dispatch => {\n    dispatch(loadingSendStandardReportStart())\n\n    const formattedReport = {\n        ...report,\n        relativePeriods: (report.relativePeriods || []).reduce(\n            (acc, cur) => ({ ...acc, [cur]: true }),\n            {}\n        ),\n        reportParams: (report.reportParams || []).reduce(\n            (acc, cur) => ({ ...acc, [cur]: true }),\n            {}\n        ),\n        reportTable: report.reportTable ? { id: report.reportTable } : '',\n    }\n    const cleanedReport =\n        report.type !== reportTypes.JASPER_REPORT_TABLE\n            ? omit(formattedReport, ['reportTable'])\n            : formattedReport\n    const doRequest = isEdit\n        ? report => updateStandardReport(report)\n        : report => postStandardReport(report)\n    const successMessage = isEdit\n        ? i18n.t('The report has been updated successfully')\n        : i18n.t('The report has been added successfully')\n    const errorMessage = isEdit\n        ? i18n.t('An error occurred while updating the report!')\n        : i18n.t('An error occurred while adding the report!')\n\n    const request = !cleanedReport.designContent\n        ? doRequest(cleanedReport)\n        : fileToText(cleanedReport.designContent.file)\n              .then(file => ({ ...cleanedReport, designContent: file }))\n              .then(doRequest)\n\n    return request\n        .then(() => {\n            dispatch(showSuccessSnackBar(successMessage))\n            dispatch(loadingSendStandardReportSuccess())\n            dispatch(loadStandardReports())\n        })\n        .catch(error => {\n            const displayMessage = humanReadableErrorMessage(\n                error,\n                errorMessage\n            )\n            dispatch(showErrorSnackBar(displayMessage))\n            dispatch(loadingSendStandardReportError())\n        })\n}\n\n/**\n * =============================================\n * Generate report\n * =============================================\n */\n\n/**\n * @param {Error} error\n * @returns {Function}\n */\nexport const generatingHtmlReportErrorWithFeedback = error => dispatch => {\n    const generatingHtmlReportErrorDefaultMessage = i18n.t(\n        'An error occurred while generating the html report'\n    )\n    const displayMessage = humanReadableErrorMessage(\n        error,\n        generatingHtmlReportErrorDefaultMessage\n    )\n    dispatch(showErrorSnackBar(displayMessage))\n    dispatch(loadingReportDataError())\n}\n\n/**\n * @param {string} id\n * @returns {Function}\n */\nexport const generateHtmlReport = () => (dispatch, getState) => {\n    dispatch(loadingReportDataStart())\n    const { standardReport, organisationUnits, reportPeriod } = getState()\n    const { reportParams } = standardReport\n    const { id } = standardReport.selectedReport\n\n    const reportRequestBody = {}\n    if (reportParams.organisationUnit) {\n        reportRequestBody.ou = organisationUnits.selected.id\n    }\n\n    if (reportParams.reportPeriod) {\n        reportRequestBody.pe = reportPeriod.selectedPeriod\n    }\n\n    return getStandardReportHtmlReport(id, reportRequestBody)\n        .then(report => dispatch(loadingReportDataSuccess(report)))\n        .catch(error => dispatch(generatingHtmlReportErrorWithFeedback(error)))\n}\n\nexport const defineRequiredReportParams = requiredParams => ({\n    type: actionTypes.DEFINE_REQUIRED_PARAMS,\n    payload: requiredParams,\n})\n\nexport const requiredReportParamsError = errors => ({\n    type: actionTypes.REQUIRED_PARAMS_ERROR,\n    payload: errors,\n})\n\nexport const cancelGeneratingPdfReport = () => ({\n    type: actionTypes.CANCEL_GENERATING_PDF_REPORT,\n})\n\nexport const submitRequiredReportParams = () => (dispatch, getState) => {\n    const state = getState()\n    const { standardReport } = state\n    const { selectedReport, reportParams } = standardReport\n    const errors = validateRequiredParams(state, reportParams)\n\n    if (size(errors)) {\n        dispatch(requiredReportParamsError(errors))\n    } else {\n        if (selectedReport.type === reportTypes.HTML) {\n            dispatch(generateHtmlReport())\n        } else {\n            dispatch(generatePdfReport())\n        }\n    }\n}\n\nexport const getStandardReportTableRequiredParams = report =>\n    report.reportTable\n        ? getStandardReportTable(report.reportTable.id)\n        : Promise.resolve({ reportParams: {} })\n\n/**\n * @param {string} reportId\n * @returns {Function}\n */\nexport const showReportParams = report => dispatch => {\n    dispatch(setSelectedReport(report))\n    return getStandardReportTableRequiredParams(report)\n        .then(({ reportParams }) => {\n            const requiredParams = extractRequiredReportParams(reportParams)\n\n            if (!size(requiredParams)) {\n                if (report.type === reportTypes.HTML) {\n                    dispatch(generateHtmlReport())\n                } else {\n                    dispatch(generatePdfReport())\n                }\n            } else {\n                dispatch(defineRequiredReportParams(requiredParams))\n            }\n        })\n        .catch(error => {\n            throw error\n        })\n}\n\nexport const generatePdfReport = () => (dispatch, getState) => {\n    let reportQueryString = `t=${new Date().getTime()}`\n    const api = getApi()\n    const { standardReport, organisationUnits, reportPeriod } = getState()\n    const { reportParams } = standardReport\n    const { id } = standardReport.selectedReport\n    const reportPath = `reports/${id}/data.pdf`\n\n    if (reportParams.organisationUnit) {\n        reportQueryString += `&ou=${organisationUnits.selected.id}`\n    }\n\n    if (reportParams.reportPeriod) {\n        reportQueryString += `&p=${reportPeriod.selectedPeriod}`\n    }\n\n    window.open(`${api.baseUrl}/${reportPath}?${reportQueryString}`)\n    dispatch({ type: actionTypes.GENERATE_PDF_REPORT })\n}\n","export const fileToText = blob =>\n    new Promise((resolve, reject) => {\n        const fileReader = new FileReader()\n        fileReader.readAsText(blob)\n        fileReader.onload = event => {\n            if (event.target.readyState !== 2) return\n            if (event.target.error) reject('File could not be read')\n            resolve(event.target.result)\n        }\n    })\n","import omitBy from 'lodash.omitby'\nimport { isFalsy } from '../boolean/isFalsy'\n\nexport const extractRequiredReportParams = reportParams =>\n    omitBy(\n        {\n            period: reportParams.paramReportingPeriod,\n            organisationUnit:\n                reportParams.paramOrganisationUnit ||\n                reportParams.paramParentOrganisationUnit ||\n                reportParams.paramGrandParentOrganisationUnit,\n        },\n        isFalsy\n    )\n","import { connect } from 'react-redux'\nimport { resolve } from 'styled-jsx/macro'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport red from '@material-ui/core/colors/red'\nimport theme from '@dhis2/d2-ui-core/theme/theme'\n\nimport {\n    cancelGeneratingPdfReport,\n    submitRequiredReportParams,\n} from '../../redux/actions/standardReport'\nimport OrganisationUnitTree from '../../components/AvailableOrganisationUnitsTree'\nimport PeriodPicker from '../../components/PeriodPickerWithPeriodType'\n\nconst labelCancel = i18n.t('Cancel')\nconst labelSubmit = i18n.t('Generate report')\nconst title = i18n.t('Report parameters')\nconst colorError = red[500]\n\nconst buttonStyles = resolve`\n    width: 100%;\n`\n\nconst primaryButtonStyle = resolve`\n    button {\n        color: white;\n        background-color: ${theme.palette.primary2Color}\n    }\n\n    button:hover {\n        background-color: ${theme.palette.primary1Color}\n    }\n`\n\nexport const ReportParams = props => (\n    <Dialog\n        open={props.showReportParams}\n        onClose={props.cancelGeneratingPdfReport}\n        fullWidth={true}\n        maxWidth=\"md\"\n    >\n        <DialogTitle>{title}</DialogTitle>\n\n        <DialogContent>\n            <div className=\"inputs\">\n                {props.reportParams.organisationUnit && (\n                    <OrganisationUnitTree />\n                )}\n\n                {props.reportParams.period && <PeriodPicker label=\"\" />}\n            </div>\n\n            {!!props.reportParamsErrors.length && (\n                <div className=\"errors\">\n                    <p>\n                        {i18n.t('There are some errors you have to fix first!')}\n                    </p>\n                    <ul>\n                        {props.reportParamsErrors.map(error => (\n                            <li className=\"error\" key={error}>\n                                {error}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n\n            <div className=\"primary-action\">\n                <Button\n                    onClick={props.submitRequiredReportParams}\n                    variant=\"contained\"\n                    className={\n                        buttonStyles.className +\n                        ' ' +\n                        primaryButtonStyle.className\n                    }\n                >\n                    {labelSubmit}\n                </Button>\n            </div>\n\n            <div>\n                <Button\n                    onClick={props.cancelGeneratingPdfReport}\n                    variant=\"contained\"\n                    className={buttonStyles.className}\n                >\n                    {labelCancel}\n                </Button>\n            </div>\n\n            <style jsx>{`\n                .inputs {\n                    margin-bottom: 30px;\n                }\n                .errors {\n                    margin-bottom: 10px;\n                }\n                .error {\n                    color: ${colorError};\n                }\n                .primary-action {\n                    margin-bottom: 10px;\n                }\n            `}</style>\n            {buttonStyles.styles}\n            {primaryButtonStyle.styles}\n        </DialogContent>\n    </Dialog>\n)\n\nReportParams.propTypes = {\n    showReportParams: PropTypes.bool.isRequired,\n    reportParams: PropTypes.object.isRequired,\n    reportParamsErrors: PropTypes.arrayOf(PropTypes.string).isRequired,\n    cancelGeneratingPdfReport: PropTypes.func.isRequired,\n    submitRequiredReportParams: PropTypes.func.isRequired,\n}\n\nexport const ConnectedReportParams = connect(\n    state => ({\n        reportParams: state.standardReport.reportParams,\n        reportParamsErrors: state.standardReport.reportParamsErrors,\n        showReportParams: state.standardReport.showReportParams,\n    }),\n    {\n        cancelGeneratingPdfReport,\n        submitRequiredReportParams,\n    }\n)(ReportParams)\n","import { getSelectedOrgUnit } from '../../redux/selectors/organisationUnit/getSelectedOrgUnit'\nimport { getSelectedReportPeriod } from '../../redux/selectors/reportPeriod/getSelectedReportPeriod'\n\nexport const validateRequiredParams = (state, requiredParams) => {\n    const errors = []\n\n    if (requiredParams.organisationUnit && !getSelectedOrgUnit(state)) {\n        errors.push('You need to select an organisation unit')\n    }\n\n    if (requiredParams.period && !getSelectedReportPeriod(state)) {\n        errors.push('You need to select a period')\n    }\n\n    return errors\n}\n","export const getSelectedOrgUnit = state => state.organisationUnits.selected\n","export const getSelectedReportPeriod = state =>\n    state.reportPeriod.selectedPeriod\n","import { CONTEXT_MENU_ACTION } from './standard.report.conf'\n\n/* Context Menu */\nconst displayNoResults = (reports, loading) =>\n    reports.length > 0 || loading ? { display: 'none' } : ''\n\nconst showContextAction = (report, action) => {\n    const access = report && report.access ? report.access : {}\n    const actions = {\n        [CONTEXT_MENU_ACTION.CREATE]: access.read,\n        [CONTEXT_MENU_ACTION.EDIT]: access.update,\n        [CONTEXT_MENU_ACTION.SHARING_SETTINGS]:\n            access.manage || access.externalize,\n        [CONTEXT_MENU_ACTION.DELETE]: access.delete,\n    }\n    return actions[action] || false\n}\n\nexport { displayNoResults, showContextAction }\n","import Checkbox from '@material-ui/core/Checkbox'\nimport { resolve } from 'styled-jsx/macro'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { formInput } from '../../utils/react/propTypes'\n\nconst checkboxStyle = resolve`\n    span {\n        width: 20px;\n        height: 20px;\n        padding: 0;\n    }\n`\n\nexport const CheckBox = props => (\n    <div className=\"form-checkbox\">\n        <div className=\"input-container\">\n            <Checkbox\n                id={props.input.name + props.input.value}\n                {...props.input}\n                type=\"checkbox\"\n                className={checkboxStyle.className}\n            />\n        </div>\n\n        <label\n            className=\"label-container\"\n            htmlFor={props.input.name + props.input.value}\n        >\n            {props.label}\n        </label>\n\n        <style jsx>{`\n            .form-checkbox {\n                align-items: flex-start;\n                display: flex;\n                min-height: 30px;\n                width: 100%;\n            }\n\n            .input-container {\n                width: 25px;\n                flex-shrink: 0;\n            }\n\n            input {\n                display: block;\n                margin: 0;\n            }\n\n            label {\n                display: block;\n                flex-grow: 1;\n                padding: 2px 0 5px;\n            }\n        `}</style>\n        {checkboxStyle.styles}\n    </div>\n)\n\nCheckBox.propTypes = {\n    label: PropTypes.string.isRequired,\n    input: formInput.isRequired,\n}\n","import { Field } from 'react-final-form'\nimport { withStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { CheckBox } from './CheckBox'\n\nconst styles = {\n    container: {\n        margin: '0 0 20px',\n    },\n    label: {\n        margin: '0 0 10px',\n        fontSize: '1rem',\n        color: 'black',\n    },\n}\n\nexport const CheckBoxes = withStyles(styles)(props => (\n    <FormControl className={props.classes.container}>\n        {props.label && (\n            <FormHelperText className={props.classes.label}>\n                {props.label}\n            </FormHelperText>\n        )}\n        {props.showError && (\n            <Field name={props.name} type=\"checkbox\">\n                {({ meta }) => (meta.error && meta.touched ? meta.error : '')}\n            </Field>\n        )}\n        {props.options.map(option => (\n            <div key={option.label}>\n                <Field\n                    type=\"checkbox\"\n                    value={option.value}\n                    label={option.label}\n                    component={CheckBox}\n                    name={props.name}\n                />\n            </div>\n        ))}\n    </FormControl>\n))\n\nCheckBoxes.propTypes = {\n    name: PropTypes.string.isRequired,\n    options: PropTypes.arrayOf(PropTypes.object).isRequired,\n    label: PropTypes.string,\n    showError: PropTypes.bool,\n}\n\nCheckBoxes.defaultProps = {\n    label: '',\n    showError: true,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Field } from 'react-final-form'\nimport { CheckBoxes } from './CheckBoxes'\nimport FormHelperText from '@material-ui/core/FormHelperText'\n\nexport const CheckBoxGroups = props => (\n    <div className=\"row\">\n        {props.displayError && (\n            <div className=\"col-xs-12\">\n                <Field type=\"checkbox\" name={props.name}>\n                    {({ meta }) => (\n                        <FormHelperText>\n                            {meta.error && meta.touched ? meta.error : ''}\n                        </FormHelperText>\n                    )}\n                </Field>\n            </div>\n        )}\n\n        {props.groups.map(group => (\n            <div\n                key={group.label}\n                className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\"\n            >\n                <CheckBoxes\n                    name={props.name}\n                    label={group.label}\n                    options={group.options}\n                    showError={false}\n                />\n            </div>\n        ))}\n    </div>\n)\n\nCheckBoxGroups.propTypes = {\n    name: PropTypes.string.isRequired,\n    groups: PropTypes.array.isRequired,\n    displayError: PropTypes.bool,\n}\n\nCheckBoxGroups.defaultProps = {\n    displayError: true,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Button from '@material-ui/core/Button'\nimport i18n from '@dhis2/d2-i18n'\nimport { getApi } from '../../../utils/api'\nimport {\n    reportTypes,\n    REPORTS_ENDPOINT,\n    REPORT_TEMPLATES_ENDPOINT,\n} from '../standard.report.conf'\n\nexport const DesignFileDownloadButton = ({\n    isEditing,\n    reportType,\n    reportId,\n}) => {\n    let url\n    let label\n    const api = getApi()\n    const type = reportType === reportTypes.HTML ? 'html' : 'xml'\n\n    if (isEditing) {\n        label = i18n.t('Get current design')\n        url = `${api.baseUrl}/${REPORTS_ENDPOINT}/${reportId}/design`\n    } else {\n        label =\n            reportType === reportTypes.HTML\n                ? i18n.t('Get HTML Report Template')\n                : i18n.t('Get Jasper Report Template')\n        url = `${api.baseUrl}/${REPORT_TEMPLATES_ENDPOINT}.${type}`\n    }\n\n    return (\n        <div>\n            <FormHelperText>{label}</FormHelperText>\n            <FormHelperText>\n                <Button variant=\"contained\" component=\"span\">\n                    <a\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        download\n                    >\n                        Download\n                    </a>\n                </Button>\n            </FormHelperText>\n            <FormHelperText />\n            <style jsx>{`\n                a {\n                    color: inherit;\n                    text-decoration: none;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nDesignFileDownloadButton.propTypes = {\n    isEditing: PropTypes.bool.isRequired,\n    reportType: PropTypes.string.isRequired,\n    reportId: PropTypes.string.isRequired,\n}\n","export const identity = input => input\n","import {\n    reportTypes,\n    cacheStrategies,\n} from '../../../pages/standard-report/standard.report.conf'\nimport { identity } from '../../../utils/boolean/identity'\n\nexport const getEditFormInitialValues = (state, isEdit) => {\n    const { standardReport } = state\n\n    // make sure to build initial form state value only when report details have been loaded\n    // cacheStrategy is such a detail\n    if (isEdit && standardReport.selectedReport.cacheStrategy) {\n        const { selectedReport } = standardReport\n        return {\n            id: selectedReport.id,\n            name: selectedReport.name,\n            type: selectedReport.type,\n            reportTable:\n                selectedReport.reportTable && selectedReport.reportTable.id\n                    ? selectedReport.reportTable.id\n                    : '',\n            relativePeriods: Object.keys(selectedReport.relativePeriods).reduce(\n                (acc, cur) =>\n                    selectedReport.relativePeriods[cur] ? [...acc, cur] : acc,\n                []\n            ),\n            reportParams: [\n                selectedReport.reportParams.paramReportingPeriod\n                    ? 'paramReportingPeriod'\n                    : '',\n                selectedReport.reportParams.paramOrganisationUnit\n                    ? 'paramOrganisationUnit'\n                    : '',\n            ].filter(identity),\n            cacheStrategy: selectedReport.cacheStrategy,\n        }\n    }\n\n    return {\n        type: reportTypes.JASPER_REPORT_TABLE,\n        cacheStrategy: cacheStrategies[1].value,\n        reportTable: state.standardReportTables.collection.length\n            ? state.standardReportTables.collection[0].value\n            : '',\n    }\n}\n","import i18n from '@dhis2/d2-i18n'\n\nexport const relativePeriods = [\n    {\n        label: i18n.t('Days'),\n        options: [\n            {\n                value: 'thisDay',\n                label: i18n.t('Reporting day'),\n            },\n            {\n                value: 'yesterday',\n                label: i18n.t('Yesterday'),\n            },\n            {\n                value: 'last3Days',\n                label: i18n.t('Last 3 days'),\n            },\n            {\n                value: 'last7Days',\n                label: i18n.t('Last 7 days'),\n            },\n            {\n                value: 'last14Days',\n                label: i18n.t('Last 14 days'),\n            },\n        ],\n    },\n    {\n        label: i18n.t('Weeks'),\n        options: [\n            {\n                value: 'thisWeek',\n                label: i18n.t('Reporting week'),\n            },\n            {\n                value: 'lastWeek',\n                label: i18n.t('Last Week'),\n            },\n            {\n                value: 'last4Weeks',\n                label: i18n.t('Last 2 weeks'),\n            },\n            {\n                value: 'last12Weeks',\n                label: i18n.t('Last 12 weeks'),\n            },\n            {\n                value: 'last52Weeks',\n                label: i18n.t('Last 52 weeks'),\n            },\n            {\n                value: 'weeksThisYear',\n                label: i18n.t('Weeks this year'),\n            },\n        ],\n    },\n    {\n        label: i18n.t('Months'),\n        options: [\n            {\n                value: 'thisMonth',\n                label: i18n.t('Reporting month'),\n            },\n            {\n                value: 'lastMonth',\n                label: i18n.t('Last month'),\n            },\n            {\n                value: 'last3Months',\n                label: i18n.t('Last 3 months'),\n            },\n            {\n                value: 'last6Months',\n                label: i18n.t('Last 6 months'),\n            },\n            {\n                value: 'last12Months',\n                label: i18n.t('Last 12 months'),\n            },\n            {\n                value: 'monthsThisYear',\n                label: i18n.t('Months this year'),\n            },\n        ],\n    },\n    {\n        label: i18n.t('Bi-months'),\n        options: [\n            {\n                value: 'thisBimonth',\n                label: i18n.t('Reporting bi-month'),\n            },\n            {\n                value: 'lastBimonth',\n                label: i18n.t('Last bi-month'),\n            },\n            {\n                value: 'last6BiMonths',\n                label: i18n.t('Last 6 bi-month'),\n            },\n            {\n                value: 'biMonthsThisYear',\n                label: i18n.t('Bi-months this year'),\n            },\n        ],\n    },\n    {\n        label: i18n.t('Quarters'),\n        options: [\n            {\n                value: 'thisQuarter',\n                label: i18n.t('Reporting quarter'),\n            },\n            {\n                value: 'lastQuarter',\n                label: i18n.t('Last quarter'),\n            },\n            {\n                value: 'last4Quarters',\n                label: i18n.t('Last 4 quarters'),\n            },\n            {\n                value: 'quartersThisYear',\n                label: i18n.t('Quarters of reporting year'),\n            },\n        ],\n    },\n    {\n        label: i18n.t('Six-Months'),\n        options: [\n            {\n                value: 'thisSixMonth',\n                label: i18n.t('Reporting six-month'),\n            },\n            {\n                value: 'lastSixMonth',\n                label: i18n.t('Last six-month'),\n            },\n            {\n                value: 'last2SixMonths',\n                label: i18n.t('Last 2 six-months'),\n            },\n        ],\n    },\n    {\n        label: i18n.t('Financial Years'),\n        options: [\n            {\n                value: 'thisFinancialYear',\n                label: i18n.t('Reporting financial year'),\n            },\n            {\n                value: 'lastFinancialYear',\n                label: i18n.t('Last financial year'),\n            },\n            {\n                value: 'last5FinancialYears',\n                label: i18n.t('Last 5 financial years'),\n            },\n        ],\n    },\n    {\n        label: i18n.t('Years'),\n        options: [\n            {\n                value: 'thisYear',\n                label: i18n.t('Reporting year'),\n            },\n            {\n                value: 'lastYear',\n                label: i18n.t('Last year'),\n            },\n            {\n                value: 'last5Years',\n                label: i18n.t('Last 5 years'),\n            },\n        ],\n    },\n]\n","export const reportParameterOptions = [\n    {\n        value: 'paramReportingPeriod',\n        label: 'Reporting Period',\n    },\n    {\n        value: 'paramOrganisationUnit',\n        label: 'Organisation Unit',\n    },\n]\n","import { reportTypes } from '../standard.report.conf'\n\nexport const validateNewReport = values => {\n    const errors = {}\n\n    validateName(errors, values)\n    validateReportTable(errors, values)\n    validateDesignContent(errors, values)\n    validateCacheStrategy(errors, values)\n\n    return errors\n}\n\nexport const validateReportUpdate = values => {\n    const errors = {}\n\n    validateName(errors, values)\n    validateReportTable(errors, values)\n    validateCacheStrategy(errors, values)\n\n    return errors\n}\n\nconst validateName = (errors, values) => {\n    if (!values.name) {\n        errors.name = 'Required'\n    }\n}\n\nconst validateReportTable = (errors, values) => {\n    if (\n        values.type === reportTypes.JASPER_REPORT_TABLE &&\n        !values.reportTable\n    ) {\n        errors.reportTable = 'Required'\n    }\n}\n\nconst validateDesignContent = (errors, values) => {\n    if (!values.designContent) {\n        errors.designContent = 'Required'\n    }\n}\n\nconst validateCacheStrategy = (errors, values) => {\n    if (!values.cacheStrategy) {\n        errors.cacheStrategy = 'Required'\n    }\n}\n","import { Form, Field } from 'react-final-form'\nimport { connect } from 'react-redux'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\n\nimport { Button } from '../../components/form/Button'\nimport {\n    CONTEXT_MENU_ACTION,\n    cacheStrategies,\n    reportTypeOptions,\n    reportTypes,\n} from './standard.report.conf'\nimport { CheckBoxGroups } from '../../components/form/CheckBoxGroups'\nimport { CheckBoxes } from '../../components/form/CheckBoxes'\nimport { DesignFileDownloadButton } from './add-edit-report/DesignFileDownloadButton'\nimport { File } from '../../components/form/File'\nimport { FormDialog } from '../../components/form/FormDialog'\nimport { FormRow } from '../../components/form/FormRow'\nimport { FormSection } from '../../components/form/FormSection'\nimport { FormSectionTitle } from '../../components/form/FormSectionTitle'\nimport { Input } from '../../components/form/Input'\nimport { Select } from '../../components/form/Select'\nimport { formOptions } from '../../utils/react/propTypes'\nimport { getEditFormInitialValues } from '../../redux/selectors/standardReport/getEditFormInitialValues'\nimport { relativePeriods } from '../../utils/periods/relativePeriods'\nimport { reportParameterOptions } from '../../config/standardReport'\nimport {\n    validateNewReport,\n    validateReportUpdate,\n} from './add-edit-report/validate'\n\nexport const Component = props => (\n    <FormDialog\n        open={props.open}\n        title={props.edit ? 'Edit report' : 'Add report'}\n        onClose={props.onRequestClose}\n    >\n        <Form\n            onSubmit={props.onSubmit}\n            validate={props.edit ? validateReportUpdate : validateNewReport}\n            initialValues={props.selectedReport}\n        >\n            {({ handleSubmit, values }) => (\n                <form onSubmit={handleSubmit}>\n                    <DialogContent>\n                        <FormSection>\n                            <FormSectionTitle>\n                                {i18n.t('Details')}\n                            </FormSectionTitle>\n\n                            <FormRow>\n                                <Field\n                                    name=\"name\"\n                                    placeholder={i18n.t('Name*')}\n                                    component={Input}\n                                />\n                            </FormRow>\n\n                            <FormRow>\n                                <Field\n                                    name=\"type\"\n                                    placeholder={i18n.t('Report Type*')}\n                                    options={reportTypeOptions}\n                                    showErrorText={false}\n                                    component={Select}\n                                />\n                            </FormRow>\n\n                            {values.type ===\n                                reportTypes.JASPER_REPORT_TABLE && (\n                                <FormRow>\n                                    <Field\n                                        name=\"reportTable\"\n                                        placeholder={i18n.t('Report Table*')}\n                                        options={props.reportTables}\n                                        showErrorText={false}\n                                        component={Select}\n                                    />\n                                </FormRow>\n                            )}\n\n                            <div className=\"row\">\n                                <div className=\"col-xs-6\">\n                                    <File\n                                        name=\"designContent\"\n                                        placeholder={\n                                            props.edit\n                                                ? i18n.t('Design File')\n                                                : i18n.t('Design File*')\n                                        }\n                                    />\n                                </div>\n\n                                <div className=\"col-xs-6\">\n                                    <FormHelperText />\n                                    <DesignFileDownloadButton\n                                        isEditing={props.edit}\n                                        reportType={values.type}\n                                        reportId={\n                                            props.edit\n                                                ? props.selectedReport.id\n                                                : ''\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </FormSection>\n\n                        <FormSection\n                            show={\n                                values.type !== reportTypes.JASPER_REPORT_TABLE\n                            }\n                            render={() => (\n                                <React.Fragment>\n                                    <FormSectionTitle>\n                                        {i18n.t('Relative periods')}\n                                    </FormSectionTitle>\n\n                                    <CheckBoxGroups\n                                        name=\"relativePeriods\"\n                                        groups={relativePeriods}\n                                        displayError={false}\n                                    />\n                                </React.Fragment>\n                            )}\n                        />\n\n                        <FormSection\n                            show={\n                                values.type !== reportTypes.JASPER_REPORT_TABLE\n                            }\n                            render={() => (\n                                <React.Fragment>\n                                    <FormSectionTitle>\n                                        {i18n.t('Report parameters')}\n                                    </FormSectionTitle>\n\n                                    <CheckBoxes\n                                        name=\"reportParams\"\n                                        options={reportParameterOptions}\n                                    />\n                                </React.Fragment>\n                            )}\n                        />\n\n                        <FormSection>\n                            <FormSectionTitle>\n                                {i18n.t('Settings')}\n                            </FormSectionTitle>\n\n                            <FormRow>\n                                <Field\n                                    name=\"cacheStrategy\"\n                                    placeholder={i18n.t('Cache Strategy*')}\n                                    options={cacheStrategies}\n                                    component={Select}\n                                />\n                            </FormRow>\n                        </FormSection>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            label={i18n.t('Submit')}\n                            isPrimary={true}\n                            onClick={handleSubmit}\n                        />\n\n                        <Button\n                            label={i18n.t('Cancel')}\n                            onClick={props.onRequestClose}\n                        />\n                    </DialogActions>\n                </form>\n            )}\n        </Form>\n    </FormDialog>\n)\n\nComponent.propTypes = {\n    open: PropTypes.bool.isRequired,\n    edit: PropTypes.bool.isRequired,\n    selectedReport: PropTypes.object.isRequired,\n    reportTables: formOptions.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onRequestClose: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    reportTables: state.standardReportTables.collection,\n    selectedReport: getEditFormInitialValues(\n        state,\n        state.standardReport.selectedAction === CONTEXT_MENU_ACTION.EDIT\n    ),\n})\n\nconst ConnectedComponent = connect(mapStateToProps)(Component)\n\nexport { ConnectedComponent as ConnectedAddEditStdReport }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog'\nimport {\n    ADD_NEW_REPORT_ACTION,\n    CONTEXT_MENU_ACTION,\n} from './standard.report.conf'\nimport { ConnectedAddEditStdReport } from './AddEditStdReport'\nimport { getD2 } from '../../utils/api'\n\nconst StandardReportActions = ({\n    open,\n    selectedAction,\n    selectedReport,\n    handleClose,\n    handleError,\n    updateStandardReport,\n    addStandardReport,\n}) => {\n    if (selectedAction === CONTEXT_MENU_ACTION.SHARING_SETTINGS) {\n        return (\n            <SharingDialog\n                id={selectedReport.id}\n                d2={getD2()}\n                open={open}\n                type=\"report\"\n                onRequestClose={handleClose}\n            />\n        )\n    }\n\n    if (selectedAction === CONTEXT_MENU_ACTION.EDIT) {\n        return (\n            <ConnectedAddEditStdReport\n                open={open}\n                edit={true}\n                onSubmit={updateStandardReport}\n                onRequestClose={handleClose}\n                onError={handleError}\n            />\n        )\n    }\n\n    if (selectedAction === ADD_NEW_REPORT_ACTION) {\n        return (\n            <ConnectedAddEditStdReport\n                open={open}\n                edit={false}\n                onSubmit={addStandardReport}\n                onRequestClose={handleClose}\n                onError={handleError}\n            />\n        )\n    }\n\n    return null\n}\n\nStandardReportActions.propTypes = {\n    open: PropTypes.bool.isRequired,\n    selectedAction: PropTypes.string.isRequired,\n    selectedReport: PropTypes.object.isRequired,\n    handleClose: PropTypes.func.isRequired,\n    handleError: PropTypes.func.isRequired,\n    handleDisplayReportData: PropTypes.func.isRequired,\n    updateStandardReport: PropTypes.func.isRequired,\n    addStandardReport: PropTypes.func.isRequired,\n}\n\nexport default StandardReportActions\n","import { getContextPath } from '../api'\n\nexport const loadScript = src => {\n    const serverUrl = getContextPath()\n    const script = document.createElement('script')\n    script.type = 'text/javascript'\n    script.src = serverUrl + src\n    const scriptPromise = new Promise(resolve => {\n        script.onload = resolve\n    })\n    document.head.appendChild(script)\n    return scriptPromise\n}\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { loadScript } from '../../utils/dom/loadScript'\n\n/**\n * Do this stuff inside an iframe...\n * https://stackoverflow.com/questions/10418644/creating-an-iframe-with-given-html-dynamically\n */\n\nclass HtmlReport extends Component {\n    state = {\n        ready: false,\n        report: '',\n    }\n\n    componentDidMount() {\n        loadScript('/dhis-web-commons/javascripts/jQuery/jquery.min.js')\n            .then(() =>\n                loadScript('/dhis-web-commons/javascripts/dhis2/dhis2.util.js')\n            )\n            .then(() => this.setState({ ready: true, report: this.props.html }))\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.html && this.state.ready) {\n            this.setState({ report: newProps.html })\n        }\n    }\n\n    render() {\n        return (\n            <div\n                id=\"html-report-id\"\n                dangerouslySetInnerHTML={{\n                    __html: this.state.report,\n                }}\n            />\n        )\n    }\n}\n\nHtmlReport.propTypes = {\n    html: PropTypes.string.isRequired,\n}\n\nexport default HtmlReport\n","import { resolve } from 'styled-jsx/macro'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport i18n from '@dhis2/d2-i18n'\n\nimport HtmlReport from './HtmlReport'\n\nconst title = i18n.t('HTML Report')\nconst labelClose = i18n.t('Close')\n\nconst containerStyle = resolve`\n    div {\n        z-index: 1500;\n    }\n`\nconst titleStyle = resolve`\n    div {\n        border-bottom: 1px solid grey;\n    }\n`\nconst contentStyle = resolve`\n    div {\n        padding-top: 20px;\n    }\n`\n\nconst StyledReportData = ({ onReportCloseClick, reportData }) => (\n    <Dialog\n        open={true}\n        onClose={onReportCloseClick}\n        fullScreen={true}\n        maxWidth={false}\n        className={containerStyle.className}\n    >\n        <DialogTitle className={titleStyle.className}>{title}</DialogTitle>\n        <DialogContent className={contentStyle.className}>\n            <Button\n                onClick={onReportCloseClick}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                {labelClose}\n            </Button>\n            <HtmlReport html={reportData} />\n        </DialogContent>\n\n        {containerStyle.styles}\n        {titleStyle.styles}\n        {contentStyle.styles}\n    </Dialog>\n)\n\nStyledReportData.propTypes = {\n    reportData: PropTypes.string.isRequired,\n    onReportCloseClick: PropTypes.func.isRequired,\n}\n\nexport default StyledReportData\n","import { connect } from 'react-redux'\nimport isEmpty from 'lodash.isempty'\n\nimport {\n    addReportFormShow,\n    closeContextMenu,\n    deleteStandardReport,\n    editReportFormShow,\n    goToNextPage,\n    goToPrevPage,\n    hideReportData,\n    loadStandardReports,\n    requestDeleteStandardReport,\n    sendStandardReport,\n    setSearch,\n    sharingSettingsShow,\n    showReportData,\n    showReportParams,\n} from '../../redux/actions/standardReport'\nimport { unsetReportData } from '../../redux/actions/reportData'\n\nconst mapStateToProps = state => ({\n    ...state.standardReport,\n    reportData: isEmpty(state.reportData.content)\n        ? ''\n        : state.reportData.content,\n    pager: state.pagination,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    loadStandardReports: fetchReportTables =>\n        dispatch(loadStandardReports(fetchReportTables)),\n    addReportFormShow: report => dispatch(addReportFormShow(report)),\n    createReport: report => dispatch(showReportParams(report)),\n    editReport: report => dispatch(editReportFormShow(report)),\n    deleteStandardReport: report => dispatch(deleteStandardReport(report)),\n    sharingSettings: report => dispatch(sharingSettingsShow(report)),\n    goToNextPage: () => dispatch(goToNextPage()),\n    goToPrevPage: () => dispatch(goToPrevPage()),\n    requestDeleteStandardReport: report =>\n        dispatch(requestDeleteStandardReport(report)),\n    setSearch: event => dispatch(setSearch(event.target.value)),\n    showReportData: reportData => dispatch(showReportData(reportData)),\n    hideReportData: reportData => dispatch(hideReportData(reportData)),\n    closeContextMenu: refreshList => dispatch(closeContextMenu(refreshList)),\n    updateStandardReport: report => dispatch(sendStandardReport(report, true)),\n    addStandardReport: report => dispatch(sendStandardReport(report, false)),\n    closeReport: () => dispatch(unsetReportData()),\n})\n\nconst connectStandardReport = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)\n\nexport default connectStandardReport\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\n\nimport {\n    CONTEXT_MENU_ACTION,\n    CONTEXT_MENU_ICONS,\n} from './standard-report/standard.report.conf'\nimport { ConnectedReportParams } from './standard-report/ReportParams'\nimport {\n    STANDARD_REPORT_SECTION_KEY,\n    sections,\n} from '../config/sections.config'\nimport { SectionHeadline } from '../components/SectionHeadline'\nimport { Snackbar } from '../components/feedback/Snackbar'\nimport { showContextAction } from './standard-report/helper'\nimport SearchablePagedList from '../components/SearchablePagedList'\nimport StandardReportActions from './standard-report/StandardReportActions'\nimport StyledHtmlReport from './standard-report/StyledHtmlReport'\nimport connectStandardReport from './standard-report/connectStandardReport'\n\nconst createContextMenuOptions = props => ({\n    [CONTEXT_MENU_ACTION.CREATE]: props.createReport,\n    [CONTEXT_MENU_ACTION.EDIT]: props.editReport,\n    [CONTEXT_MENU_ACTION.SHARING_SETTINGS]: props.sharingSettings,\n    [CONTEXT_MENU_ACTION.DELETE]: props.requestDeleteStandardReport,\n})\n\nclass StandardReport extends React.Component {\n    constructor(props) {\n        super(props)\n        this.contextMenuOptions = createContextMenuOptions(props)\n    }\n\n    componentDidMount() {\n        if (this.props.reports.length === 0) {\n            this.props.loadStandardReports(true)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <SectionHeadline\n                    label={sections[STANDARD_REPORT_SECTION_KEY].info.label}\n                    showBackButton={!!this.props.reportData}\n                    onBackClick={this.props.hideReportData}\n                    sectionKey={STANDARD_REPORT_SECTION_KEY}\n                />\n                <div id=\"std-report-content\">\n                    <SearchablePagedList\n                        columns={['displayName']}\n                        rows={this.props.reports}\n                        isLoading={this.props.loading}\n                        contextMenuActions={this.contextMenuOptions}\n                        primaryAction={\n                            this.contextMenuOptions[\n                                [CONTEXT_MENU_ACTION.CREATE]\n                            ]\n                        }\n                        contextMenuIcons={CONTEXT_MENU_ICONS}\n                        isContextActionAllowed={showContextAction}\n                        searchInputValue={this.props.search}\n                        searchInputChangeHandler={this.props.setSearch}\n                        addButtonClickHandler={this.props.addReportFormShow}\n                        goToNextPage={this.props.goToNextPage}\n                        goToPrevPage={this.props.goToPrevPage}\n                    />\n                    <StandardReportActions\n                        open={this.props.open}\n                        selectedAction={this.props.selectedAction}\n                        selectedReport={this.props.selectedReport}\n                        handleClose={this.props.closeContextMenu}\n                        handleError={console.error}\n                        handleDisplayReportData={this.props.showReportData}\n                        updateStandardReport={this.props.updateStandardReport}\n                        addStandardReport={this.props.addStandardReport}\n                    />\n                </div>\n                {this.props.reportData && (\n                    <StyledHtmlReport\n                        reportData={this.props.reportData}\n                        onReportCloseClick={this.props.closeReport}\n                    />\n                )}\n                <ConnectedReportParams />\n                <Snackbar\n                    action={i18n.t('CONFIRM')}\n                    onActionClick={this.props.deleteStandardReport}\n                />\n            </div>\n        )\n    }\n}\n\nStandardReport.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    pager: PropTypes.object.isRequired,\n    reports: PropTypes.array.isRequired,\n    selectedReport: PropTypes.object.isRequired,\n    selectedAction: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    open: PropTypes.bool.isRequired,\n    reportData: PropTypes.string.isRequired,\n    loadStandardReports: PropTypes.func.isRequired,\n    createReport: PropTypes.func.isRequired,\n    editReport: PropTypes.func.isRequired,\n    deleteStandardReport: PropTypes.func.isRequired,\n    sharingSettings: PropTypes.func.isRequired,\n    requestDeleteStandardReport: PropTypes.func.isRequired,\n    goToNextPage: PropTypes.func.isRequired,\n    goToPrevPage: PropTypes.func.isRequired,\n    setSearch: PropTypes.func.isRequired,\n    showReportData: PropTypes.func.isRequired,\n    hideReportData: PropTypes.func.isRequired,\n    closeContextMenu: PropTypes.func.isRequired,\n    addReportFormShow: PropTypes.func.isRequired,\n    updateStandardReport: PropTypes.func.isRequired,\n    addStandardReport: PropTypes.func.isRequired,\n    closeReport: PropTypes.func.isRequired,\n}\n\nconst ConnectedStandardReport = connectStandardReport(StandardReport)\n\nexport { ConnectedStandardReport as StandardReport }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/* Material UI */\nimport Paper from '@material-ui/core/Paper'\nimport { card } from '../utils/styles/shared.js'\n\nconst MenuElement = ({ entry }) => (\n    <Paper className={card.className}>\n        <div className=\"section-title-bar\">\n            <div className=\"section-name\">{entry.label}</div>\n            <span className=\"material-icons icon section-icon\">\n                {entry.icon}\n            </span>\n        </div>\n        <div className=\"section-description\">{entry.description}</div>\n        <div className=\"section-action-text\">{entry.actionText}</div>\n        {card.styles}\n        <style jsx>{`\n            .section-title-bar {\n                margin-top: 28px;\n                min-height: 42px;\n                flex-wrap: nowrap;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n            }\n            .section-name {\n                font-size: 24px;\n                text-align: left;\n                color: #000000;\n            }\n            .section-icon {\n                float: right;\n                color: #757575;\n                font-size: 50px;\n            }\n            .section-description {\n                font-size: 14px;\n                text-align: left;\n                color: #757575;\n                margin-top: 38px;\n                margin-bottom: 38px;\n                display: block;\n            }\n            .section-action-text {\n                position: absolute;\n                bottom: 20px;\n                display: block;\n                font-size: 16px;\n                font-weight: 600;\n                text-align: left;\n                color: #2196f3;\n            }\n        `}</style>\n    </Paper>\n)\n\nMenuElement.propTypes = {\n    entry: PropTypes.shape({\n        label: PropTypes.string,\n        description: PropTypes.string,\n        icon: PropTypes.string,\n        actionText: PropTypes.string,\n    }).isRequired,\n}\n\nexport default MenuElement\n","import { Link } from 'react-router-dom'\nimport React from 'react'\n\nimport { sectionOrder, sections } from '../../config/sections.config'\nimport MenuElement from '../../components/MenuElement'\n\nconst Home = () => {\n    const menuCards = sectionOrder.map(sectionKey => {\n        const element = sections[sectionKey]\n\n        return (\n            <div key={element.key} className=\"col-sm-12 col-md-6 col-lg-4\">\n                <Link to={element.path} className=\"menu-card-link\">\n                    <MenuElement entry={element.info} />\n                </Link>\n                <style jsx>{`\n                    div {\n                        margin-bottom: 8px;\n                    }\n                    div :global(.menu-card-link) {\n                        text-decoration: none !important;\n                    }\n                `}</style>\n            </div>\n        )\n    })\n\n    return (\n        <div id={'menu-grid-id'} className=\"row\">\n            {menuCards}\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst NoMatch = props => (\n    <div>\n        <h3>\n            No match for <code>{props.location.pathname}</code>\n        </h3>\n    </div>\n)\n\nNoMatch.propTypes = {\n    location: PropTypes.object.isRequired,\n}\n\nexport default NoMatch\n","import { Route, Switch } from 'react-router-dom'\nimport React from 'react'\n// import PropTypes from 'prop-types'\n\nimport {\n    DATA_SET_REPORT_SECTION_KEY,\n    ORG_UNIT_DIST_REPORT_SECTION_KEY,\n    REPORTING_RATE_SUMMARY_SECTION_KEY,\n    RESOURCE_SECTION_KEY,\n    STANDARD_REPORT_SECTION_KEY,\n} from '../config/sections.config'\nimport { DataSetReport } from '../pages/DataSetReport'\nimport { OrganisationUnitDistributionReport } from '../pages/OrganisationUnitDistributionReport'\nimport { ReportingRateSummary } from '../pages/ReportingRateSummary'\nimport { Resource } from '../pages/Resource'\nimport { StandardReport } from '../pages/StandardReport'\nimport { sections } from '../conf../../config/sections.config'\nimport Home from '../pages/home/Home'\nimport NoMatch from './NoMatch'\n\nconst AppRouter = () => (\n    <main>\n        <Switch>\n            <Route key=\"home\" exact path=\"/\" component={Home} />\n            <Route\n                exact\n                key={STANDARD_REPORT_SECTION_KEY}\n                path={sections[STANDARD_REPORT_SECTION_KEY].path}\n                component={StandardReport}\n            />\n            <Route\n                exact\n                key={DATA_SET_REPORT_SECTION_KEY}\n                path={sections[DATA_SET_REPORT_SECTION_KEY].path}\n                component={DataSetReport}\n            />\n            <Route\n                exact\n                key={REPORTING_RATE_SUMMARY_SECTION_KEY}\n                path={sections[REPORTING_RATE_SUMMARY_SECTION_KEY].path}\n                component={ReportingRateSummary}\n            />\n            <Route\n                exact\n                key={RESOURCE_SECTION_KEY}\n                path={sections[RESOURCE_SECTION_KEY].path}\n                component={Resource}\n            />\n            <Route\n                exact\n                key={ORG_UNIT_DIST_REPORT_SECTION_KEY}\n                path={sections[ORG_UNIT_DIST_REPORT_SECTION_KEY].path}\n                component={OrganisationUnitDistributionReport}\n            />\n            <Route key=\"no-match-route\" component={NoMatch} />\n        </Switch>\n    </main>\n)\n\nexport default AppRouter\n","import i18n from '@dhis2/d2-i18n'\nimport { Link } from 'react-router-dom'\nimport {\n    MuiThemeProvider as Mui3ThemeProvider,\n    createMuiTheme as createMui3Theme,\n} from '@material-ui/core/styles'\nimport { Sidebar, mui3theme } from '@dhis2/d2-ui-core'\nimport { connect } from 'react-redux'\nimport D2UIApp from '@dhis2/d2-ui-app'\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar'\nimport PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nimport { Loader } from './components/feedback/Loader'\nimport { loadDataSetOptions } from './redux/actions/dataSet'\nimport { loadOrganisationUnits } from './redux/actions/organisationUnits'\nimport { loadPeriodTypes } from './redux/actions/reportPeriod'\nimport { sectionOrder, sections } from './config/sections.config'\nimport AppRouter from './components/AppRouter'\n\nconst MUI3Theme = createMui3Theme(mui3theme)\n\nclass App extends PureComponent {\n    getChildContext() {\n        return { d2: this.props.d2 }\n    }\n\n    componentDidMount() {\n        this.props.loadOrganisationUnits()\n        this.props.loadPeriodTypes()\n        this.props.loadDataSetOptions()\n    }\n\n    render() {\n        // is not \"marked\" as required but it's used by Sidebar\n        const nonOnChangeSection = () => null\n        const sidebarSections = sectionOrder.map(sectionKey => {\n            const section = sections[sectionKey]\n            return {\n                ...section,\n                icon: section.info.icon,\n                label: section.info.label,\n                containerElement: <Link to={section.path} />,\n            }\n        })\n\n        return (\n            <D2UIApp>\n                <Mui3ThemeProvider theme={MUI3Theme}>\n                    <HeaderBar appName={i18n.t('Reports')} />\n                    <Sidebar\n                        sections={sidebarSections}\n                        onChangeSection={nonOnChangeSection}\n                        currentSection={this.props.currentSection}\n                    />\n                    <div className=\"content-wrapper\">\n                        <div className=\"content-area\">\n                            <AppRouter />\n                        </div>\n                    </div>\n                    <Loader />\n                </Mui3ThemeProvider>\n                <style jsx>{`\n                    .content-wrapper {\n                        margin-left: 295px;\n                        max-width: 1400px;\n                    }\n                    .content-area {\n                        padding: 1rem 20px 20px;\n                    }\n                `}</style>\n                <style jsx global>{`\n                    body {\n                        margin: 0;\n                        padding: 0;\n                    }\n\n                    html {\n                        background: #f3f3f3;\n                        font-family: 'Roboto', sans-serif;\n                    }\n\n                    h1 {\n                        font-size: 24px;\n                        font-weight: 300;\n                        letter-spacing: 1.2px;\n                        color: rgba(0, 0, 0, 0.87);\n                        display: flex;\n                        align-items: center;\n                        height: 48px;\n                    }\n\n                    .left-bar {\n                        width: 295px;\n                        position: fixed;\n                        bottom: 0;\n                        top: 0;\n                        left: 0;\n                        margin-top: 3rem;\n                    }\n\n                    .d2-ui-table {\n                        margin-bottom: 0 !important;\n                        margin-top: 0 !important;\n                    }\n\n                    .d2-ui-table__rows__row {\n                        font-size: 14px;\n                    }\n\n                    .data-table-pager--page-info {\n                        padding: 0 !important;\n                    }\n\n                    .data-table-pager--buttons {\n                        margin-top: 10px !important;\n                        margin-bottom: 10px !important;\n                    }\n\n                    .data-table-pager--buttons .material-icons {\n                        margin: 0 !important;\n                        padding: 0 !important;\n                    }\n\n                    #report-container table {\n                        width: 100% !important;\n                    }\n                `}</style>\n            </D2UIApp>\n        )\n    }\n}\n\nApp.propTypes = {\n    currentSection: PropTypes.string.isRequired,\n    d2: PropTypes.object.isRequired,\n    loadPeriodTypes: PropTypes.func.isRequired,\n    loadDataSetOptions: PropTypes.func.isRequired,\n    loadOrganisationUnits: PropTypes.func.isRequired,\n}\n\nApp.childContextTypes = {\n    d2: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    currentSection: state.router.location.pathname.substring(1),\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        loadOrganisationUnits,\n        loadPeriodTypes,\n        loadDataSetOptions,\n    }\n)(App)\n","import createHistory from 'history/createHashHistory'\nconst history = createHistory()\nexport default history\n","import { actionTypes as types } from '../actions/feedback'\n\nexport const defaultState = {\n    showSnackbar: false,\n    showLoader: false,\n    message: '',\n    type: '',\n}\n\nexport const feedback = (state = defaultState, { type, payload }) => {\n    switch (type) {\n        case types.FEEDBACK_CLEAR:\n            return defaultState\n\n        case types.FEEDBACK_SHOW_LOADER:\n            return {\n                ...state,\n                showLoader: true,\n            }\n\n        case types.FEEDBACK_SHOW_SNACKBAR:\n            return {\n                ...state,\n                ...payload,\n                showSnackbar: true,\n                showLoader: false,\n            }\n\n        default:\n            return state\n    }\n}\n","import { actionTypes } from '../actions/standardReport'\nimport { actionTypes as reportDataActionTypes } from '../actions/reportData'\nimport {\n    ADD_NEW_REPORT_ACTION,\n    CONTEXT_MENU_ACTION,\n} from '../../pages/standard-report/standard.report.conf'\n\nexport const defaultState = {\n    reports: [],\n    selectedReport: {},\n    selectedAction: '',\n    search: '',\n    open: false,\n    reportData: '',\n    loading: false,\n    loadingError: '',\n    requestDelete: false,\n    loadingDetails: false,\n    loadingSendReport: false,\n\n    reportParams: {},\n    reportParamsErrors: [],\n    showReportParams: false,\n}\n\n// eslint-disable-next-line complexity\nexport const standardReport = (state = defaultState, action = {}) => {\n    const { type, payload } = action\n\n    switch (type) {\n        case actionTypes.SET_SELECTED_REPORT:\n            return {\n                ...state,\n                selectedReport: payload,\n            }\n\n        case actionTypes.LOADING_STANDARD_REPORTS_START:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case actionTypes.LOADING_STANDARD_REPORTS_SUCCESS:\n            return {\n                ...state,\n                reports: payload,\n                loading: false,\n            }\n\n        case actionTypes.LOADING_STANDARD_REPORTS_ERROR:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        case actionTypes.SET_SEARCH:\n            return {\n                ...state,\n                search: payload,\n            }\n\n        case actionTypes.ADD_REPORT_FORM_SHOW:\n            return {\n                ...state,\n                open: true,\n                selectedReport: payload,\n                selectedAction: ADD_NEW_REPORT_ACTION,\n            }\n\n        case actionTypes.EDIT_REPORT_FORM_SHOW:\n            return {\n                ...state,\n                selectedReport: payload,\n                selectedAction: CONTEXT_MENU_ACTION.EDIT,\n            }\n\n        case actionTypes.CREATE_REPORT_SHOW:\n            return {\n                ...state,\n                open: true,\n                selectedReport: payload,\n                selectedAction: CONTEXT_MENU_ACTION.CREATE,\n            }\n\n        case actionTypes.SHARING_SETTINGS_SHOW:\n            return {\n                ...state,\n                open: true,\n                selectedReport: payload,\n                selectedAction: CONTEXT_MENU_ACTION.SHARING_SETTINGS,\n            }\n\n        case actionTypes.ADD_REPORT_FORM_HIDE:\n        case actionTypes.EDIT_REPORT_FORM_HIDE:\n        case actionTypes.CREATE_REPORT_HIDE:\n        case actionTypes.SHARIING_SETTINGS_HIDE:\n        case actionTypes.CLOSE_CONTEXT_MENU:\n            return {\n                ...state,\n                open: false,\n                selectedReport: {},\n                selectedAction: '',\n            }\n\n        case actionTypes.REQUEST_DELETE_STANDARD_REPORT:\n            return {\n                ...state,\n                requestDelete: true,\n                selectedReport: payload,\n                selectedAction: CONTEXT_MENU_ACTION.DELETE,\n            }\n\n        case actionTypes.DELETE_STANDARD_REPORT_START:\n            return {\n                ...state,\n                requestDelete: false,\n                loading: true,\n            }\n\n        case actionTypes.DELETE_STANDARD_REPORT_SUCCESS:\n            return {\n                ...state,\n                selectedReport: {},\n                selectedAction: '',\n                loading: false,\n            }\n\n        case actionTypes.DELETE_STANDARD_REPORT_ERROR:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        case actionTypes.LOADING_STANDARD_REPORTS_DETAILS_START:\n            return {\n                ...state,\n                loadingDetails: true,\n            }\n\n        case actionTypes.LOADING_STANDARD_REPORTS_DETAILS_SUCCESS:\n            return {\n                ...state,\n                open: true,\n                loadingDetails: false,\n                selectedReport: payload,\n            }\n\n        case actionTypes.LOADING_STANDARD_REPORTS_DETAILS_ERROR:\n            return {\n                ...state,\n                loadingDetails: false,\n            }\n\n        case actionTypes.STANDARD_REPORT_SEND_START:\n            return {\n                ...state,\n                loadingSendReport: true,\n            }\n\n        case actionTypes.STANDARD_REPORT_SEND_SUCCESS:\n        case actionTypes.STANDARD_REPORT_SEND_ERROR:\n            return {\n                ...state,\n                open: false,\n                loadingSendReport: false,\n            }\n\n        case actionTypes.DEFINE_REQUIRED_PARAMS:\n            return {\n                ...state,\n                reportParams: payload,\n                showReportParams: true,\n            }\n\n        case actionTypes.REQUIRED_PARAMS_ERROR:\n            return {\n                ...state,\n                reportParamsErrors: payload,\n            }\n\n        case actionTypes.GENERATE_PDF_REPORT:\n        case actionTypes.CANCEL_GENERATING_PDF_REPORT:\n        case reportDataActionTypes.LOADING_REPORT_DATA_SUCCESS:\n            return {\n                ...state,\n                reportParams: {},\n                reportParamsErrors: [],\n                showReportParams: false,\n            }\n\n        default:\n            return state\n    }\n}\n","import { actionTypes } from '../actions/standardReportTables'\n\nexport const defaultState = {\n    loading: false,\n    collection: [],\n}\n\nexport const standardReportTables = (\n    state = defaultState,\n    { type, payload } = {}\n) => {\n    switch (type) {\n        case actionTypes.STANDARD_REPORT_TABLES_LOADING_START:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case actionTypes.STANDARD_REPORT_TABLES_LOADING_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                collection: payload,\n            }\n\n        case actionTypes.STANDARD_REPORT_TABLES_LOADING_ERROR:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        default:\n            return state\n    }\n}\n","import { LOCATION_CHANGE } from 'connected-react-router'\nimport { actionTypes } from '../actions/reportPeriod'\n\nexport const ACTIONS = { LOCATION_CHANGE, ...actionTypes }\nexport const defaultState = {\n    loading: true,\n    collection: [],\n    selectedPeriodType: '',\n    selectedPeriod: '',\n}\n\nexport function reportPeriod(state = defaultState, { type, payload }) {\n    switch (type) {\n        case ACTIONS.REPORT_PERIOD_TYPES_RECEIVED:\n            return {\n                ...state,\n                loading: false,\n                collection: payload,\n            }\n\n        case ACTIONS.REPORT_PERIOD_TYPES_ERRORED:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        case ACTIONS.REPORT_PERIOD_TYPE_SELECTED:\n            return {\n                ...state,\n                selectedPeriodType: payload,\n                selectedPeriod: '',\n            }\n\n        case ACTIONS.REPORT_PERIOD_SELECTED:\n            return {\n                ...state,\n                selectedPeriod: payload,\n            }\n\n        case ACTIONS.LOCATION_CHANGE:\n            return {\n                ...defaultState,\n                loading: state.loading,\n                collection: state.collection,\n            }\n\n        default:\n            return state\n    }\n}\n","import { LOCATION_CHANGE } from 'connected-react-router'\nimport { actionTypes } from '../actions/organisationUnits'\n\nexport const ACTIONS = { LOCATION_CHANGE, ...actionTypes }\nexport const defaultState = {\n    loading: true,\n    collection: [],\n    selected: null,\n    selectedOptions: {},\n    showOptions: false,\n}\n\nexport function organisationUnits(state = defaultState, { type, payload }) {\n    switch (type) {\n        case ACTIONS.ORGANISATION_UNITS_RECEIVED:\n            return {\n                ...state,\n                loading: false,\n                collection: payload,\n            }\n\n        case ACTIONS.ORGANISATION_UNITS_ERRORED:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        case ACTIONS.ORGANISATION_UNIT_SELECTED:\n            return {\n                ...state,\n                selected: payload,\n            }\n\n        case ACTIONS.ORGANISATION_UNITS_OPTION_SELECTED:\n            return {\n                ...state,\n                selectedOptions: {\n                    ...state.selectedOptions,\n                    [payload.id]: payload.value,\n                },\n            }\n\n        case ACTIONS.TOGGLE_SHOW_OPTIONS:\n            return {\n                ...state,\n                showOptions: !state.showOptions,\n            }\n\n        case ACTIONS.LOCATION_CHANGE:\n            return {\n                ...defaultState,\n                loading: false,\n                collection: state.collection,\n            }\n\n        default:\n            return state\n    }\n}\n","import { LOCATION_CHANGE } from 'connected-react-router'\nimport { actionTypes } from '../actions/orgUnitGroupSets'\n\nexport const defaultState = {\n    loading: false,\n    collection: [],\n    selected: '',\n}\n\nexport function orgUnitGroupSets(state = defaultState, { type, payload } = {}) {\n    switch (type) {\n        case actionTypes.LOADING_GROUP_SETS_START:\n            return {\n                ...state,\n                loading: true,\n                collection: [],\n            }\n\n        case actionTypes.LOADING_GROUP_SETS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                collection: payload,\n            }\n\n        case actionTypes.LOADING_GROUP_SETS_ERROR:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        case actionTypes.SET_GROUP_SET:\n            return {\n                ...state,\n                selected: payload,\n            }\n\n        case LOCATION_CHANGE:\n            return {\n                ...defaultState,\n                collection: state.collection,\n            }\n\n        default:\n            return state\n    }\n}\n","import { LOCATION_CHANGE } from 'connected-react-router'\nimport { actionTypes } from '../actions/dataSet'\n\nexport const defaultSelected = { id: '', displayName: '' }\nexport const defaultState = {\n    loading: false,\n    selected: defaultSelected,\n    options: [],\n}\n\nexport const dataSet = (state = defaultState, { type, payload } = {}) => {\n    switch (type) {\n        case actionTypes.SELECT_DATA_SET:\n            return {\n                ...state,\n                selected: state.options.reduce(\n                    (curSelected, cur) =>\n                        cur.id === payload ? cur : curSelected,\n                    { id: '', displayName: '' }\n                ),\n            }\n\n        case actionTypes.LOADING_DATA_SET_OPTIONS_START:\n            return {\n                ...state,\n                loading: true,\n                loadingError: '',\n                options: [],\n            }\n\n        case actionTypes.LOADING_DATA_SET_OPTIONS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                options: payload,\n            }\n\n        case actionTypes.LOADING_DATA_SET_OPTIONS_ERROR:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        case LOCATION_CHANGE:\n            return {\n                ...state,\n                selected: defaultSelected,\n            }\n\n        default:\n            return state\n    }\n}\n","import { LOCATION_CHANGE } from 'connected-react-router'\nimport { actionTypes } from '../actions/dataSetDimensions'\n\nexport const defaultState = {\n    loading: false,\n    options: [],\n    selected: {},\n}\n\nexport const dataSetDimensions = (\n    state = defaultState,\n    { type, payload } = {}\n) => {\n    switch (type) {\n        case actionTypes.LOADING_DIMENSIONS_START:\n            return {\n                ...state,\n                loading: true,\n                options: [],\n            }\n\n        case actionTypes.LOADING_DIMENSIONS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                options: payload,\n            }\n\n        case actionTypes.LOADING_DIMENSIONS_ERROR:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        case actionTypes.SELECT_DIMENSION_OPTION:\n            return {\n                ...state,\n                selected: {\n                    ...state.selected,\n                    [payload.dimension]: payload.value,\n                },\n            }\n\n        case LOCATION_CHANGE:\n            return {\n                ...defaultState,\n            }\n\n        default:\n            return state\n    }\n}\n","import { actionTypes } from '../actions/dataSetReport'\n\nexport const defaultState = {\n    selectedUnitOnly: false,\n}\n\nexport const dataSetReport = (state = defaultState, { type, payload } = {}) => {\n    switch (type) {\n        case actionTypes.TOGGLE_SELECTED_UNIT_ONLY:\n            return {\n                ...state,\n                selectedUnitOnly: payload,\n            }\n\n        default:\n            return state\n    }\n}\n","import { LOCATION_CHANGE } from 'connected-react-router'\nimport { actionTypes } from '../actions/reportData'\n\nexport const defaultState = {\n    loading: false,\n    content: {},\n    comment: '',\n}\n\nexport const reportData = (state = defaultState, { type, payload } = {}) => {\n    switch (type) {\n        case actionTypes.LOADING_REPORT_DATA_START:\n            return {\n                ...state,\n                loading: true,\n                content: {},\n            }\n\n        case actionTypes.LOADING_REPORT_DATA_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                content: payload,\n            }\n\n        case actionTypes.LOADING_REPORT_DATA_ERROR:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        // @TODO: not sure this is needed.\n        // Not required for reporting-rate-summary\n        case actionTypes.UNSET_REPORT_DATA:\n            return {\n                ...state,\n                content: {},\n            }\n\n        case actionTypes.SET_DATA_SET_REPORT_COMMENT:\n            return {\n                ...state,\n                comment: payload,\n            }\n\n        case LOCATION_CHANGE:\n            return defaultState\n\n        default:\n            return state\n    }\n}\n","import { LOCATION_CHANGE } from 'connected-react-router'\nimport { actionTypes } from '../actions/pagination'\n\nconst allActionTypes = { ...actionTypes, LOCATION_CHANGE }\n\nexport const DEFAULT_PAGE_SIZE = 50\nexport const defaultState = {\n    pageSize: DEFAULT_PAGE_SIZE,\n    page: 1,\n    total: 0,\n    pageCount: 1,\n    nextPage: '',\n    prevPage: '',\n}\n\nexport const pagination = (state = defaultState, { type, payload } = {}) => {\n    switch (type) {\n        case allActionTypes.GO_TO_NEXT_PAGE:\n            return {\n                ...state,\n                page: state.page + 1,\n            }\n\n        case allActionTypes.GO_TO_PREV_PAGE:\n            return {\n                ...state,\n                page: state.page - 1,\n            }\n\n        case allActionTypes.SET_PAGINATION:\n            return payload\n\n        case actionTypes.RESET_PAGINATION:\n        case allActionTypes.LOCATION_CHANGE:\n            return defaultState\n\n        default:\n            return state\n    }\n}\n","import { actionTypes } from '../actions/orgUnitDistReport'\n\nexport const defaultState = {\n    shouldShowChart: false,\n}\n\nexport const orgUnitDistReport = (state = defaultState, { type } = {}) => {\n    switch (type) {\n        case actionTypes.SET_TABULAR_OUTPUT:\n            return { shouldShowChart: false }\n\n        case actionTypes.SET_CHART_OUTPUT:\n            return { shouldShowChart: true }\n\n        default:\n            return state\n    }\n}\n","import { actionTypes } from '../actions/resource'\nimport { resourceActions } from '../../utils/resource/constants'\n\nexport const defaultSelectedResource = { id: '', displayName: '' }\nexport const defaultState = {\n    open: false,\n    loading: false,\n    addEditLoading: false,\n    search: '',\n    collection: [],\n    selectedAction: '',\n    selectedResource: defaultSelectedResource,\n}\n\nexport const resource = (state = defaultState, { type, payload } = {}) => {\n    switch (type) {\n        case actionTypes.REQUEST_DELETE_RESOURCE:\n            return {\n                ...state,\n                selectedResource: payload,\n            }\n        case actionTypes.LOADING_RESOURCES_START:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case actionTypes.LOADING_RESOURCES_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                collection: payload,\n            }\n\n        case actionTypes.LOADING_RESOURCES_ERROR:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        case actionTypes.SET_RESOURCE_SEARCH:\n            return {\n                ...state,\n                search: payload,\n            }\n\n        case actionTypes.EDIT_RESOURCE:\n            return {\n                ...state,\n                open: true,\n                selectedResource: payload,\n                selectedAction: resourceActions.EDIT,\n            }\n\n        case actionTypes.SHOW_SHARING_SETTINGS:\n            return {\n                ...state,\n                open: true,\n                selectedResource: payload,\n                selectedAction: resourceActions.SHARING_SETTINGS,\n            }\n\n        case actionTypes.ADD_RESOURCE:\n            return {\n                ...state,\n                open: true,\n                selectedAction: resourceActions.NEW,\n            }\n\n        case actionTypes.DELETE_RESOURCE_START:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case actionTypes.DELETE_RESOURCE_SUCCESS:\n        case actionTypes.DELETE_RESOURCE_ERROR:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        case actionTypes.RESET_CONTEXT_MENU:\n            return {\n                ...state,\n                open: false,\n                selectedAction: '',\n                selectedResource: defaultSelectedResource,\n            }\n\n        case actionTypes.RESOURCE_ADD_LOADING_START:\n        case actionTypes.RESOURCE_EDIT_LOADING_START:\n            return {\n                ...state,\n                addEditLoading: true,\n            }\n\n        case actionTypes.RESOURCE_ADD_LOADING_SUCCESS:\n        case actionTypes.RESOURCE_EDIT_LOADING_SUCCESS:\n            return {\n                ...state,\n                addEditLoading: false,\n                open: false,\n                selectedAction: '',\n                selectedResource: defaultSelectedResource,\n            }\n\n        case actionTypes.RESOURCE_ADD_LOADING_ERROR:\n        case actionTypes.RESOURCE_EDIT_LOADING_ERROR:\n            return {\n                ...state,\n                addEditLoading: false,\n            }\n\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport history from '../utils/history'\n\nimport { feedback } from './reducers/feedback'\nimport { standardReport } from './reducers/standardReport'\nimport { standardReportTables } from './reducers/standardReportTables'\nimport { reportPeriod } from './reducers/reportPeriod'\nimport { organisationUnits } from './reducers/organisationUnits'\nimport { orgUnitGroupSets } from './reducers/orgUnitGroupSets'\nimport { dataSet } from './reducers/dataSet'\nimport { dataSetDimensions } from './reducers/dataSetDimensions'\nimport { dataSetReport } from './reducers/dataSetReport'\nimport { reportData } from './reducers/reportData'\nimport { pagination } from './reducers/pagination'\nimport { orgUnitDistReport } from './reducers/orgUnitDistReport'\nimport { resource } from './reducers/resource'\n\nexport default combineReducers({\n    router: connectRouter(history),\n    feedback,\n    standardReport,\n    standardReportTables,\n    dataSetReport,\n    reportPeriod,\n    organisationUnits,\n    orgUnitGroupSets,\n    dataSet,\n    dataSetDimensions,\n    reportData,\n    pagination,\n    orgUnitDistReport,\n    resource,\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport { routerMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport history from '../utils/history'\nimport rootReducer from './rootReducer'\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(routerMiddleware(history), reduxThunk))\n)\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\n\nimport enTranslations from './en/translations.json';\n\nconst namespace = 'reports-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","const langs = ['ar', 'fa', 'ur']\nconst prefixed = langs.map(c => `${c}-`)\n\nconst isLangRTL = code =>\n    langs.includes(code) || prefixed.filter(c => code.startsWith(c)).length > 0\n\nexport default isLangRTL\n","import i18n from './locales'\nimport isLangRTL from './isLangRTL'\n\nexport const configI18n = userSettings => {\n    const lang = userSettings.keyUiLocale\n    if (isLangRTL(lang)) {\n        document.body.setAttribute('dir', 'rtl')\n    }\n\n    i18n.changeLanguage(lang)\n}\n\nexport default configI18n\n","import i18n from '@dhis2/d2-i18n'\n\nconst d2UiTranslations = {\n    settings: i18n.t('Settings'),\n    app_search_placeholder: i18n.t('Search apps'),\n    profile: i18n.t('Profile'),\n    account: i18n.t('Account'),\n    help: i18n.t('Help'),\n    log_out: i18n.t('Log out'),\n    about_dhis2: i18n.t('About DHIS 2'),\n    manage_my_apps: i18n.t('Manage my apps'),\n    no_results_found: i18n.t('No results found'),\n    interpretations: i18n.t('Interpretations'),\n    messages: i18n.t('Messages'),\n    display_name: i18n.t('Name'),\n    report_table: i18n.t('Report Table'),\n    id: i18n.t('ID'),\n    createReport: i18n.t('Create'),\n    editReport: i18n.t('Edit Report'),\n    actions: i18n.t('Actions'),\n    delete: i18n.t('Delete'),\n    sharingSettings: i18n.t('Sharing Settings'),\n    viewResource: i18n.t('View Resource'),\n    editResource: i18n.t('Edit Resource'),\n    add_users_and_user_groups: i18n.t('Add users and user groups'),\n    enter_names: i18n.t('Enter names'),\n    share: i18n.t('Sharing settings'),\n    metadata: i18n.t('Permissions'),\n    created_by: i18n.t('Created By'),\n    who_has_access: i18n.t('Who has access'),\n    external_access: i18n.t('External access (without login)'),\n    can_edit_and_view: i18n.t('Can edit and view'),\n    can_view: i18n.t('Can view'),\n    can_view_only: i18n.t('Can view only'),\n    no_access: i18n.t('No access'),\n    public_access: i18n.t('Public access (with login)'),\n    public_can_edit: i18n.t('Public can edit'),\n    public_can_view: i18n.t('Public can view'),\n    anyone_can_find_view_and_edit: i18n.t('Public can find, view and edit'),\n    anyone_can_find_and_view: i18n.t('Public can find and view'),\n    close: i18n.t('Close'),\n    week: i18n.t('week'),\n    month: i18n.t('month'),\n    year: i18n.t('year'),\n    biMonth: i18n.t('bi monthly'),\n    day: i18n.t('day'),\n    jan: i18n.t('jan'),\n    feb: i18n.t('feb'),\n    mar: i18n.t('mar'),\n    apr: i18n.t('apr'),\n    may: i18n.t('may'),\n    jun: i18n.t('jun'),\n    jul: i18n.t('jul'),\n    aug: i18n.t('aug'),\n    sep: i18n.t('sep'),\n    oct: i18n.t('oct'),\n    nov: i18n.t('nov'),\n    dec: i18n.t('dec'),\n    'jan-feb': i18n.t('jan-feb'),\n    'mar-apr': i18n.t('mar-apr'),\n    'may-jun': i18n.t('may-jun'),\n    'jul-aug': i18n.t('jul-aug'),\n    'sep-oct': i18n.t('sep-oct'),\n    'nov-dec': i18n.t('nov-dec'),\n    'nov-apr': i18n.t('nov-apr'),\n    'may-oct': i18n.t('may-oct'),\n    quarter: i18n.t('quarter'),\n    Q1: i18n.t('Q1'),\n    Q2: i18n.t('Q2'),\n    Q3: i18n.t('Q3'),\n    Q4: i18n.t('Q4'),\n    sixMonth: i18n.t('six monthly'),\n    'jan-jun': i18n.t('jan-jun'),\n    'jul-dec': i18n.t('jul-dec'),\n    'apr-sep': i18n.t('apr-sep'),\n    'oct-mar': i18n.t('oct-mar'),\n    biWeek: i18n.t('Bi-Week'),\n    bi_week: i18n.t('Bi-Week'),\n}\n\nconst injectTranslationsToD2 = d2 => {\n    if (d2) {\n        Object.assign(d2.i18n.translations, d2UiTranslations)\n    }\n}\n\nexport default injectTranslationsToD2\n","import 'typeface-roboto'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { getUserSettings, init } from 'd2'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './redux/store'\nimport * as serviceWorker from './serviceWorker'\nimport { getD2, initApi } from './utils/api'\nimport history from './utils/history'\nimport { configI18n } from './utils/i18n/configI18n'\nimport injectTranslationsToD2 from './utils/i18n/injectTranslationsToD2'\n\nconst { REACT_APP_DHIS2_BASE_URL } = process.env\n\n// init d2 with configs\ninit({\n    baseUrl: `${REACT_APP_DHIS2_BASE_URL}/api/`,\n    schemas: [\n        'dataApprovalLevel',\n        'dataSet',\n        'organisationUnit',\n        'organisationUnitGroupSet',\n        'report',\n        'reportTable',\n    ],\n})\n    .then(initApi)\n    .then(getUserSettings)\n    .then(configI18n)\n    .then(() => {\n        const d2Instance = getD2()\n        injectTranslationsToD2(d2Instance)\n        ReactDOM.render(\n            <Provider store={store}>\n                <ConnectedRouter history={history}>\n                    <App d2={d2Instance} />\n                </ConnectedRouter>\n            </Provider>,\n            document.getElementById('root')\n        )\n    })\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.register()\n"],"sourceRoot":""}